{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/UploadS3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { uploadFile } from 'react-s3';\nimport dotenv from 'dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndotenv.config();\nconst S3_BUCKET = required(\"REACT_APP_BUCKET_NAME\");\nconst REGION = required(\"REACT_APP_REGION\");\nconst ACCESS_KEY = required(\"REACT_APP_ACCESS_KEY\");\nconst SECRET_ACCESS_KEY = required(\"REACT_APP_ACCESS_SECRET_KEY\");\n\nfunction required(key, defaultValue = undefined) {\n  const value = process.env[key] || defaultValue;\n\n  if (value == null) {\n    throw new Error(`Key ${key} is undefined`);\n  }\n\n  return value;\n}\n\nconst config = {\n  bucketName: S3_BUCKET,\n  region: REGION,\n  accessKeyId: ACCESS_KEY,\n  secretAccessKey: SECRET_ACCESS_KEY\n};\n\nconst UploadS3 = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e, file) => {\n    e.preventDefault();\n    uploadFile(file, config).then(data => console.log(data)).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://hanbucket-test.s3.ap-northeast-2.amazonaws.com/nginx.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"React S3 File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => empty,\n      children: \" Upload to S3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleUpload(e, selectedFile),\n      children: \" Upload to S3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UploadS3, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n\n_c = UploadS3;\nexport default UploadS3;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadS3\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/UploadS3.js"],"names":["React","useState","uploadFile","dotenv","config","S3_BUCKET","required","REGION","ACCESS_KEY","SECRET_ACCESS_KEY","key","defaultValue","undefined","value","process","env","Error","bucketName","region","accessKeyId","secretAccessKey","UploadS3","selectedFile","setSelectedFile","handleFileInput","e","target","files","handleUpload","file","preventDefault","then","data","console","log","catch","err","error","empty"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AACAA,MAAM,CAACC,MAAP;AAIA,MAAMC,SAAS,GAAEC,QAAQ,CAAC,uBAAD,CAAzB;AACA,MAAMC,MAAM,GAAED,QAAQ,CAAC,kBAAD,CAAtB;AACA,MAAME,UAAU,GAAEF,QAAQ,CAAC,sBAAD,CAA1B;AACA,MAAMG,iBAAiB,GAAEH,QAAQ,CAAC,6BAAD,CAAjC;;AAGA,SAASA,QAAT,CAAkBI,GAAlB,EAAuBC,YAAY,GAAGC,SAAtC,EAAiD;AAC7C,QAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYL,GAAZ,KAAoBC,YAAlC;;AACA,MAAGE,KAAK,IAAI,IAAZ,EAAkB;AACd,UAAM,IAAIG,KAAJ,CAAW,OAAMN,GAAI,eAArB,CAAN;AACH;;AACD,SAAOG,KAAP;AACH;;AAED,MAAMT,MAAM,GAAG;AACXa,EAAAA,UAAU,EAAEZ,SADD;AAEXa,EAAAA,MAAM,EAAEX,MAFG;AAGXY,EAAAA,WAAW,EAAEX,UAHF;AAIXY,EAAAA,eAAe,EAAEX;AAJN,CAAf;;AAOA,MAAMY,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMuB,eAAe,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACH,GAFD;;AAKA,QAAMC,YAAY,GAAG,OAAOH,CAAP,EAAUI,IAAV,KAAmB;AACpCJ,IAAAA,CAAC,CAACK,cAAF;AACA5B,IAAAA,UAAU,CAAC2B,IAAD,EAAOzB,MAAP,CAAV,CACK2B,IADL,CACUC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CADlB,EAEKG,KAFL,CAEWC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAFlB;AAGH,GALD;;AAOA,sBAAO;AAAA,4BAEP;AAAK,MAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFO,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,eAKH;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA,YALG,eAMH;AAAQ,MAAA,OAAO,EAAGC,CAAD,IAAOa,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANG,eAOH;AAAQ,MAAA,OAAO,EAAGb,CAAD,IAAOG,YAAY,CAACH,CAAD,EAAIH,YAAJ,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH,CA1BD;;GAAMD,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React , {useState} from 'react';\nimport { uploadFile } from 'react-s3';\nimport dotenv from 'dotenv'\ndotenv.config()\n\n\n\nconst S3_BUCKET =required(\"REACT_APP_BUCKET_NAME\");\nconst REGION =required(\"REACT_APP_REGION\");\nconst ACCESS_KEY =required(\"REACT_APP_ACCESS_KEY\");\nconst SECRET_ACCESS_KEY =required(\"REACT_APP_ACCESS_SECRET_KEY\");\n\n\nfunction required(key, defaultValue = undefined) {\n    const value = process.env[key] || defaultValue;\n    if(value == null) {\n        throw new Error(`Key ${key} is undefined`);\n    }\n    return value;\n}\n\nconst config = {\n    bucketName: S3_BUCKET,\n    region: REGION,\n    accessKeyId: ACCESS_KEY,\n    secretAccessKey: SECRET_ACCESS_KEY,\n}\n\nconst UploadS3 = () => {\n\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0]);\n    }\n\n\n    const handleUpload = async (e, file) => {\n        e.preventDefault()\n        uploadFile(file, config)\n            .then(data => console.log(data))\n            .catch(err => console.error(err))\n    }\n    \n    return <div>\n    \n    <img src=\"https://hanbucket-test.s3.ap-northeast-2.amazonaws.com/nginx.png\"></img>\n\n        <div>React S3 File Upload</div>\n        <input type=\"file\" onChange={handleFileInput}/>\n        <button onClick={(e) => empty}> Upload to S3</button>\n        <button onClick={(e) => handleUpload(e, selectedFile)}> Upload to S3</button>\n\n    </div>\n}\n\nexport default UploadS3;"]},"metadata":{},"sourceType":"module"}