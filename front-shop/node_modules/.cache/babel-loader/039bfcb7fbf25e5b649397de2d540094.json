{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Container, Row, Col, Button } from 'react-bootstrap';\nimport Title from './Title';\nimport { useSelector } from 'react-redux';\nimport placeholder from '../images/placeholder2.jpg';\nimport EmptyCheck from './EmptyCheck';\nimport { CategoryDirection } from './CategoryBanner';\nimport { setMoney, setDate } from './Convenient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderList({\n  history\n}) {\n  _s();\n\n  var products = [];\n  const [orders, setOrders] = useState([]);\n  const {\n    isLoggedIn,\n    userData\n  } = useSelector(state => ({\n    isLoggedIn: state.user.isLoggedIn,\n    userData: state.user.payload\n  }));\n\n  const fetchOrders = async () => {\n    await axios.get('/apis/v1/order/' + userData.user_id).then(res => {\n      console.log(res.data.payload.payload);\n      let tmp_orders = res.data.payload.payload.filter(order => order.sales_stage != 'SO');\n      let orderlist = tmp_orders.map((order, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              margin: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: '22rem'\n                },\n                src: order.base64_image_url ? order.base64_image_url : placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '1.3rem'\n                  },\n                  children: order.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '1.3rem'\n                  },\n                  children: [\"\\uC218\\uB7C9: \", order.demand_quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '1.3rem'\n                  },\n                  children: [\"\\uC9C0\\uBD88 \\uAE08\\uC561: \", setMoney(order.price), \" \\uC6D0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '1.3rem'\n                  },\n                  children: [\"\\uC8FC\\uBB38\\uC77C: \", setDate(order.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '1.3rem'\n                  },\n                  children: [\"\\uC8FC\\uBB38 \\uC0C1\\uD0DC: \", order.sales_stage == 'S' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold',\n                      fontSize: '1.3rem'\n                    },\n                    children: \"\\uD310\\uB9E4\\uC790\\uC758 \\uD655\\uC778\\uC744 \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: \"\\uC608\\uC57D\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uD310\\uB9E4\\uC790\\uC640 \\uAC70\\uB798\\uD558\\uC138\\uC694\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 117\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    connectSeller(order.seller_id);\n                  },\n                  children: \"\\uD310\\uB9E4\\uC790\\uC5D0\\uAC8C \\uC5F0\\uB77D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this);\n      });\n      setOrders(orderlist);\n    });\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, [userData.user_id]);\n\n  const connectSeller = async seller_id => {\n    let res = await axios.get(`/apis/v1/user/${seller_id}`);\n    let tmp = res.data.payload.payload.phone_number;\n    let phone_number = tmp.slice(0, 3) + '-' + tmp.slice(3, 7) + '-' + tmp.slice(7, 11);\n    alert(`[${phone_number}]로 연락해주세요!`);\n  };\n\n  const result = () => {\n    if (orders.length == 0) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC8FC\\uBB38\\uD55C \\uC0C1\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryDirection, {\n        tag1: '주문 목록'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(EmptyCheck, {\n        text: \"주문한 상품이 없습니다\",\n        items: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 13\n  }, this);\n}\n\n_s(OrderList, \"ww+4pVxqTcqcWC8DrBK6okcJtLY=\", false, function () {\n  return [useSelector];\n});\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/OrderList.js"],"names":["React","useState","useEffect","axios","ListGroup","Container","Row","Col","Button","Title","useSelector","placeholder","EmptyCheck","CategoryDirection","setMoney","setDate","OrderList","history","products","orders","setOrders","isLoggedIn","userData","state","user","payload","fetchOrders","get","user_id","then","res","console","log","data","tmp_orders","filter","order","sales_stage","orderlist","map","index","margin","width","base64_image_url","fontSize","name","demand_quantity","price","created_at","color","fontWeight","connectSeller","seller_id","tmp","phone_number","slice","alert","result","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport placeholder from '../images/placeholder2.jpg'\nimport EmptyCheck from './EmptyCheck'\nimport { CategoryDirection } from './CategoryBanner'\nimport {setMoney, setDate} from './Convenient'\n\n\nfunction OrderList({history}){\n    var products = []\n    const [orders, setOrders] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n    const fetchOrders= async()=>{\n            await axios.get('/apis/v1/order/' + userData.user_id).then(res=> {\n                console.log(res.data.payload.payload)\n                let tmp_orders = res.data.payload.payload.filter(order=> order.sales_stage!='SO')\n                let orderlist = tmp_orders.map((order, index) => {\n                    return (\n                            \n                             <ListGroup.Item key={index}>\n                            <Row style={{margin:20}}>\n                            <Col md={4}>\n                            <img style={{width:'22rem'}} src={order.base64_image_url?order.base64_image_url:placeholder}></img>\n                            </Col>\n                            <Col md={8}>\n                           <div style={{margin:20}}>\n                            \n                            <p style={{fontSize:'1.3rem'}}>\n                            {order.name}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            수량: {order.demand_quantity}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            지불 금액: {setMoney(order.price)} 원\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            주문일: {setDate(order.created_at)}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            주문 상태: {order.sales_stage=='S'?\n                            <span style={{color:'red',fontWeight:'bold', fontSize:'1.3rem'}}>판매자의 확인을 기다려주세요</span>:<span style={{color:'green', fontWeight:'bold'}}>예약되었습니다! 판매자와 거래하세요</span>}\n                            </p>\n                            <Button onClick={()=>{\n                                connectSeller(order.seller_id)\n                            }}>판매자에게 연락하기</Button>\n            \n                            <br/>\n                            \n                            </div>\n                            \n                            </Col>\n                            </Row>\n                            </ListGroup.Item>\n                       \n                        \n                  );\n                })\n                setOrders(orderlist);  \n        \n                \n            })\n            \n            \n        \n    }\n\n    useEffect(()=>{\n        fetchOrders()\n    },[userData.user_id])\n    \n\n    const connectSeller = async(seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`)\n        let tmp = res.data.payload.payload.phone_number\n        let phone_number = tmp.slice(0,3) + '-'+tmp.slice(3,7) + '-'+tmp.slice(7,11) \n        alert(`[${phone_number}]로 연락해주세요!`)\n    }\n    \n    const result = () => {\n        if(orders.length == 0){\n            return(<Row>\n                <Col>\n                    <h2>주문한 상품이 없습니다.</h2>\n                </Col>\n            </Row>);\n        }\n        else{\n            return (\n                <ListGroup>\n                {orders}\n                </ListGroup>\n            );\n\n        }\n    }\n\n\n    return (<div>\n         <Container>\n         <CategoryDirection tag1={'주문 목록'}></CategoryDirection>\n       \n          \n        <EmptyCheck text={\"주문한 상품이 없습니다\"} items={orders}></EmptyCheck>\n        </Container>\n        \n\n    </div>)\n}\n\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}