{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport ImageUploading from 'react-images-uploading';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const maxNumber = 2;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  }; // 추가\n\n\n  const onError = (errors, files) => {\n    if (errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`);\n    }\n  };\n\n  const onClick = async () => {\n    let body = {\n      product_id: 2,\n      ...images\n    };\n    await axios.post(\"/apis/image/upload\", body).then(res => {\n      console.log(res);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImageUploading, {\n      multiple: true,\n      value: images,\n      onChange: onChangeImage,\n      maxNumber: maxNumber,\n      dataURLKey: \"data_url\",\n      onError: onError // 추가\n      ,\n      children: ({\n        imageList,\n        onImageUpload,\n        onImageRemoveAll,\n        onImageUpdate,\n        onImageRemove,\n        isDragging,\n        dragProps\n      }) =>\n      /*#__PURE__*/\n      // write your building UI\n      _jsxDEV(\"div\", {\n        className: \"upload__image-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: isDragging ? {\n            color: 'red'\n          } : undefined,\n          onClick: onImageUpload,\n          ...dragProps,\n          children: \"\\uC0AC\\uC9C4\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onImageRemoveAll,\n          children: \"Remove all images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this), imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image['data_url'],\n            alt: \"\",\n            width: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-item__btn-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onImageUpdate(index),\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onImageRemove(index),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClick,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ImageUpload, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/ImageUpload.js"],"names":["React","useState","Button","ImageUploading","axios","ImageUpload","images","setImages","maxNumber","onChangeImage","imageList","addUpdateIndex","console","log","onError","errors","files","alert","onClick","body","product_id","post","then","res","catch","e","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","color","undefined","map","image","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport ImageUploading from 'react-images-uploading';\nimport axios from 'axios'\n\n\nfunction ImageUpload() {\n\n  const [images, setImages] = useState([]);\n  const maxNumber = 2;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  };\n\n  // 추가\n  const onError = (errors, files) => {\n    if(errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n    }\n  }\n\n  const onClick = async () => {\n    \n    let body = {\n      product_id: 2,\n      ...images\n    }\n    await axios.post(\"/apis/image/upload\",body).then(res => {\n      console.log(res)\n    })\n    .catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  return (\n    <>\n      <ImageUploading\n        multiple\n        value={images}\n        onChange={onChangeImage}\n        maxNumber={maxNumber}\n        dataURLKey=\"data_url\"\n        onError={onError}\t\t\t// 추가\n        >\n        {({\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps,\n        }) => (\n          // write your building UI\n          <div className=\"upload__image-wrapper\">\n            <button\n              style={isDragging ? { color: 'red' } : undefined}\n              onClick={onImageUpload}\n              {...dragProps}\n            >\n             사진추가\n            </button>\n            &nbsp;\n           <button onClick={onImageRemoveAll}>Remove all images</button>\n            {imageList.map((image, index) => (\n              <div key={index} className=\"image-item\">\n                <img src={image['data_url']} alt=\"\" width=\"500\" />\n                <div className=\"image-item__btn-wrapper\">\n                  <button onClick={() => onImageUpdate(index)}>수정</button>\n                  <button onClick={() => onImageRemove(index)}>삭제</button>\n                </div>\n              </div>\n            ))}\n          </div>\n       \n        )}\n\n       \n      </ImageUploading>\n      <div>\n        <Button onClick={onClick}>submit</Button>\n        </div>\n    </>\n  )\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}