{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from './components/Modals/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"\\uBAA8\\uB2EC\\uD31D\\uC5C5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), \"//header \\uBD80\\uBD84\\uC5D0 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC785\\uB825\\uD55C\\uB2E4.\", /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      close: closeModal,\n      header: \"Modal heading\",\n      children: [\"// Modal.js \", /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [\" \", props.children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this), \"\\uC5D0 \\uB0B4\\uC6A9\\uC774 \\uC785\\uB825\\uB41C\\uB2E4. \\uB9AC\\uC561\\uD2B8 \\uD568\\uC218\\uD615 \\uBAA8\\uB2EC \\uD31D\\uC5C5\\uCC3D\\uC785\\uB2C8\\uB2E4. \\uC27D\\uAC8C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uC5B4\\uC694. \\uAC19\\uC774 \\uB9CC\\uB4E4\\uC5B4\\uBD10\\uC694!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"4WKhQ/Cs7f6+2hEqv7m6lmVEtsE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/App.js"],"names":["React","useState","Modal","App","modalOpen","setModalOpen","openModal","closeModal","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACpBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACrBF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAGC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,iGAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAGF,SAAd;AAA0B,MAAA,KAAK,EAAGG,UAAlC;AAA+C,MAAA,MAAM,EAAC,eAAtD;AAAA,8CAEgB;AAAA,wBAASC,KAAK,CAACC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxBQN,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Modal from './components/Modals/Modal';\n\nfunction App() {\n    // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\n    const [ modalOpen, setModalOpen ] = useState(false);\n\n    const openModal = () => {\n        setModalOpen(true);\n    }\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <button onClick={ openModal }>모달팝업</button>\n            //header 부분에 텍스트를 입력한다.\n            <Modal open={ modalOpen } close={ closeModal } header=\"Modal heading\">\n\n                // Modal.js <main> { props.children } </main>에 내용이 입력된다. \n                리액트 함수형 모달 팝업창입니다.\n                쉽게 만들 수 있어요. \n                같이 만들어봐요!\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}