{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/ProductRegister.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { Form, Container, Button, Row, Col } from 'react-bootstrap';\nimport Title from './Title';\nimport ImageUploading from 'react-images-uploading';\nimport { CategoryDirection } from './CategoryBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const maxNumber = 4;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  }; // 추가\n\n\n  const onError = (errors, files) => {\n    if (errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n\n_c = ImageUpload;\n\nfunction ProductRegister({\n  history\n}) {\n  _s2();\n\n  const {\n    isLoggedIn,\n    userData\n  } = useSelector(state => ({\n    isLoggedIn: state.user.isLoggedIn,\n    userData: state.user.payload\n  }));\n  const {\n    kind\n  } = useSelector(state => ({\n    kind: state.category.payload\n  }));\n  const [images, setImages] = useState([]);\n  const maxNumber = 4;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  };\n\n  const onError = (errors, files) => {\n    if (errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`);\n    }\n  };\n\n  const displayCategory = kind.map((k, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: k.kind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  });\n  const [product, setProduct] = useState({\n    name: \"\",\n    category: kind[0].kind,\n    price: null,\n    quantity: 1,\n    description: \"\"\n  });\n  const {\n    name,\n    category,\n    price,\n    quantity,\n    description\n  } = product;\n\n  const onChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n    console.log(product);\n  };\n\n  const onClickHandler = e => {\n    let category_number = kind.findIndex(k => k.kind === category) + 1;\n    let image_list = images.map((img, index) => img.data_url);\n    console.log(image_list);\n    e.preventDefault();\n    const body = {\n      seller_id: userData.user_id,\n      name: name,\n      category_id: category_number,\n      price: price,\n      quantity: quantity,\n      description: description,\n      ...image_list // 용량이 크면 안넘어가\n\n    };\n\n    if (!(name && category_number && price && quantity && description && image_list.length)) {\n      alert('모든 항목을 입력해 주세요.');\n      return;\n    }\n\n    axios.post('/apis/v1/product/', body).then(response => {\n      alert(\"상품이 등록되었습니다\");\n      history.replace('/');\n    }).catch(e => {\n      console.log(e);\n      alert(\"상품 등록에 실패하였습니다. 관리자에게 문의하세요.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryDirection, {\n        tag1: '판매하기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '1.3rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(ProductRegister, \"IuGVoCLag2dNGDDftHfi1IUBhHE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c2 = ProductRegister;\nexport default ProductRegister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageUpload\");\n$RefreshReg$(_c2, \"ProductRegister\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/ProductRegister.js"],"names":["React","useState","useSelector","useDispatch","axios","Form","Container","Button","Row","Col","Title","ImageUploading","CategoryDirection","ImageUpload","images","setImages","maxNumber","onChangeImage","imageList","addUpdateIndex","console","log","onError","errors","files","alert","ProductRegister","history","isLoggedIn","userData","state","user","payload","kind","category","displayCategory","map","k","index","product","setProduct","name","price","quantity","description","onChangeHandler","e","value","target","onClickHandler","category_number","findIndex","image_list","img","data_url","preventDefault","body","seller_id","user_id","category_id","length","post","then","response","replace","catch","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport axios from 'axios'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport Title from './Title'\nimport ImageUploading from 'react-images-uploading';\nimport { CategoryDirection } from './CategoryBanner'\n\n\n\nfunction ImageUpload() {\n\n  const [images, setImages] = useState([]);\n  const maxNumber = 4;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  };\n\n  // 추가\n  const onError = (errors, files) => {\n    if(errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n    }\n  }\n\n  return (\n    <Container>\n     \n    </Container>\n  )\n}\n\n\n\nfunction ProductRegister({history}){\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n    const {kind} = useSelector(state => ({\n        kind: state.category.payload\n    }))\n    const [images, setImages] = useState([]);\n    const maxNumber = 4;\n  \n    const onChangeImage = (imageList, addUpdateIndex) => {\n      console.log(imageList, addUpdateIndex);\n      setImages(imageList);\n    };\n\n    const onError = (errors, files) => {\n      if(errors.maxNumber) {\n        alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n      }\n    }\n  \n    \n    const displayCategory = kind.map((k, index) => {\n        return (\n            <option>{k.kind}</option>\n           \n        );\n    }\n    );\n        \n    const [product, setProduct] = useState({\n        name: \"\",\n        category: kind[0].kind,\n        price: null,\n        quantity: 1,\n        description: \"\",\n\n    })\n\n    \n    const {name, category, price, quantity, description} = product\n    \n\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setProduct({\n            ...product,\n            [name]: value\n        })\n        console.log(product)\n    };\n\n\n    const onClickHandler = (e)=>{\n        let category_number = kind.findIndex((k) => k.kind === category) + 1\n        let image_list = images.map((img, index) => (img.data_url))\n        console.log(image_list)\n        e.preventDefault();\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            category_id: category_number,\n            price: price,\n            quantity: quantity,\n            description: description,\n            ...image_list  // 용량이 크면 안넘어가\n        };\n        if(!(name && category_number && price && quantity && description && image_list.length)){\n            alert('모든 항목을 입력해 주세요.');\n            return;\n        }\n  \n    \n        axios.post('/apis/v1/product/', body)\n        .then(response => {\n            alert(\"상품이 등록되었습니다\")\n            history.replace('/')\n        }).catch(e =>{\n            console.log(e)\n            alert(\"상품 등록에 실패하였습니다. 관리자에게 문의하세요.\")\n     \n        })\n\n    }\n\n    \n    return(<div>\n        \n        <Container>\n            <CategoryDirection tag1={'판매하기'}></CategoryDirection>\n            <br/>\n            <div style={{fontSize:'1.3rem'}}>\n            <Row>\n                <Col>\n                </Col>\n            </Row>\n            \n\n\n            </div>\n        \n            \n  \n            \n        </Container>\n        \n            \n    </div>\n\n    );\n\n}\n\nexport default ProductRegister;"]},"metadata":{},"sourceType":"module"}