{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/LikeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Container, Row, Col, Button } from 'react-bootstrap';\nimport Title from './Title';\nimport { useSelector } from 'react-redux';\nimport EmptyCheck from './EmptyCheck';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Likes({\n  history\n}) {\n  _s();\n\n  // var products = []\n  const [carts, setCarts] = useState([]);\n  const {\n    isLoggedIn,\n    userData\n  } = useSelector(state => ({\n    isLoggedIn: state.user.isLoggedIn,\n    userData: state.user.payload\n  }));\n\n  const fetchCarts = async () => {\n    let res = await axios.get('/apis/v1/carts/users/' + userData.user_id);\n    let cartList = res.data.payload.payload;\n    let res_product = await axios.get('/apis/v1/product/');\n    let productList = res_product.data.payload.payload;\n    console.log(cartList);\n    console.log(productList);\n    cartList = cartList.map((cart, index) => {\n      const tmp_product = productList.find(product => product.pk == cart.productId);\n      let path = `/product/${tmp_product.pk}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: path,\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              style: {\n                margin: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    width: '22rem'\n                  },\n                  src: tmp_product.base64_image_url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uC0C1\\uD488\\uBA85: \", tmp_product.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uC218\\uB7C9: \", tmp_product.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uC9C0\\uBD88 \\uAE08\\uC561: \", tmp_product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uCC1C\\uD55C \\uB0A0\\uC9DC: \", cart.createdAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    });\n    setCarts(cartList); // let tmp_carts = res.data.payload.payload.filter(cart=> cart.sales_stage!='SO')\n    // let cartList = res.data.payload.payload.map((cart, index) => {\n    //     return (\n    // );\n    // })\n    // setcarts(cartlist);  \n  };\n\n  useEffect(() => {\n    fetchCarts();\n  }, [userData.user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(EmptyCheck, {\n        text: \"찜한 상품이 없습니다\",\n        items: carts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Likes, \"iCxaNdTmpqtT0Ig+IMqz7bvZesk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Likes;\nexport default Likes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/LikeList.js"],"names":["React","useState","useEffect","axios","ListGroup","Container","Row","Col","Button","Title","useSelector","EmptyCheck","Link","Likes","history","carts","setCarts","isLoggedIn","userData","state","user","payload","fetchCarts","res","get","user_id","cartList","data","res_product","productList","console","log","map","cart","index","tmp_product","find","product","pk","productId","path","textDecoration","color","margin","width","base64_image_url","marginLeft","name","quantity","price","createdAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport EmptyCheck from './EmptyCheck'\nimport { Link } from 'react-router-dom'\n\n\n\n\nfunction Likes({history}){\n    // var products = []\n    const [carts, setCarts] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n        const fetchCarts= async()=>{\n            let res = await axios.get('/apis/v1/carts/users/' + userData.user_id);\n            let cartList = res.data.payload.payload;\n            let res_product = await axios.get('/apis/v1/product/');\n            let productList = res_product.data.payload.payload;\n            console.log(cartList);\n            console.log(productList);\n            \n            cartList = cartList.map((cart, index) => {\n                \n                const tmp_product = productList.find((product) => product.pk == cart.productId);\n                let path = `/product/${tmp_product.pk}`\n                return (\n                    <div>\n                        <Link to={path} style={{textDecoration:'none', color:'inherit'}}>\n                    \n                        <ListGroup.Item key={index}>\n                        <Row style={{margin:20}}>\n                        <Col md={4}>\n                        <img style={{width:'22rem'}} src={tmp_product.base64_image_url}></img>\n                        </Col>\n                        <Col md={8}>\n                    <div style={{marginLeft:20}}>\n                        \n                        <p>\n                        상품명: {tmp_product.name}\n                        </p>\n                        <p>\n                        수량: {tmp_product.quantity}\n                        </p>\n                        <p>\n                        지불 금액: {tmp_product.price}\n                        </p>\n                        <p>\n                        찜한 날짜: {cart.createdAt}\n                        </p>\n                        <p>\n                        {/* 주문 상태: {cart.sales_stage=='S'? */}\n                        {/* <span style={{color:'red'}}>판매자의 확인을 기다려주세요</span>:<span style={{color:'green'}}>예약되었습니다! 판매자와 거래하세요</span>} */}\n                        </p>\n                        {/* <Button onClick={()=>{\n                            // connectSeller(cart.seller_id)\n                        }}>판매자에게 연락하기</Button> */}\n        \n                        <br/>\n                        \n                        </div>\n                        \n                        </Col>\n                        </Row>\n                        </ListGroup.Item>\n                        </Link>\n                    </div>\n                    \n                );\n\n            });\n\n            setCarts(cartList);\n            // let tmp_carts = res.data.payload.payload.filter(cart=> cart.sales_stage!='SO')\n            // let cartList = res.data.payload.payload.map((cart, index) => {\n            //     return (\n                        \n                        \n                \n                    \n            // );\n            // })\n            // setcarts(cartlist);  \n\n            \n        }\n\n    useEffect(()=>{\n        fetchCarts()\n    },[userData.user_id])\n\n\n    return (<div>\n        \n        <Container>\n        <EmptyCheck text={\"찜한 상품이 없습니다\"} items={carts}></EmptyCheck>\n        </Container>\n\n    </div>)\n}\n\nexport default Likes;"]},"metadata":{},"sourceType":"module"}