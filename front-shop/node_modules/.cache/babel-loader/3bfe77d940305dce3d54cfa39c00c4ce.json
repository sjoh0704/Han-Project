{"ast":null,"code":"var _jsxFileName = \"/home/seung/react/shop/front-shop/src/components/LikeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Container, Row, Col, Button } from 'react-bootstrap';\nimport Title from './Title';\nimport { useSelector } from 'react-redux';\nimport EmptyCheck from './EmptyCheck';\nimport { Link } from 'react-router-dom';\nimport { CategoryDirection } from './CategoryBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Likes({\n  history\n}) {\n  _s();\n\n  // var products = []\n  const [carts, setCarts] = useState([]);\n  const {\n    isLoggedIn,\n    userData\n  } = useSelector(state => ({\n    isLoggedIn: state.user.isLoggedIn,\n    userData: state.user.payload\n  }));\n\n  const fetchCarts = async () => {\n    let res = await axios.get('/apis/v1/carts/users/' + userData.user_id);\n    let cartList = res.data.payload.payload;\n    let res_product = await axios.get('/apis/v1/product/');\n    let productList = res_product.data.payload.payload;\n    console.log(cartList);\n    console.log(productList);\n    cartList = cartList.map((cart, index) => {\n      console.log(productList);\n      const tmp_product = productList.find(product => product.pk == cart.productId);\n\n      if (tmp_product) {}\n    });\n    setCarts(cartList); // let tmp_carts = res.data.payload.payload.filter(cart=> cart.sales_stage!='SO')\n    // let cartList = res.data.payload.payload.map((cart, index) => {\n    //     return (\n    // );\n    // })\n    // setcarts(cartlist);  \n  };\n\n  useEffect(() => {\n    fetchCarts();\n  }, [userData.user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryDirection, {\n        tag1: '찜 목록'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmptyCheck, {\n        text: \"찜한 상품이 없습니다\",\n        items: carts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Likes, \"iCxaNdTmpqtT0Ig+IMqz7bvZesk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Likes;\nexport default Likes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"sources":["/home/seung/react/shop/front-shop/src/components/LikeList.js"],"names":["React","useState","useEffect","axios","ListGroup","Container","Row","Col","Button","Title","useSelector","EmptyCheck","Link","CategoryDirection","Likes","history","carts","setCarts","isLoggedIn","userData","state","user","payload","fetchCarts","res","get","user_id","cartList","data","res_product","productList","console","log","map","cart","index","tmp_product","find","product","pk","productId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,MAAxC,QAAqD,iBAArD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;;AAKA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAyB;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACiB,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAyBT,WAAW,CAACU,KAAK,KAAI;AAChDF,IAAAA,UAAU,EAAEE,KAAK,CAACC,IAAN,CAAWH,UADyB;AAEhDC,IAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWC;AAF2B,GAAJ,CAAN,CAA1C;;AAOI,QAAMC,UAAU,GAAE,YAAS;AACvB,QAAIC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,0BAA0BN,QAAQ,CAACO,OAA7C,CAAhB;AACA,QAAIC,QAAQ,GAAGH,GAAG,CAACI,IAAJ,CAASN,OAAT,CAAiBA,OAAhC;AACA,QAAIO,WAAW,GAAG,MAAM1B,KAAK,CAACsB,GAAN,CAAU,mBAAV,CAAxB;AACA,QAAIK,WAAW,GAAGD,WAAW,CAACD,IAAZ,CAAiBN,OAAjB,CAAyBA,OAA3C;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEAH,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrCJ,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,YAAMM,WAAW,GAAGN,WAAW,CAACO,IAAZ,CAAkBC,OAAD,IAAaA,OAAO,CAACC,EAAR,IAAcL,IAAI,CAACM,SAAjD,CAApB;;AACA,UAAGJ,WAAH,EAAe,CAEd;AAIJ,KATU,CAAX;AAWAnB,IAAAA,QAAQ,CAACU,QAAD,CAAR,CApBuB,CAqBvB;AACA;AACA;AAKA;AACA;AACA;AAGH,GAjCD;;AAmCJzB,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,UAAU;AACb,GAFQ,EAEP,CAACJ,QAAQ,CAACO,OAAV,CAFO,CAAT;AAKA,sBAAQ;AAAA,2BAEJ,QAAC,SAAD;AAAA,8BACA,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,aAAlB;AAAiC,QAAA,KAAK,EAAEV;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,UAAR;AASH;;GA3DQF,K;UAG0BJ,W;;;KAH1BI,K;AA6DT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport EmptyCheck from './EmptyCheck'\nimport { Link } from 'react-router-dom'\nimport { CategoryDirection } from './CategoryBanner'\n\n\n\n\nfunction Likes({history}){\n    // var products = []\n    const [carts, setCarts] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n        const fetchCarts= async()=>{\n            let res = await axios.get('/apis/v1/carts/users/' + userData.user_id);\n            let cartList = res.data.payload.payload;\n            let res_product = await axios.get('/apis/v1/product/');\n            let productList = res_product.data.payload.payload;\n       \n            console.log(cartList);\n            console.log(productList);\n            \n            cartList = cartList.map((cart, index) => {\n                console.log(productList)\n                const tmp_product = productList.find((product) => product.pk == cart.productId);\n                if(tmp_product){\n                    \n                }\n                \n               \n\n            });\n\n            setCarts(cartList);\n            // let tmp_carts = res.data.payload.payload.filter(cart=> cart.sales_stage!='SO')\n            // let cartList = res.data.payload.payload.map((cart, index) => {\n            //     return (\n                        \n                        \n                \n                    \n            // );\n            // })\n            // setcarts(cartlist);  \n\n            \n        }\n\n    useEffect(()=>{\n        fetchCarts()\n    },[userData.user_id])\n\n\n    return (<div>\n        \n        <Container>\n        <CategoryDirection tag1={'찜 목록'}></CategoryDirection>\n       \n        <EmptyCheck text={\"찜한 상품이 없습니다\"} items={carts}></EmptyCheck>\n        </Container>\n\n    </div>)\n}\n\nexport default Likes;"]},"metadata":{},"sourceType":"module"}