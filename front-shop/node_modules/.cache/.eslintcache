[{"/home/seung/react/shop/front-shop/src/index.js":"1","/home/seung/react/shop/front-shop/src/App.js":"2","/home/seung/react/shop/front-shop/src/reportWebVitals.js":"3","/home/seung/react/shop/front-shop/src/modules/index.js":"4","/home/seung/react/shop/front-shop/src/modules/user.js":"5","/home/seung/react/shop/front-shop/src/components/Login.js":"6","/home/seung/react/shop/front-shop/src/components/useAsync.js":"7","/home/seung/react/shop/front-shop/src/components/asyncRuducer.js":"8","/home/seung/react/shop/front-shop/src/config.js":"9","/home/seung/react/shop/front-shop/src/components/Logout.js":"10","/home/seung/react/shop/front-shop/src/components/Register.js":"11","/home/seung/react/shop/front-shop/src/components/Home.js":"12","/home/seung/react/shop/front-shop/src/components/Banner.js":"13","/home/seung/react/shop/front-shop/src/components/ProductRegister.js":"14","/home/seung/react/shop/front-shop/src/components/Move.js":"15","/home/seung/react/shop/front-shop/src/modules/category.js":"16","/home/seung/react/shop/front-shop/src/components/CategoryBanner.js":"17","/home/seung/react/shop/front-shop/src/components/ProductByCategory.js":"18","/home/seung/react/shop/front-shop/src/components/Title.js":"19","/home/seung/react/shop/front-shop/src/components/PurchasePage.js":"20","/home/seung/react/shop/front-shop/src/components/ImageUpload.js":"21","/home/seung/react/shop/front-shop/src/components/Profile.js":"22","/home/seung/react/shop/front-shop/src/components/Loading.js":"23","/home/seung/react/shop/front-shop/src/components/PurchaseList.js":"24","/home/seung/react/shop/front-shop/src/components/OrderList.js":"25","/home/seung/react/shop/front-shop/src/components/MySales.js":"26","/home/seung/react/shop/front-shop/src/components/MySalesDetail.js":"27","/home/seung/react/shop/front-shop/src/components/LikeList.js":"28","/home/seung/react/shop/front-shop/src/components/EmptyCheck.js":"29","/home/seung/react/shop/front-shop/src/components/Convenient.js":"30","/home/seung/react/shop/front-shop/src/components/MakeCard.js":"31","/home/seung/react/shop/front-shop/src/components/UserBanner.js":"32","/home/seung/react/shop/front-shop/src/components/AreaButton.js":"33","/home/seung/react/shop/front-shop/src/components/Rating.js":"34","/home/seung/react/shop/front-shop/src/components/Modal.js":"35","/home/seung/react/shop/front-shop/src/components/NotFound.js":"36","/home/seung/react/shop/front-shop/src/components/UploadS3.js":"37","/home/seung/react/shop/front-shop/src/components/MainPost.js":"38","/home/seung/react/shop/front-shop/src/components/BasicPagination.js":"39","/home/seung/react/shop/front-shop/src/components/PostDetail.js":"40","/home/seung/react/shop/front-shop/src/components/PostRegister.js":"41","/home/seung/react/shop/front-shop/src/components/ProductDetail.js":"42","/home/seung/react/shop/front-shop/src/components/auction/AuctionHome.js":"43","/home/seung/react/shop/front-shop/src/components/auction/AuctionRegister.js":"44","/home/seung/react/shop/front-shop/src/components/auction/AuctionDetail.js":"45","/home/seung/react/shop/front-shop/src/components/util/date.js":"46","/home/seung/react/shop/front-shop/src/components/network/socket.js":"47","/home/seung/react/shop/front-shop/src/components/auction/timer.js":"48"},{"size":1212,"mtime":1626069316885,"results":"49","hashOfConfig":"50"},{"size":3486,"mtime":1632466148799,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1626069316885,"results":"52","hashOfConfig":"50"},{"size":423,"mtime":1626069316885,"results":"53","hashOfConfig":"50"},{"size":805,"mtime":1628678870232,"results":"54","hashOfConfig":"50"},{"size":5018,"mtime":1631462218658,"results":"55","hashOfConfig":"50"},{"size":865,"mtime":1626069316881,"results":"56","hashOfConfig":"50"},{"size":635,"mtime":1626069316881,"results":"57","hashOfConfig":"50"},{"size":90,"mtime":1624500021931,"results":"58","hashOfConfig":"50"},{"size":1977,"mtime":1630043191997,"results":"59","hashOfConfig":"50"},{"size":6278,"mtime":1630043191997,"results":"60","hashOfConfig":"50"},{"size":3749,"mtime":1632494541786,"results":"61","hashOfConfig":"50"},{"size":1874,"mtime":1632069224577,"results":"62","hashOfConfig":"50"},{"size":9678,"mtime":1632761036429,"results":"63","hashOfConfig":"50"},{"size":281,"mtime":1632757515848,"results":"64","hashOfConfig":"50"},{"size":485,"mtime":1626069316885,"results":"65","hashOfConfig":"50"},{"size":3209,"mtime":1632382609623,"results":"66","hashOfConfig":"50"},{"size":1367,"mtime":1631462218658,"results":"67","hashOfConfig":"50"},{"size":660,"mtime":1628678870232,"results":"68","hashOfConfig":"50"},{"size":8760,"mtime":1632757953076,"results":"69","hashOfConfig":"50"},{"size":2748,"mtime":1625817510236,"results":"70","hashOfConfig":"50"},{"size":7492,"mtime":1632762387169,"results":"71","hashOfConfig":"50"},{"size":775,"mtime":1632452539710,"results":"72","hashOfConfig":"50"},{"size":5907,"mtime":1632070050319,"results":"73","hashOfConfig":"50"},{"size":6186,"mtime":1632067691576,"results":"74","hashOfConfig":"50"},{"size":4240,"mtime":1632067521007,"results":"75","hashOfConfig":"50"},{"size":12105,"mtime":1632067641217,"results":"76","hashOfConfig":"50"},{"size":3217,"mtime":1632067762603,"results":"77","hashOfConfig":"50"},{"size":1218,"mtime":1632065123454,"results":"78","hashOfConfig":"50"},{"size":404,"mtime":1628678870228,"results":"79","hashOfConfig":"50"},{"size":2590,"mtime":1632466115819,"results":"80","hashOfConfig":"50"},{"size":2863,"mtime":1629456870934,"results":"81","hashOfConfig":"50"},{"size":17874,"mtime":1630043191993,"results":"82","hashOfConfig":"50"},{"size":2438,"mtime":1632067069857,"results":"83","hashOfConfig":"50"},{"size":1040,"mtime":1630043191997,"results":"84","hashOfConfig":"50"},{"size":292,"mtime":1630043191997,"results":"85","hashOfConfig":"50"},{"size":975,"mtime":1631863721692,"results":"86","hashOfConfig":"50"},{"size":5954,"mtime":1632069803315,"results":"87","hashOfConfig":"50"},{"size":601,"mtime":1632064209461,"results":"88","hashOfConfig":"50"},{"size":8941,"mtime":1632762845560,"results":"89","hashOfConfig":"50"},{"size":7367,"mtime":1632381948886,"results":"90","hashOfConfig":"50"},{"size":10120,"mtime":1632760566302,"results":"91","hashOfConfig":"50"},{"size":2330,"mtime":1632498301298,"results":"92","hashOfConfig":"50"},{"size":8723,"mtime":1632498310822,"results":"93","hashOfConfig":"50"},{"size":14925,"mtime":1632844113122,"results":"94","hashOfConfig":"50"},{"size":470,"mtime":1632461255863,"results":"95","hashOfConfig":"50"},{"size":423,"mtime":1632459822816,"results":"96","hashOfConfig":"50"},{"size":836,"mtime":1632841680910,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"58o82o",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"100"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"100"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/seung/react/shop/front-shop/src/index.js",[],["225","226"],"/home/seung/react/shop/front-shop/src/App.js",[],"/home/seung/react/shop/front-shop/src/reportWebVitals.js",[],"/home/seung/react/shop/front-shop/src/modules/index.js",[],"/home/seung/react/shop/front-shop/src/modules/user.js",[],"/home/seung/react/shop/front-shop/src/components/Login.js",["227","228"],"import {loginAction} from '../modules/user'\nimport axios from 'axios'\nimport React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport { CategoryDirection } from './CategoryBanner'\nimport '../App.css'\nimport Modal from './Modal'\n\nfunction Login({history}){\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const [ modalContents, setModalContents ] = useState('');\n    \n\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const {username, password} = userData;\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n\n    };\n    const onClickHandler = (e)=>{\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password\n        };\n        axios.post('/apis/v1/user/login', body)\n        .then(response => {\n            history.replace('/')\n            dispatch(loginAction(response.data.payload))\n      \n        }).catch(e =>{\n            setModalOpen(true);\n            setModalContents('아이디와 패스워드를 확인해 주세요');\n       \n        })\n    }\n\n    return (\n   \n    \n     \n        <Container >\n            <Modal open={ modalOpen } close={ closeModal }>\n                {modalContents}\n            </Modal>\n            <CategoryDirection tag1={'로그인'}></CategoryDirection>\n            <br/>\n            <div style={{fontSize:'1.3rem'}}>\n\n           \n            <Form onSubmit={onClickHandler} >\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                <Col sm={{ span: 2, offset: 2 }} \n                lg={{ span: 1, offset: 3 }}>\n                <Form.Label style={{margin:10}}>아이디</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 4, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n                <Form.Control \n                size='lg'\n                name = 'username'\n                value = {username}\n                onChange={onChangeHandler}\n                placeholder=\"아이디를 입력해주세요\" />\n                </Col>\n                \n            </Form.Group>\n            <br/>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                <Col sm={{ span: 2, offset: 2 }} \n                lg={{ span: 1, offset: 3 }}>\n                <Form.Label style={{margin:5}}>패스워드</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 4, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n                <Form.Control\n                style={{fontFamily:'ubuntu'}}\n                size='lg'\n                type=\"password\"\n                name = 'password'\n                value = {password} \n                onChange={onChangeHandler}\n                placeholder=\"패스워드를 입력해주세요\" />\n\n                </Col>\n                </Form.Group>\n            <br/>\n            <Row>\n                <Col lg = {{span:5, offset:3}}\n                sm = {{span:10, offset:2}}>\n                <div className=\"d-grid gap-2\">\n                <button \n                style={{height:50}}\n                type=\"submit\"\n                className='filledButton'\n                >로그인</button>\n                \n                </div>\n                    \n                </Col>\n            </Row>\n            \n            <Row style={{marginTop:15}}>\n                <Col lg = {{span:5, offset:3}}\n                sm = {{span:10, offset:2}}>\n                <div className=\"d-grid gap-2\">\n                <button \n                style={{height:50}}\n                className='emptyButton'\n                onClick={(e) => {\n                    e.preventDefault();\n                    history.replace('/register');\n                }}\n                >회원가입\n                \n                </button>\n                \n                </div>\n                    \n                </Col>\n            </Row>\n            </Form>\n            </div>\n        </Container>\n      \n    );\n    \n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>username</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Login\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Login;","/home/seung/react/shop/front-shop/src/components/useAsync.js",["229","230","231","232"],"/home/seung/react/shop/front-shop/src/components/asyncRuducer.js",[],"/home/seung/react/shop/front-shop/src/config.js",[],["233","234"],"/home/seung/react/shop/front-shop/src/components/Logout.js",["235"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport {logoutAction} from '../modules/user'\nimport {useDispatch} from 'react-redux'\nimport {Container, Col, Row} from 'react-bootstrap'\nimport { CategoryDirection } from './CategoryBanner';\nimport Modal from './Modal'\nfunction Logout({history}) {\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const [ modalContents, setModalContents ] = useState('');\t\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const dispatch = useDispatch();\n\n    const onClickHandler = () => {\n        axios.get('/apis/v1/user/logout')\n        .then(res => {\n            dispatch(logoutAction())\n            history.replace('/')\n        })\n        .catch(e => {\n            setModalOpen(true);\n            setModalContents('로그아웃에 실패했습니다. 관리자에게 문의해 주세요.');\n          \n        })\n    }\n    return (\n        <div >\n            <Modal open={ modalOpen } close={ closeModal } >\n\t\t    {modalContents}\n            </Modal>\n            <Container>\n            \n            <CategoryDirection tag1={'로그아웃'}></CategoryDirection>\n            <br/>\n            <Row> \n                    <Col lg={{span: 4, offset:4}}\n                    sm={{span: 6, offset:3}}\n                    >\n                    <h3>정말 로그아웃 하시겠습니까?</h3>\n                    <br/>\n                    <br/>\n                    <div className=\"d-grid gap-2\">\n                    <button \n                    className=\"emptyButton\" \n                    style={{\n                        fontSize: '1.3rem',\n                        height:45\n                    }}\n                    onClick = {onClickHandler}>로그아웃</button>\n                    <br/>\n                    </div>\n                    \n                    </Col>\n                </Row>\n            \n            </Container>\n          \n        </div>\n    )\n}\n\nexport default Logout;","/home/seung/react/shop/front-shop/src/components/Register.js",["236","237","238","239","240"],"import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport Banner from './Banner'\nimport Title from './Title'\nimport { CategoryDirection } from './CategoryBanner'\nimport Modal from './Modal'\n\n\nfunction Register({history}){\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const [ modalContents, setModalContents ] = useState('');\n\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_number: \"\"\n    })\n    const {username, password, email, phone_number} = userData;\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n\n    };\n    const onClickHandler = (e)=>{\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n            email: email,\n            phone_number:phone_number\n        };\n        \n        if(!(username&& password && email && phone_number)){\n            setModalOpen(true);\n            setModalContents('모든 항목을 입력해 주세요');\n            return;\n        }\n\n        axios.post('/apis/v1/user/', body)\n        .then(response => {\n            history.replace('/login')\n        }).catch(e =>{\n            setModalOpen(true);\n            setModalContents('회원가입에 실패했습니다. 관리자에게 문의해 주세요.');\n        })\n\n        setUserData({\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            phone_number: \"\"\n        })\n    }\n    return (\n        \n        \n        <Container>\n        <Modal open={ modalOpen } close={ closeModal } >\n            {modalContents}\n        </Modal>\n        <CategoryDirection tag1={'회원가입'}></CategoryDirection>\n        <br/>\n        <div style={{fontSize:'1.3rem'}}>\n\n    \n        <Form onSubmit={onClickHandler} >\n        \n\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n            <Col sm={{ span: 2, offset: 1 }} \n                lg={{ span: 1, offset: 2 }}>\n                <Form.Label style={{margin:5}}>아이디</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 6, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n               <Form.Control \n                name = 'username'\n                value = {username}\n                onChange={onChangeHandler}\n                placeholder=\"아이디를 입력해주세요\" />\n                </Col>\n                </Form.Group>\n\n            <Form.Group style={{paddingTop:15}}as={Row} controlId=\"exampleForm.ControlInput1\">\n            <Col sm={{ span: 2, offset: 1 }} \n                lg={{ span: 1, offset: 2 }}>\n                <Form.Label style={{margin:5}}>이메일</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 6, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n                 <Form.Control \n                name = 'email'\n                value = {email}\n                onChange={onChangeHandler}\n                placeholder=\"이메일을 입력해주세요\" />\n                </Col>\n                \n            </Form.Group>\n   \n            <Form.Group style={{paddingTop:15}} as={Row} controlId=\"exampleForm.ControlInput1\">\n            <Col sm={{ span: 2, offset: 1 }} \n                lg={{ span: 1, offset: 2 }}>\n                <Form.Label style={{margin:5}}>패스워드</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 6, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n                <Form.Control\n                style={{fontFamily:'ubuntu'}}\n                type=\"password\"\n                name = 'password'\n                value = {password} \n                onChange={onChangeHandler}\n                placeholder=\"패스워드를 입력해 주세요\" />\n                </Col>\n                \n            </Form.Group>\n       \n            <Form.Group style={{paddingTop:15}} as={Row} controlId=\"exampleForm.ControlInput1\">\n            <Col sm={{ span: 2, offset: 1 }} \n                lg={{ span: 1, offset: 2 }}>\n                <Form.Label style={{margin:5}}>전화번호</Form.Label>\n                \n                </Col>\n                <Col lg={{ span: 6, offset: 0 }}\n                    sm={{ span: 8, offset: 0 }}>\n                 <Form.Control\n                name = 'phone_number'\n                value = {phone_number} \n                onChange={onChangeHandler}\n                placeholder=\"대시(-) 없이 입력해 주세요\" />\n               \n                </Col>\n                </Form.Group>    \n           \n                <Row style={{marginTop:30}}>\n                <Col lg = {{span:6, offset:3}}\n                sm = {{span:10, offset:2}}>\n                <div className=\"d-grid gap-2\">\n                <button \n                style={{height:50}}\n                type='submit'\n                className='emptyButton'\n                >회원가입\n                \n                </button>\n                \n                </div>\n                    \n                </Col>\n            </Row>\n            </Form>\n            </div>\n            \n        </Container>\n    \n   \n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>ID</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Email</label>\n    //         <input name = \"email\" value = {email} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n            \n    //         <br/>\n    //         <button type = 'submit'>\n    //             Register\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Register;","/home/seung/react/shop/front-shop/src/components/Home.js",["241","242","243","244"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategory } from \"../modules/category\";\nimport axios from \"axios\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { Container, Navbar, Spinner } from \"react-bootstrap\";\nimport Loading from \"./Loading\";\n\nexport default function Home(props) {\n    const [products, Setproducts] = useState([]);\n\n    const dispatch = useDispatch();\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/product\");\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((data) => {\n            return {\n                ...data,\n                id: data.pk,\n            };\n        });\n        Setproducts(product_list);\n    };\n\n    const fetchCategory = async () => {\n        let res = await axios.get(\"/apis/v1/category\");\n\n        let category_list = res.data.map((data) => {\n            return {\n                kind: data.fields.kind,\n                pk: data.pk,\n            };\n        });\n        dispatch(setCategory(category_list));\n    };\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCategory();\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <ControlledCarousel />\n\n                <br />\n                <Container>\n                    <div style={{ marginTop: 30 }} />\n                    <h3>오늘의 상품 추천</h3>\n\n                    <hr />\n                    <Loading products={products} />\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nfunction ControlledCarousel() {\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Carousel activeIndex={index} onSelect={handleSelect}>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://img.lovepik.com//back_pic/05/72/43/975bbd3c7e54c21.jpg_wh860.jpg\"\n                    alt=\"First slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"35rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>First slide label</h3>\n                    <p>First slide label ~~~~</p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://image.freepik.com/free-vector/the-interior-of-mall-banner-scene-inside-a-shopping-store-at-night_93732-21.jpg\"\n                    alt=\"Second slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n\n                <Carousel.Caption>\n                    {/* <h3>Second slide label</h3>\n                    <p>아무거나 적어 </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://i.pinimg.com/originals/b9/42/dd/b942dd80ac8cba56dd90dc539d2040c0.jpg\"\n                    alt=\"Third slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>Third slide label</h3>\n                    <p>\n                    세번째\n                    </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel>\n    );\n}\n","/home/seung/react/shop/front-shop/src/components/Banner.js",["245","246","247","248","249"],"import React from \"react\";\nimport { Container, Row, Col, Nav, Navbar, Form, FormControl, Button, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport bucket from \"../assets/images/bucket.png\";\nconst Banner = () => {\n    return (\n        <div style={{ paddingBottom: 30 }}>\n            <hr />\n\n            <Container>\n                <Row>\n                    <Col lg={{ span: 3, offset: 0 }} sm={{ span: 3, offset: 0 }}>\n                        <Navbar.Brand href=\"#home\">\n                            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"inherit\" }}>\n                                <img src={bucket} style={{ width: 70 }}></img>\n                            </Link>\n                        </Navbar.Brand>\n                    </Col>\n                </Row>\n\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col lg={{ span: 3 }} sm={{ span: 12 }} xs=\"12\">\n                            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"inherit\" }}>\n                                <div style={{ color: \"black\", fontSize:\"3rem\"}}>우아 마켓</div>\n                            </Link>\n                        </Col>\n                        <Col lg={{ span: 6 }} sm={{ span: 9 }} xs=\"9\">\n                            <Form.Control size=\"lg\" id=\"inlineFormInputName\" placeholder=\"검색어를 입력하세요\" />\n                        </Col>\n                        <Col lg={{ span: 3 }} sm={{ span: 3 }} xs=\"3\">\n                            <button className=\"emptyButton\" style={{ width: \"5em\", height: \"3.5rem\", fontSize: \"1.3rem\" }}>\n                                Search\n                            </button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n    );\n};\n\nexport default Banner;\n","/home/seung/react/shop/front-shop/src/components/ProductRegister.js",["250","251","252","253","254"],"import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport axios from 'axios'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport ImageUploading from 'react-images-uploading';\nimport { CategoryDirection } from './CategoryBanner'\nimport AreaButton from './AreaButton'\nimport Modal from './Modal'\n\n\nfunction ProductRegister({history}){\n    const [ modalOpen, setModalOpen ] = useState(false);\n\n    const [ modalContents, setModalContents ] = useState('');\t\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const [area, setArea] = useState('지역을 선택해 주세요')\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n    const {kind} = useSelector(state => ({\n        kind: state.category.payload\n    }))\n    const [images, setImages] = useState([]);\n    const maxNumber = 4;\n  \n    const onChangeImage = (imageList, addUpdateIndex) => {\n      console.log(imageList, addUpdateIndex);\n      setImages(imageList);\n    };\n\n    const onError = (errors, files) => {\n      if(errors.maxNumber) {\n        alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n      }\n    }\n  \n    \n    const displayCategory = kind.map((k, index) => {\n        return (\n            <option>{k.kind}</option>\n           \n        );\n    }\n    );\n        \n    const [product, setProduct] = useState({\n        name: \"\",\n        category: kind[0].kind,\n        price: null,\n        quantity: 1,\n        description: \"\",\n\n    })\n\n    \n    const {name, category, price, quantity, description} = product\n    \n\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    };\n\n    const onChangeArea = (e) => {\n        const {name, value} = e.target;\n        setArea(value);\n    }\n\n\n    const onClickHandler = (e)=>{\n        let category_id = kind[kind.findIndex((k) => k.kind === category)].pk\n        let image_list = images.map((img, index) => (img.data_url))\n        e.preventDefault();\n \n        if(!(name && category_id && price && quantity && description && image_list.length)){\n            setModalOpen(true);\n            setModalContents('모든 항목을 입력해 주세요');\n            return;\n        }\n        if(area == undefined || area==null || area == '지역을 선택해 주세요'){\n            setModalOpen(true);\n            setModalContents('거래 지역을 선택해 주세요');\n            return;\n        }\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            category_id: category_id,\n            price: price,\n            quantity: quantity,\n            area: area,\n            description: description,\n            ...image_list  // 용량이 크면 안넘어가\n        };\n  \n    \n        axios.post('/apis/v1/product', body)\n        .then(response => {\n            history.replace('/')\n        }).catch(e =>{\n      \n            setModalOpen(true);\n            setModalContents('상품 등록에 실패하였습니다. 관리자에게 문의하세요.');\n        })\n\n    }\n\n    \n    return(<div>\n        <Modal open={ modalOpen } close={ closeModal } >\n\t\t    {modalContents}\n        </Modal>\n       \n        <Container>\n            <CategoryDirection tag1={'판매하기'}></CategoryDirection>\n            <br/>\n            <div style={{fontSize:'1.3rem'}}>\n            <Row>\n                <Col lg={{span: 11, offset:2}}\n                sm={{span: 12, offset:0}}\n                xs={{span: 12}}\n                 >\n                <Form>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\" as={Row}>\n                <Form.Label column sm=\"2\" lg='1' xs='4'>카테고리</Form.Label>\n                <Col sm=\"2\" xs='8'>\n                <Form.Control as=\"select\"\n                name = 'category'\n                onChange={onChangeHandler}\n                value = {category}>\n                {displayCategory}\n\n                </Form.Control>\n                </Col>\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                <Form.Label column sm=\"2\" lg='1' xs='4'>상품명</Form.Label>\n                <Col sm ='10' lg='8' xs='8'>\n                <Form.Control \n                name = 'name'\n                value = {name}\n                onChange={onChangeHandler}\n                placeholder=\"상품명을 적어주세요\" />\n                </Col>\n                \n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                <Form.Label column sm=\"2\" lg='1' xs='4'>가격</Form.Label>\n                <Col sm ='4' lg='2' xs='7'>\n                <Form.Control\n                name = 'price'\n                value = {price} \n                onChange={onChangeHandler}\n                placeholder=\"가격을 적어주세요\" />\n                </Col>\n                <Col xs='1'>\n                <p>₩</p>\n                </Col>\n                \n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                <Form.Label column sm=\"2\" lg='1' xs= '4'>수량</Form.Label>\n                <Col sm ='2' lg='1' xs='8'>\n                <Form.Control\n                name = 'quantity'\n                value = {quantity} \n                onChange={onChangeHandler}\n                placeholder=\"수량을 적어주세요\" />\n                \n                </Col>\n           \n        \n      \n            </Form.Group>\n         \n            <Row>\n                <Col sm=\"2\" lg='1' xs='4'\n                 style={{paddingTop:20}}>\n                거래 지역\n                </Col>\n                <Col sm ='6' lg='6' xs='6'\n                style={{paddingTop:8}}\n                >\n            \n                <AreaButton onChange={onChangeArea} area={area}/>\n\n                </Col>\n            </Row>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                <Form.Label column sm=\"2\" lg='1'>상품설명</Form.Label>\n                <Col sm ='10' lg='8'>\n                <Form.Control \n                as=\"textarea\" \n                rows={5}\n                onChange={onChangeHandler}\n                name = 'description'\n                placeholder = '상품 설명을 적어주세요'\n                value = {description}\n                />\n                \n                </Col>  \n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                <Form.Label>상품 이미지 등록</Form.Label>\n             {/* <Button onClick={onClickGetImage}>이미지 가져오기 </Button> */}\n             \n             <ImageUploading \n                multiple\n                value={images}\n                onChange={onChangeImage}\n                maxNumber={maxNumber}\n                dataURLKey=\"data_url\"\n                onError={onError}\t\t\t// 추가\n                >\n                {({\n                imageList,\n                onImageUpload,\n                onImageUpdate,\n                onImageRemove,\n                isDragging,\n                dragProps,\n                }) => (\n                // write your building UI\n         \n                <div className=\"upload__image-wrapper\">\n                    <br/>\n                    <Button\n                    variant=\"outline-light\" style={{background: '#e85255', fontSize:'1.3rem'}}\n                    onClick={(e) => {\n                        e.preventDefault()\n                        onImageUpload()}}\n                    {...dragProps}\n                    >\n                    사진 추가\n                    </Button>\n                    <br/>\n                    &nbsp;\n                    {imageList.map((image, index) => (\n                    <div key={index} className=\"image-item\">\n                        <img src={image['data_url']} alt=\"\" width=\"700\" />\n                        <div className=\"image-item__btn-wrapper\">\n                        <br/>\n                        <Button      \n                            variant=\"outline-light\" \n                            style={{background: '#e85255', fontSize:'1.3rem'}} \n                            onClick={(e) => {\n                            e.preventDefault()\n                            onImageUpdate(index)}}>수정</Button>{' '}\n                        <Button\n                            variant=\"outline-light\" \n                            style={{background: '#e85255', fontSize:'1.3rem'}} \n                            onClick={(e) => {\n                            e.preventDefault()\n                            onImageRemove(index)}}>삭제</Button>\n                        </div>\n                        <br/>\n                    </div>\n                    ))}\n                </div>\n            \n                )}\n            </ImageUploading>\n            <Col>\n                <p>\n                {`이미지는 최대 ${maxNumber}개까지만 첨부할 수 있습니다`}\n                </p>\n                <br/>\n            </Col>\n\n\n\n            </Form.Group>\n            <Button type=\"submit\" \n            variant=\"outline-light\" \n            style={{background: '#e85255', fontSize:'1.3rem'}} \n            onClick={onClickHandler}>상품 등록</Button>\n            </Form>\n\n                </Col>\n            </Row>\n            \n\n\n            </div>\n        \n            \n  \n            \n        </Container>\n        \n            \n    </div>\n\n    );\n\n}\n\nexport default ProductRegister;","/home/seung/react/shop/front-shop/src/components/Move.js",["255","256","257","258"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nconst Move = () => {\n    return (\n        <div>\n            <hr style={{ marginTop: 100, marginBottom:50 }} />\n        </div>\n    );\n};\n\nexport default Move;\n","/home/seung/react/shop/front-shop/src/modules/category.js",[],"/home/seung/react/shop/front-shop/src/components/CategoryBanner.js",["259","260","261"],"import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {Container, Navbar, Nav, NavDropdown, Col, Row} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\n\n\n\nexport function CategoryDirection({tag1, tag2, tag3, tag4, tag5}){\n    let expression = '홈'\n\n    if(tag1) expression += ` > ${tag1}`;\n    if(tag2) expression += ` > ${tag2}`;\n    if(tag3) expression += ` > ${tag3}`;\n    if(tag4) expression += ` > ${tag4}`;\n    if(tag5) expression += ` > ${tag5}`;\n    let tags = expression.split(' > ')\n    let last = tags[tags.length-1]\n    expression = expression.substring(0, expression.length-last.length)\n    // console.log(expression)\n    return(<div style={{marginTop:50, marginBottom:50, fontSize:'1.4rem'}}>\n   \n    <span>\n\n        <Link to='/' style={{textDecoration:'none', color:'inherit'}}>\n        {expression}\n        </Link>\n        \n        </span>\n        <span style={{fontWeight:'bolder', color: '#e85255'}}>\n        {last}\n        </span>\n     \n        </div>\n    );\n}\n\n\n\nexport const PlusMiniBanner = ()=>{\n\n    return (<div style={{background:'gray', color:\"black\", fontSize:\"1.2rem\", padding:4}}>\n        <Container>\n            <Row>\n                <Col lg={{span:1, offset:7}}\n                sm={{span:2, offset:7}}\n                xs={{span:5, offset:2}}>\n                <Link to=\"/post/page/1\" style={{textDecoration:'none', color:'inherit'}}>\n                자유 거래\n                </Link>\n                </Col>\n                <Col lg={{span:2, offset:0}}\n                sm={{span:2, offset:0}}\n                xs={{span:5, offset:0}}>\n                <Link to=\"/auction/home\" style={{textDecoration:'none', color:'inherit'}}>\n                경매 상품\n                </Link>\n                </Col>\n                \n            </Row>\n        </Container>\n        \n    </div>)\n}\n\n\nfunction CategoryBanner(){\n\n    const{isLoggedIn} = useSelector(state=>({\n        isLoggedIn: state.user.isLoggedIn\n    }))\n\n    const {kind} = useSelector(state => ({\n        kind: state.category.payload\n    }))\n    const display_category = kind.map((k, index) => {\n        \n        let  path = '/category/' + (k.pk)\n        return (\n            <Col lg='1' md='2' sm='2' xs='3'>\n            <Nav.Item>\n            <Nav.Link href={path} style={{color:'white',padding:5}}>{k.kind}</Nav.Link>\n            </Nav.Item>\n            \n            </Col>\n            \n        );\n    }\n    );\n\n    \n    \n\n    return(\n\n            <div style={{background:\"#e85255\", fontSize: \"1.3rem\", paddingTop:5, paddingBottom:5, color:'white'}}>\n\n                <Nav variant=\"pills\" defaultActiveKey=\"/home\">\n                <Container>\n                    <Row>\n                        <Col lg='1' sm='1' xs='1'>\n                        <Nav.Item>\n                        <Nav.Link href=\"/\" style={{color:'white',padding:5}}>홈</Nav.Link>\n                        </Nav.Item>\n                        \n                        </Col>\n                    \n                {display_category}\n\n                    </Row>\n                </Container>\n               \n                </Nav>\n\n                \n\n          </div>\n  \n      \n        \n   );\n}\n\n\nexport default CategoryBanner","/home/seung/react/shop/front-shop/src/components/ProductByCategory.js",["262","263","264"],"import {useSelector} from 'react-redux'\nimport axios from 'axios'\nimport React, {useEffect, useState} from 'react';\nimport {Container} from 'react-bootstrap'\nimport { EmptyCheckProductByCategory } from './EmptyCheck';\nimport { CategoryDirection } from './CategoryBanner';\n\n\nfunction ProductByCategory({match}){\n    const {kind} = useSelector(state => ({\n        kind: state.category.payload\n    }))\n    const[products,setProducts]= useState([])\n\n\n    const fetchProducts= async ()=>{\n        let res = await axios.get('/apis/v1/category/' + match.params.number);\n        let filtered_product_list = res.data.payload.filter(product=> product.valid==true);\n        let product_list = filtered_product_list.map((data)=> {\n            return {\n                ...data,\n                id: data.pk\n            }\n        });\n        setProducts(product_list);\n        \n    }\n\n    useEffect(()=>{\n        fetchProducts()\n   \n    },[match.params.number])\n\n    return(<div>\n        \n        <Container>\n        <CategoryDirection tag1={kind[kind.findIndex((k) => k.pk==match.params.number)].kind}></CategoryDirection>\n        \n        <EmptyCheckProductByCategory text=\"등록된 물건이 없습니다.\" items={products}>\n            \n        </EmptyCheckProductByCategory>\n    \n        </Container>\n       \n          \n        \n    </div>)\n}\n\nexport default ProductByCategory","/home/seung/react/shop/front-shop/src/components/Title.js",[],"/home/seung/react/shop/front-shop/src/components/PurchasePage.js",["265","266","267","268"],"import { ListGroup, Container, Button, Form, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction PurchasePage({ location, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const { product, demand_amount } = location.state;\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    console.log(product);\n    console.log(demand_amount);\n\n    const [purchaseData, setPurchaseData] = useState({\n        address: null,\n        email_address: null,\n    });\n    const { address, email_address } = purchaseData;\n\n    const orderProduct = async () => {\n        if (!(address && email_address)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n        let body = {\n            ...product,\n            product_id: product.product_id,\n            seller_id: product.seller_id,\n            buyer_id: userData.user_id,\n            demand_amount: demand_amount,\n            address: address,\n            quantity: product.quantity,\n            email_address: email_address,\n        };\n        console.log(body);\n        await axios\n            .post(\"/apis/v1/order\", body)\n            .then((res) => {\n                history.replace(\"/orderlist\");\n            })\n            .catch((e) => {\n                // 정보가 없을 때 처리\n                alert(\"주문에 실패하였습니다. 관리자에게 문의해 주세요\");\n            });\n    };\n\n    const onClickOrder = () => {\n        if (isLoggedIn === false) {\n            alert(\"로그인 후 이용하세요.\");\n            return;\n        }\n        orderProduct();\n    };\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setPurchaseData({\n            ...purchaseData,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={product.category} tag2={product.name} tag3={\"구매하기\"}></CategoryDirection>\n\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <br />\n                        <p style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", margin: 15 }}>상품 정보를 확인하세요</p>\n                        <hr />\n                        <Row>\n                            <Form style={{ fontSize: \"1.3rem\" }}>\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ padding: 5 }}>카테고리</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                        <Form.Control style={{ fontSize: \"1.3rem\" }} plaintext readOnly defaultValue={product.category} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ padding: 5 }}>상품명</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                        <Form.Control style={{ fontSize: \"1.3rem\" }} plaintext readOnly defaultValue={product.name} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ padding: 5 }}>상품 가격</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                        <Form.Control style={{ fontSize: \"1.3rem\" }} plaintext readOnly defaultValue={setMoney(product.price)} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ padding: 5 }}>상품 수량</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                        <Form.Control style={{ fontSize: \"1.3rem\" }} plaintext readOnly defaultValue={product.quantity} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n\n                            <p style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", marginTop: 50, margin: 15 }}>구매 정보를 입력하세요</p>\n                            <hr />\n\n                            <Form>\n                                <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ fontSize: \"1.3rem\", margin: 10 }}>구매 수량</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"2\" sm=\"2\" xs=\"4\">\n                                        <Form.Control name=\"demand_amount\" value={demand_amount} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ fontSize: \"1.3rem\", margin: 10 }}>이메일 주소</Form.Label>\n                                    </Col>\n\n                                    <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                        <Form.Control name=\"email_address\" value={email_address} onChange={onChangeHandler} placeholder=\"거래 정보를 받을 이메일을 적어주세요\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                    <Col lg={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 1 }} xs={{ span: 5, offset: 1 }}>\n                                        <Form.Label style={{ fontSize: \"1.3rem\", margin: 10 }}>거래 장소</Form.Label>\n                                    </Col>\n                                    <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                        <Form.Control name=\"address\" value={address} onChange={onChangeHandler} placeholder=\"거래 선호 지역을 적어주세요\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <br />\n                            </Form>\n                            <Col lg={{ span: 6, offset: 5 }} sm={{ span: 6, offset: 5 }} xs={{ span: 12 }}>\n                                <h1>총 가격: {product.price * demand_amount}원</h1>\n                                <div className=\"d-grid gap-2\">\n                                    <br />\n                                    <button style={{ fontSize: \"1.4rem\", height: \"3.5rem\" }} className=\"emptyButton\" onClick={onClickOrder}>\n                                        구매하기\n                                    </button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchasePage;\n","/home/seung/react/shop/front-shop/src/components/ImageUpload.js",[],"/home/seung/react/shop/front-shop/src/components/Profile.js",["269","270","271","272"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { loginAction, logoutAction } from \"../modules/user\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Rating from \"./Rating\";\nimport { setDate } from \"./Convenient\";\n\nfunction Profile({ history }) {\n    const dispatch = useDispatch();\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const [user, setUser] = useState({\n        username: userData.username,\n        useremail: userData.useremail,\n        phone_number: userData.phone_number,\n        temperature: 36.5,\n        celcius: true,\n        created_at: \"\",\n    });\n\n    const getUserInfo = async () => {\n        let res = await axios.get(`/apis/v1/user/${userData.user_id}`);\n        setUser(res.data.payload);\n    };\n\n    useEffect(() => {\n        getUserInfo();\n    }, []);\n\n    const { username, useremail, phone_number } = user;\n    const user_id = userData.user_id;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUser({\n            ...user,\n            [name]: value,\n        });\n    };\n    const onClickEditHandler = async (e) => {\n        e.preventDefault();\n        let body = {\n            user_id: user_id,\n            username: username,\n            useremail: useremail,\n            phone_number: phone_number,\n        };\n        await axios\n            .post(`/apis/v1/user/${user_id}`, body)\n            .then((response) => {\n                alert(\"사용자 정보 수정 완료\");\n                dispatch(loginAction(body));\n            })\n            .catch((e) => {\n                alert(\"사용자 정보 수정 실패\");\n            });\n    };\n\n    const onClickDeleteHandler = async (e) => {\n        e.preventDefault();\n        await axios\n            .delete(`/apis/v1/user/${user_id}`)\n            .then((response) => {\n                console.log(response);\n                alert(\"회원 탈퇴 완료\");\n                dispatch(logoutAction());\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                alert(\"회원 탈퇴 실패\");\n            });\n    };\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"내정보 관리\"}></CategoryDirection>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }} md={{ span: 8, offset: 2 }}>\n                        <div style={{ fontSize: \"1.2rem\", border: \"1px solid #dedede\", paddingTop: 30, paddingBottom: 60, paddingLeft: 10, paddingRight: 10 }}>\n                            <Row>\n                                <Col lg={{ span: 10, offset: 1 }} xs={{ span: 12 }}>\n                                    <div style={{ marginBottom: 30, padding: 10 }}>\n                                        <Rating user={user} />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col lg={{ span: 10, offset: 1 }} xs={{ span: 12 }}>\n                                    <div style={{ marginBottom: 30 }}>가입 날짜: {setDate(user.created_at)}</div>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col lg={{ span: 10, offset: 2 }} md={{ span: 10, offset: 1 }} sm={{ span: 10, offset: 1 }}>\n                                    <Form>\n                                        <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                            <Form.Label column sm=\"2\" md=\"2\" lg=\"2\" style={{}}>\n                                                아이디\n                                            </Form.Label>\n                                            <Col sm=\"10\" md=\"10\" lg=\"8\">\n                                                <Form.Control size=\"lg\" name=\"username\" value={username} onChange={onChangeHandler} placeholder=\"ID를 입력해주세요\" />\n                                            </Col>\n                                        </Form.Group>\n                                        <br />\n                                        <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                            <Form.Label column sm=\"2\" md=\"2\" lg=\"2\" style={{}}>\n                                                이메일\n                                            </Form.Label>\n                                            <Col sm=\"10\" md=\"10\" lg=\"8\">\n                                                <Form.Control size=\"lg\" name=\"useremail\" value={useremail} onChange={onChangeHandler} placeholder=\"이메일을 입력해주세요\" />\n                                            </Col>\n                                        </Form.Group>\n                                        <br />\n                                        <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                            <Form.Label column md=\"2\" sm=\"2\" lg=\"2\" style={{}}>\n                                                전화번호\n                                            </Form.Label>\n                                            <Col sm=\"10\" md=\"10\" lg=\"8\">\n                                                <Form.Control size=\"lg\" name=\"phone_number\" value={phone_number} onChange={onChangeHandler} placeholder=\"대시(-) 없이 입력해주세요\" />\n                                            </Col>\n                                        </Form.Group>\n                                        <br />\n\n                                        <Row>\n                                            <Col lg={{ span: 4, offset: 2 }} md={{ span: 4, offset: 4 }} sm={{ span: 4, offset: 4 }}>\n                                                <div className=\"d-grid gap-2\">\n                                                    <button className=\"filledButton\" style={{ fontSize: \"1.3rem\", height: \"3.5rem\" }} onClick={onClickEditHandler}>\n                                                        수정\n                                                    </button>\n                                                    <span> </span>\n                                                </div>\n                                            </Col>\n                                            <Col lg={{ span: 4, offset: 0 }} md={{ span: 4 }} sm={{ span: 4, offset: 0 }}>\n                                                <div className=\"d-grid gap-2\">\n                                                    <button className=\"emptyButton\" style={{ fontSize: \"1.3rem\", height: \"3.5rem\" }} onClick={onClickDeleteHandler}>\n                                                        회원 탈퇴\n                                                    </button>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Profile;\n","/home/seung/react/shop/front-shop/src/components/Loading.js",["273","274"],"import react from 'react'\nimport MakeCard from './MakeCard'\nimport {Container, Spinner, Row, Col} from 'react-bootstrap'\nconst Loading = ({products}) =>{\n    if(products.length==0)\n        return(\n            <Container>\n                <Row>\n                    <Col lg={{span:2, offset:5}} xs={{span:3, offset:5}} md={{span:6, offset:5}}>\n                        <Spinner style={{marginTop: 100,marginBottom:100, width:50, height:50}}animation=\"border\" variant=\"primary\">\n                        </Spinner>      \n                    </Col>\n                </Row>\n            </Container>\n                \n    )\n    return(\n        <div>\n        <div style={{marginTop:30}}/>           \n        <MakeCard products={products}/>\n        </div>\n    )\n\n}\n\nexport default Loading","/home/seung/react/shop/front-shop/src/components/PurchaseList.js",["275","276","277","278","279","280","281","282","283"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport good from \"../assets/images/good.png\";\nimport bad from \"../assets/images/bad.png\";\n\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\nimport Rating from \"./Rating\";\n\nfunction PurchaseList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    var products = [];\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [flag, setFlag] = useState(true);\n\n    const fetchUserInfo = async (userId, orderId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col lg={{ span: 4, offset: 2 }} sm={{ span: 4, offset: 2 }} xs={{ span: 4, offset: 2 }}>\n                        <img style={{ width: 30, height: 30 }} src={good} onClick={() => evaluateSellerGood(userId, orderId)}></img>\n                        <button style={{ background: \"white\", color: \"green\" }} onClick={() => evaluateSellerGood(userId, orderId)}>\n                            좋아요!\n                        </button>\n                    </Col>\n                    <Col lg={{ span: 4 }} sm={{ span: 4 }} xs={{ span: 4 }}>\n                        <img style={{ width: 30, height: 30 }} src={bad} onClick={() => evaluateSellerBad(userId, orderId)}></img>\n                        <button style={{ background: \"white\", color: \"red\" }} onClick={() => evaluateSellerBad(userId, orderId)}>\n                            싫어요!\n                        </button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const evaluateSellerGood = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/up`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n    const evaluateSellerBad = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/down`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/\" + userData.user_id);\n        let tmp_order = res.data.payload.filter((order) => order.sales_stage == \"SO\");\n\n        let orderlist = tmp_order.map((order, index) => {\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 30 }}>\n                        <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                            <img style={{ height: \"auto\", maxWidth: \"100%\", height: \"auto\" }} src={order.base64_image_url ? order.base64_image_url : placeholder}></img>\n                        </Col>\n                        <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>{order.name}</p>\n                                <p style={{ fontSize: \"1.3rem\" }}>구매량: {order.demand_quantity}</p>\n                                <p style={{ fontSize: \"1.3rem\" }}>지불 금액: {setMoney(order.price)} ₩</p>\n                                <p style={{ fontSize: \"1.3rem\" }}>주문 날짜: {setDate(order.created_at)}</p>\n                                {!order.rating_check ? (\n                                    <div>\n                                        <p style={{ fontSize: \"1.3rem\", color: \"blue\" }}>판매자의 매너를 평가해볼까요?</p>\n                                        <button className=\"emptyButton\" onClick={() => fetchUserInfo(order.seller_id, order.order_id)} style={{ height: \"4rem\", fontSize: \"1.3rem\" }}>\n                                            매너 평가하기\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <p style={{ fontSize: \"1.3rem\", color: \"green\" }}>매너 평가를 완료했습니다.</p>\n                                    </div>\n                                )}\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"구매 목록\"}></CategoryDirection>\n                <EmptyCheck text={\"구매한 상품이 없습니다\"} items={orders}></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchaseList;\n","/home/seung/react/shop/front-shop/src/components/OrderList.js",["284","285","286","287","288","289","290"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction OrderList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        await axios.get(\"/apis/v1/order/\" + userData.user_id).then((res) => {\n            console.log(res.data.payload);\n            let tmp_orders = res.data.payload.filter((order) => order.sales_stage != \"SO\");\n            let orderlist = tmp_orders.map((order, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        <Row style={{ padding: 10 }}>\n                            <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                                <img style={{ height: \"auto\", maxWidth: \"100%\", padding: 10 }} src={order.base64_image_url ? order.base64_image_url : placeholder}></img>\n                            </Col>\n                            <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                                <div style={{ paddingTop: 10 }}>\n                                    <p style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>{order.name}</p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>주문 수량: {order.demand_quantity}</p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>지불 금액: {setMoney(order.price)} ₩</p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>주문일: {setDate(order.created_at)}</p>\n                                    <p style={{ fontSize: \"1.4rem\" }}>\n                                        주문 상태:{\" \"}\n                                        {order.sales_stage == \"S\" ? (\n                                            <span style={{ color: \"red\" }}>판매자의 확인을 기다려주세요</span>\n                                        ) : (\n                                            <span style={{ color: \"green\", fontWeight: \"bold\" }}>예약되었습니다! 판매자와 거래하세요</span>\n                                        )}\n                                    </p>\n                                </div>\n                                <Row>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{ height: 40, fontSize: \"1.3rem\", marginTop: 10 }}\n                                                onClick={() => {\n                                                    connectSeller(order.seller_id);\n                                                }}\n                                            >\n                                                판매자에게 연락하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{ height: 40, fontSize: \"1.3rem\", marginTop: 10 }}\n                                                onClick={() => {\n                                                    onDeleteOrder(order.order_id);\n                                                }}\n                                            >\n                                                주문 취소하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                            <br />\n                        </Row>\n                    </ListGroup.Item>\n                );\n            });\n            setOrders(orderlist);\n        });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    const connectSeller = async (seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`);\n        let tmp = res.data.payload.phone_number;\n        let phone_number = tmp.slice(0, 3) + \"-\" + tmp.slice(3, 7) + \"-\" + tmp.slice(7, 11);\n        setModalOpen(true);\n        setModalContents(`[${phone_number}]로 연락해주세요!`);\n    };\n\n    const onDeleteOrder = (order_id) => {\n        axios\n            .delete(`/apis/v1/order/${order_id}`)\n            .then((res) => {\n                alert(\"주문이 취소되었습니다.\");\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                alert(\"문제가 발생했습니다. 관리자에게 문의해주세요\");\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"주문 목록\"}></CategoryDirection>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <EmptyCheck text={\"주문한 상품이 없습니다\"} items={orders}></EmptyCheck>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default OrderList;\n","/home/seung/react/shop/front-shop/src/components/MySales.js",["291","292","293","294"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { setDate, setMoney } from \"./Convenient\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\n\nfunction MySales({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [flag, setFlag] = useState(true);\n    const [products, setProducts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        const res = await axios.get(\"/apis/v1/product/user/\" + userData.user_id);\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((product, index) => {\n            let path = \"/mysales/\" + product.pk;\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ padding: 30 }}>\n                        <Col sm={{ span: 6, offset: 0 }} lg={{ span: 5, offset: 0 }} xs=\"12\">\n                            <Link style={{ textDecoration: \"none\", color: \"inherit\" }} key={index} to={path}>\n                                <img style={{ maxWidth: \"100%\", height: \"auto\" }} src={product.base64_image_url ? product.base64_image_url : placeholder}></img>\n                            </Link>\n                        </Col>\n\n                        <Col sm=\"6\" lg={{ span: 5, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>{product.name}</p>\n                                <p style={{ fontSize: \"1.3rem\" }}>총 수량: {product.quantity}</p>\n                                <p style={{ fontSize: \"1.2rem\" }}>가격: {setMoney(product.price)} ₩</p>\n                                <p style={{ fontSize: \"1.2rem\" }}>등록 날짜: {setDate(product.created_at)}</p>\n                                <Link style={{ textDecoration: \"none\", color: \"inherit\" }} key={index} to={path}>\n                                    <p style={{ fontSize: \"1.3rem\", color: \"green\" }}>주문한 사람이 있는지 확인해주세요!</p>\n                                </Link>\n                                <Button variant=\"outline-light\" style={{ fontSize: \"1rem\", background: \"#e85255\", fontSize: \"1.3rem\" }} onClick={(e) => onDeleteProduct(product.pk, e)}>\n                                    상품 등록 취소\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setProducts(product_list);\n    };\n\n    const onDeleteProduct = async (product_id, e) => {\n        setModalOpen(true);\n        setModalContents(\"상품 등록을 취소합니다\");\n        axios\n            .delete(`/apis/v1/product/${product_id}`)\n            .then((res) => {\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"문제가 발생했습니다. 관리자에게 문의하세요.\");\n            });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"내 상품 목록\"}></CategoryDirection>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <EmptyCheck text={\"등록한 상품이 없습니다\"} items={products}></EmptyCheck>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySales;\n","/home/seung/react/shop/front-shop/src/components/MySalesDetail.js",["295","296","297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Card } from \"react-bootstrap\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { useSelector } from \"react-redux\";\nimport arrow from \"../assets/images/arrow.png\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction MySalesDetail({ history, match }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [btnValue, setBtnValue] = useState(\"\");\n    const [orders, setOrders] = useState([]);\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        let image_list = await res.data.payload.image.map((img) => (\n            <div>\n                <br />\n                <img\n                    style={{\n                        maxWidth: \"100%\",\n                        height: \"auto\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </div>\n        ));\n        setImages(image_list);\n    };\n\n    const fetchUserInfo = async (userId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/sale/\" + match.params.number);\n        let tmp_orders = res.data.payload.filter((order) => order.sales_stage != \"SO\");\n\n        console.log(tmp_orders);\n        let orderlist = tmp_orders.map((order, index) => {\n            let sale_status = \"\";\n            if (order.sales_stage == \"S\") sale_status = \"판매 중\";\n            else if (order.sales_stage == \"SR\") sale_status = \"예약 중\";\n            else sale_status = \"판매 완료\";\n\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 20 }}>\n                        <Col>\n                            <p style={{ fontSize: \"1.5rem\" }}>주문자 선호 장소: {order.address}</p>\n                            <p style={{ fontSize: \"1.5rem\" }}>연락처: {order.phone_number}</p>\n                            <p style={{ fontSize: \"1.5rem\" }}>주문량: {order.demand_quantity}</p>\n                            <p style={{ fontSize: \"1.5rem\" }}>가격: {setMoney(order.price)} 원</p>\n                            <p style={{ fontSize: \"1.5rem\" }}>주문 일짜: {setDate(order.created_at)}</p>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Row>\n                                    <Col>\n                                        <button className=\"emptyButton\" onClick={() => fetchUserInfo(order.buyer_id)} style={{ height: \"4rem\", fontSize: \"1.3rem\" }}>\n                                            주문자 정보 보기\n                                        </button>\n                                    </Col>\n                                </Row>\n                                <Row style={{ marginTop: 20 }}>\n                                    <Col lg=\"3\" sm=\"4\" xs=\"12\">\n                                        <div className=\"dropdown\">\n                                            <button style={{ height: \"4rem\", padding: 10, width: 100 }} className=\"dropdown-button \">\n                                                {btnValue ? btnValue : sale_status}\n                                            </button>\n                                            <div class=\"dropdown-content\">\n                                                <a\n                                                    name=\"예약 중\"\n                                                    onClick={(e) => {\n                                                        onClickHandler({ order, product_id: match.params.number }, e);\n                                                    }}\n                                                >\n                                                    예약 중\n                                                </a>\n                                                <a\n                                                    name=\"판매 완료\"\n                                                    onClick={(e) => {\n                                                        onClickHandler({ order, product_id: match.params.number }, e);\n                                                    }}\n                                                >\n                                                    판매 완료\n                                                </a>\n                                                <a\n                                                    name=\"거래 취소\"\n                                                    onClick={(e) => {\n                                                        onClickHandler({ order, product_id: match.params.number }, e);\n                                                    }}\n                                                >\n                                                    거래 취소\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" sm=\"12\" xs=\"12\">\n                                        <p style={{ fontSize: \"1.2rem\", padding: 10, color: \"red\" }}>주문 상태를 조회해주세요!</p>\n                                    </Col>\n                                </Row>\n                            </Row>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchProduct();\n        fetchOrders();\n    }, [userData.user_id, btnValue]);\n\n    const onClickHandler = async (orderData, e) => {\n        const { product_id, order } = orderData;\n\n        if (e.target.name === \"판매 완료\") {\n            let data = { sales_stage: \"SO\", product_id, demand_quantity: order.demand_quantity, total_quantity: order.total_quantity };\n\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 완료되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else if (e.target.name === \"예약 중\") {\n            let data = { sales_stage: \"SR\" };\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 예약되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else {\n            axios\n                .delete(\"/apis/v1/order/\" + order.order_id)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"주문이 취소되었습니다.\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        }\n        setBtnValue(e.target.name);\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"내 상품 목록\"} tag2={product.name}></CategoryDirection>\n\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <Accordion style={{ marginTop: 40 }}>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <p style={{ fontSize: \"1.7rem\", margin: 15 }}>내 상품 확인하기</p>\n                                </Accordion.Toggle>\n\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Col>\n                                                <ListGroup>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>카테고리: {product.category}</ListGroup.Item>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>상품명: {product.name}</ListGroup.Item>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>가격: {setMoney(product.price)} 원</ListGroup.Item>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>수량: {product.quantity}</ListGroup.Item>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>설명: {product.description}</ListGroup.Item>\n                                                    <ListGroup.Item style={{ fontSize: \"1.3rem\" }}>등록일: {setDate(product.created_at)}</ListGroup.Item>\n\n                                                    <ListGroup.Item>{images}</ListGroup.Item>\n                                                </ListGroup>\n                                                <br />\n                                            </Col>\n                                        </Row>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n\n                        <ListGroup style={{ marginTop: 20 }}>\n                            {orders.length == 0 ? (\n                                <div>\n                                    <br />\n                                    <p style={{ fontSize: \"1.7rem\" }}>아직 주문한 사람이 없네요...</p>\n                                    <img style={{ maxWidth: \"50%\", height: \"auto\" }} src={EmptyBox}></img>\n                                </div>\n                            ) : (\n                                <div>\n                                    <br />\n                                    <p className=\"primaryColor\" style={{ fontSize: \"1.8rem\", margin: 20 }}>\n                                        주문 요청이 들어왔어요!\n                                    </p>\n                                    {orders}\n                                </div>\n                            )}\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySalesDetail;\n","/home/seung/react/shop/front-shop/src/components/LikeList.js",["308","309","310","311","312","313","314"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { Link } from \"react-router-dom\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setDate, setMoney } from \"./Convenient\";\n\nfunction Likes({ history }) {\n    const [carts, setCarts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchCarts = async () => {\n        let res = await axios.get(\"/apis/v1/carts/users/\" + userData.user_id);\n        let cartList = res.data.payload;\n        let res_product = await axios.get(\"/apis/v1/product\");\n\n        let productList = res_product.data.payload;\n        cartList = cartList.map((cart, index) => {\n            console.log(productList);\n            const tmp_product = productList.find((product) => product.pk == cart.productId);\n            if (!tmp_product) {\n                return;\n            }\n            let path = `/product/${tmp_product.pk}`;\n            return (\n                <div>\n                    <Link to={path} style={{ textDecoration: \"none\", color: \"inherit\" }}>\n                        <ListGroup.Item key={index}>\n                            <Row style={{ margin: 30 }}>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <img style={{ height: \"auto\", maxWidth: \"100%\", objectFit: \"cover\" }} src={tmp_product.base64_image_url}></img>\n                                </Col>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <div style={{ marginLeft: 20 }}>\n                                        <p style={{ fontSize: \"1.5rem\", fontWeight: \"bold\", marginLeft: 20, paddingTop: 20 }}>{tmp_product.name}</p>\n                                        <p style={{ fontSize: \"1.3rem\", marginLeft: 20 }}>남은 수량: {tmp_product.quantity}</p>\n                                        <p style={{ fontSize: \"1.3rem\", marginLeft: 20 }}>{setMoney(tmp_product.price)} ₩</p>\n                                        <p style={{ fontSize: \"1.3rem\", marginLeft: 20 }}>찜한 날짜: {setDate(cart.createdAt)}</p>\n\n                                        <br />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </Link>\n                </div>\n            );\n        });\n\n        setCarts(cartList);\n    };\n\n    useEffect(() => {\n        fetchCarts();\n    }, [userData.user_id]);\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"찜 목록\"}></CategoryDirection>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <EmptyCheck text={\"찜한 상품이 없습니다\"} items={carts ? carts : []}></EmptyCheck>s\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Likes;\n","/home/seung/react/shop/front-shop/src/components/EmptyCheck.js",["315","316","317","318"],"import React from \"react\";\nimport { Row, Col, ListGroup } from \"react-bootstrap\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport MakeCard from \"./MakeCard\";\nconst EmptyCheck = ({ text, items }) => {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col lg={{ span: 6, offset: 3 }} sm={{ span: 9, offset: 1 }} xs={{ span: 12 }}>\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }} src={EmptyBox}></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <ListGroup>{items}</ListGroup>;\n    }\n};\n\nexport function EmptyCheckProductByCategory({ text, items }) {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col lg={{ span: 6, offset: 3 }} sm={{ span: 12, offset: 0 }}>\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }} src={EmptyBox}></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <MakeCard products={items}></MakeCard>;\n    }\n}\n\nexport default EmptyCheck;\n","/home/seung/react/shop/front-shop/src/components/Convenient.js",[],"/home/seung/react/shop/front-shop/src/components/MakeCard.js",["319"],"import { Row, Col, Card } from \"react-bootstrap\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { setMoney } from \"./Convenient\";\n// id가 필요하다!!\nconst MakeCard = ({ products }) => {\n    products = products.filter((product) => product.quantity > 0);\n    products = products.map((product, index) => {\n        let path = \"/product/\" + product.id;\n        return (\n            <Col lg={4} sm={6} key={index} bg={\"Light\"}>\n                <Link style={{ textDecoration: \"none\", color: \"inherit\" }} key={index} to={path}>\n                    <Card border=\"secondary\" style={{ height: \"29rem\" }}>\n                        <Row>\n                            <Card.Img variant=\"top\" style={{ height: \"22rem\", objectFit: \"cover\" }} src={product.base64_image_url ? product.base64_image_url : placeholder} />\n                        </Row>\n\n                        <Card.Body style={{ marginTop: 4 }}>\n                            <Card.Title style={{ fontSize: \"1.4rem\" }}>{product.name}</Card.Title>\n                            <Card.Text style={{ fontSize: \"1.5rem\", fontWeight: \"bolder\" }}>{setMoney(product.price)} ₩</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Link>\n                <br />\n            </Col>\n        );\n    });\n    return <Row>{products}</Row>;\n};\n\nexport default MakeCard;\n\nexport const MakeAuctionCard = ({ products }) => {\n    // products = products.filter(product => product.quantity > 0)\n    products = products.map((product, index) => {\n        let path = `/auction/detail/${product.id}`;\n        return (\n            <Col lg={4} sm={6} key={index} bg={\"Light\"}>\n                <Link style={{ textDecoration: \"none\", color: \"inherit\" }} key={index} to={path}>\n                    <Card border=\"secondary\" style={{ height: \"29rem\" }}>\n                        <Row>\n                            <Card.Img variant=\"top\" style={{ height: \"22rem\", objectFit: \"cover\" }} src={product.fileurl != 0 ? product.fileurl[0].fileurls : placeholder} />\n                        </Row>\n\n                        <Card.Body style={{ marginTop: 4 }}>\n                            <Card.Title style={{ fontSize: \"1.4rem\" }}>{product.name}</Card.Title>\n                            <Card.Text style={{ fontSize: \"1.5rem\", fontWeight: \"bolder\" }}>{setMoney(product.price)} ₩</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Link>\n                <br />\n            </Col>\n        );\n    });\n    return <Row>{products}</Row>;\n};\n","/home/seung/react/shop/front-shop/src/components/UserBanner.js",[],"/home/seung/react/shop/front-shop/src/components/AreaButton.js",[],"/home/seung/react/shop/front-shop/src/components/Rating.js",["320","321","322"],"import { Col, Row } from \"react-bootstrap\";\nimport ther from \"../assets/images/ther.png\";\nimport userImage from \"../assets/images/user2.png\";\nfunction Rating({ user, area }) {\n    if (!user) {\n        return <div></div>;\n    }\n\n    let { username, temperature, celcius } = user;\n    let tmp = <div></div>;\n    let temp_type;\n\n    if (celcius) {\n        temp_type = temperature + \"℃\";\n    } else {\n        temp_type = temperature + \"°F\";\n    }\n\n    if (!temperature) {\n        tmp = <div style={{ marginTop: \"1rem\", padding: 1, fontSize: \"1.3rem\", color: \"black\" }}>{\"36.5℃\"}</div>;\n    } else if (temperature > 36.5) {\n        tmp = <div style={{ marginTop: \"1rem\", padding: 1, fontSize: \"1.3rem\", color: \"green\", fontWeight: \"bold\" }}>{temp_type}</div>;\n    } else if (temperature == 36.5) {\n        tmp = <div style={{ marginTop: \"1rem\", padding: 1, fontSize: \"1.3rem\", fontWeight: \"bold\" }}>{temp_type}</div>;\n    } else {\n        tmp = <p style={{ marginTop: \"1rem\", padding: 1, fontSize: \"1.3rem\", color: \"red\" }}>{temp_type}</p>;\n    }\n    return (\n        <Row style={{ margin: 10, paddingTop: 10 }}>\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\">\n                <img style={{ maxWidth: \"100%\", height: \"auto\" }} src={userImage} />\n            </Col>\n\n            <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"5\">\n                {area ? (\n                    <div>\n                        <Row>\n                            <p style={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}>{username}</p>\n                        </Row>\n                        <Row style={{ fontSize: \"1.3rem\" }}>{area ? area : \"\"}</Row>\n                    </div>\n                ) : (\n                    <div>\n                        <Row>\n                            <p style={{ fontSize: \"1.5rem\", padding: 10 }}>{username}</p>\n                        </Row>\n                    </div>\n                )}\n            </Col>\n\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"5\">\n                <Row>\n                    <Col xs={{span:3, offset:3}} sm={{span:3, offset:4}} md={{ span: 3, offset: 0 }}  lg={{ span: 3, offset: 4 }} style={{ paddingTop: 0 }}>\n                        {tmp}\n                    </Col>\n                    <Col xs=\"4\" sm=\"5\" md=\"6\" lg=\"4\">\n                        <img style={{ maxWidth: \"100%\", height: \"auto\" }} src={ther} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Rating;\n","/home/seung/react/shop/front-shop/src/components/Modal.js",[],"/home/seung/react/shop/front-shop/src/components/NotFound.js",[],"/home/seung/react/shop/front-shop/src/components/UploadS3.js",["323","324","325"],"import React , {useEffect, useState} from 'react';\nimport { uploadFile } from 'react-s3';\nimport dotenv from 'dotenv'\ndotenv.config()\n\n\n\nconst S3_BUCKET =required(\"REACT_APP_BUCKET_NAME\");\nconst REGION =required(\"REACT_APP_REGION\");\nconst ACCESS_KEY =required(\"REACT_APP_ACCESS_KEY\");\nconst SECRET_ACCESS_KEY =required(\"REACT_APP_ACCESS_SECRET_KEY\");\n\n\nfunction required(key, defaultValue = undefined) {\n    const value = process.env[key] || defaultValue;\n    if(value == null) {\n        throw new Error(`Key ${key} is undefined`);\n    }\n    return value;\n};\n\nexport const S3Config = {\n    bucketName: S3_BUCKET,\n    region: REGION,\n    accessKeyId: ACCESS_KEY,\n    secretAccessKey: SECRET_ACCESS_KEY,\n};\nexport const UploadS3 = async(files) => {\n    if(!files){\n        return;\n    }\n    console.log(files);\n    files.forEach(file => {\n        uploadFile(file, S3Config)\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n    });\n       \n};\n\n","/home/seung/react/shop/front-shop/src/components/MainPost.js",["326","327","328","329","330","331","332","333"],"import { loginAction } from \"../modules/user\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport BasicPagination from \"./BasicPagination\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\nimport { setDate } from \"./Convenient\";\n\nexport default function MainPost({ history, match }) {\n    let pageNumber = match.params.number;\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [modalContents, setModalContents] = useState(\"\");\n\n    const [posts, setPosts] = useState([]);\n    // const {username, password} = userData;\n\n    const fetchPost = async () => {\n        let res = await axios.get(`/apis/v1/post/page/${pageNumber}`);\n        displayPostList(res.data.payload);\n    };\n\n    const displayPostList = (payload) => {\n        if (!payload.length) {\n            alert(\"게시글이 없습니다\");\n\n            setPosts(<div style={{ fontSize: \"1.3rem\", padding: 3, paddingLeft: 10 }}>게시글이 없습니다.</div>);\n            return;\n        }\n\n        let post_list = payload.map((item) => {\n            const { id, hit, title, createdAt } = item;\n\n            return (\n                <div\n                    style={{ fontSize: \"1.3rem\", padding: 5 }}\n                    onClick={() => {\n                        history.push(`/post/detail/${id}`);\n                    }}\n                >\n                    <Row>\n                        <Col xs={{ span: 1, offset: 0 }}>\n                            <div>{id}</div>\n                        </Col>\n                        <Col md={{ span: 8, offset: 0 }} xs={{ span: 6, offset: 0 }}>\n                            <div align=\"center\">{title}</div>\n                        </Col>\n                        <Col md={{ span: 1 }} xs={{ span: 2, offset: 0 }}>\n                            <div>{hit}</div>\n                        </Col>\n                        <Col md={{ span: 2, offset: 0 }}xs={{ span: 3, offset: 0 }}>\n                            <div>{setDate(createdAt)}</div>\n                        </Col>\n                    </Row>\n                </div>\n            );\n        });\n\n        setPosts(post_list);\n    };\n\n    useEffect(() => {\n        fetchPost();\n    }, [pageNumber]);\n\n    return (\n        <div>\n            {/* <div className=\"primaryBackground\"> */}\n            <div style={{ background: \"#dedede\" }}>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 5, offset: 7 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/post/register\");\n                                }}\n                            >\n                                게시글 등록하기\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Container>\n                <Modal open={modalOpen} close={closeModal}>\n                    {modalContents}\n                </Modal>\n\n                <CategoryDirection tag1={\"자유 거래 게시판\"}></CategoryDirection>\n                <br />\n\n                <Container>\n                    <Row>\n                        <Col lg={{ span: 10, offset: 1 }}>\n                            <div style={{ border: \"1px solid #dedede\" }}>\n                                <div style={{ background: \"#444444\", color: \"white\", fontSize: \"1.3rem\", padding: 4 }}>\n                                    <Row>\n                                        <Col xs={{ span: 1 }}>\n                                            <div>No</div>\n                                        </Col>\n                                        <Col md={{ span: 8 }} xs={{ span: 6, offset: 0 }}>\n                                            <div align=\"center\">Subject</div>\n                                        </Col>\n                                        <Col md={{ span: 1 }} xs={{ span: 2, offset: 0 }}>\n                                            <div>Read</div>\n                                        </Col>\n                                        <Col md={{ span: 2 }} xs={{ span: 3, offset: 0 }}>\n                                            <div>Date</div>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                {posts}\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <br />\n                    <br />\n\n                    <Row>\n                        <Col lg={{ span: \"6\", offset: \"4\" }} md={{ span: \"6\", offset: \"4\" }} sm={{ span: \"6\", offset: \"3\" }} xs={{ span: \"8\", offset: \"3\" }}>\n                            <BasicPagination history={history} path=\"/post/page\" />\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n        </div>\n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>username</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Login\n    //         </button>\n    //     </form>\n    // </div>);\n}\n","/home/seung/react/shop/front-shop/src/components/BasicPagination.js",["334"],"import React, { useEffect } from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nconst BasicPagination = ({path, history }) =>{\n    let items = [];\n\n    const onClickHandler = (number) =>{\n      history.push(`${path}/${number}`);\n    }\n\n    for (let number = 1; number <= 10; number++) {\n      items.push(\n\n        <Pagination.Item key={number} onClick={()=>onClickHandler(number)}>\n          {number}  \n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <div>\n      <Pagination size=\"md\">{items}</Pagination>\n      <br />\n    </div>\n    )\n    \n};\n\n\nexport default BasicPagination;\n","/home/seung/react/shop/front-shop/src/components/PostDetail.js",["335","336","337","338","339","340","341","342","343"],"import { loginAction } from \"../modules/user\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col, Table, ListGroup } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport BasicPagination from \"./BasicPagination\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\nimport Rating from \"./Rating\";\nimport { setDate } from \"./Convenient\";\n\nexport default function PostDetail({ history, match }) {\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    let postId = match.params.number;\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const [user, setUser] = useState({\n        username: \"\",\n        temperature: \"\",\n        celcius: \"\",\n    });\n    const [post, setPost] = useState({\n        title: \"\",\n        description: \"\",\n        area: \"\",\n        hit: 0,\n        createdAt: \"\",\n        Images: [],\n    });\n    const [comments, setComments] = useState([]);\n    const [contents, setContents] = useState(\"\");\n\n    const fetchPost = async () => {\n        await axios.get(`/apis/v1/post/${postId}/hit`);\n        let res = await axios.get(`/apis/v1/post/${postId}`);\n        await axios\n            .get(`/apis/v1/user/${res.data.payload.user_id}`)\n            .then((res) => {\n                setUser(res.data.payload);\n            })\n            .catch(() => {\n                setUser({\n                    ...user,\n                    username: \"탈퇴한 사용자\"\n                })\n            });\n\n        setPost(res.data.payload);\n    };\n\n    const onChangeHandler = (e) => {\n        const { value } = e.target;\n        setContents(value);\n    };\n\n    const onClickHandler = async (e) => {\n        if (!isLoggedIn || !userData) {\n            e.preventDefault();\n            alert(\"로그인 후 이용해주세요\");\n            return;\n        }\n        if (contents === \"\") {\n            e.preventDefault();\n            alert(\"최소 한 글자를 입력해 주세요\");\n            return;\n        }\n\n        let body = {\n            user_id: userData.user_id,\n            content: contents,\n        };\n        await axios.post(`/apis/v1/post/${postId}/comment`, body);\n    };\n\n    const fetchComments = async () => {\n        let res = await axios.get(`/apis/v1/post/${postId}/comment`);\n        let tmp_comment = res.data.payload;\n\n        let userComments = [];\n        tmp_comment.forEach(async (e) => {\n            let res_user = await axios.get(`/apis/v1/user/${e.user_id}`);\n            let user = res_user.data.payload;\n            userComments.push(\n                <div style={{ margin: 10, border: \"1px solid #dedede\", padding: 10 }}>\n                    <Row>\n                        <Col lg={{ span: 2, offset: 0 }}>\n                            <div style={{ fontSize: \"1.3rem\", fontWeight: \"bold\", margin: 3 }}>{user.username}</div>\n                        </Col>\n                        <Col lg={{ span: 9, offset: 0 }}>\n                            <div style={{ fontSize: \"1.3rem\", margin: 3 }}>{e.content}</div>\n                            <div style={{ fontSize: \"1rem\", margin: 3 }}>{setDate(e.createdAt)}</div>\n                        </Col>\n                    </Row>\n                </div>\n            );\n        });\n        setComments(userComments);\n    };\n\n    useEffect(() => {\n        fetchPost();\n        fetchComments();\n    }, [postId]);\n\n    return (\n        <div>\n            <div style={{ background: \"#dedede\" }}>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 5, offset: 7 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/post/register\");\n                                }}\n                            >\n                                게시글 등록하기\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Container>\n                <Modal open={modalOpen} close={closeModal}>\n                    {modalContents}\n                </Modal>\n                <CategoryDirection tag1={\"자유 거래 게시판\"} tag2={post.title}></CategoryDirection>\n                <br />\n                <div>\n                    <Row>\n                        <Col lg={{ span: \"10\", offset: \"1\" }}>\n                            <div className=\"primaryBackground\" style={{ fontSize: \"1.8rem\", padding: 5, border: \"1px solid #dedede\", color: \"white\" }}>\n                                <Row>\n                                    <Col sm={{ offset: 0 }}>\n                                        <div style={{ margin: 3 }}>\n                                            <span style={{ fontSize: \"1.5rem\" }}>#{post.id}</span>\n                                            <span style={{ marginLeft: 15, marginRight: 5 }}>{post.title}</span>\n                                            <span>[{post.hit}]</span>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                            <div style={{ border: \"1px solid #dedede\" }}>\n                                <Row>\n                                    <Col lg={{ span: 6, offset: 0 }} md={{ span: 6, offset: 0 }} sm={{ span: 7, offset: 0 }} style={{ marginBottom: 10, marginLeft: 10 }}>\n                                        <Rating user={user} area={post.area} />\n                                    </Col>\n                                    <Col lg={{ span: 3, offset: 2 }} md={{ span: 4, offset: 1 }} sm={{ span: 4, offset: 0 }}>\n                                        <div style={{ margin: 10, fontSize: \"1.3rem\" }}>Date: {setDate(post.createdAt)}</div>\n                                        <div style={{ margin: 10, fontSize: \"1.3rem\" }}>Hit: {post.hit}</div>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                            <div style={{ border: \"1px solid #dedede\", padding: 30 }}>\n                                <div>\n                                    <img style={{ width: \"80%\", height: \"auto\" }} src={post.Images.length ? post.Images[0].image_url : \"\"}></img>\n                                </div>\n\n                                <div style={{ fontSize: \"1.5rem\", marginTop: 20 }}>{post.description}</div>\n                            </div>\n                            {comments.length ? <div style={{ padding: 10, fontSize: \"1.2rem\", border: \"1px solid #dedede\" }}>댓글이 {comments.length}개 달렸습니다.</div> : \"\"}\n                            <div style={{ padding: 10, fontSize: \"1.2rem\", border: \"1px solid #dedede\" }}>{comments.length ? comments : <div>댓글이 없습니다</div>}</div>\n                            <div style={{ border: \"1px solid #dedede\", padding: 10 }}>\n                                <Form>\n                                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                                        <Col lg={{ span: 10, offset: 0 }} sm={{ span: 9, offset: 0 }} xs={{ span: 8, offset: 0 }}>\n                                            <Form.Control size=\"lg\" name=\"contents\" value={contents} onChange={onChangeHandler} placeholder=\"로그인 후 사용해 주세요\" />\n                                        </Col>\n                                        <Col lg={{ span: 2, offset: 0 }} sm={{ span: 3, offset: 0 }} xs={{ span: 4, offset: 0 }}>\n                                            <div className=\"d-grid gap-2\" style={{ fontSize: \"1.3rem\" }}>\n                                                <button\n                                                    onClick={onClickHandler}\n                                                    style={{ height: \"3rem\" }}\n                                                    // type=\"submit\"\n                                                    className=\"filledButton\"\n                                                >\n                                                    댓글 입력\n                                                </button>\n                                            </div>\n                                        </Col>\n                                    </Form.Group>\n                                </Form>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n","/home/seung/react/shop/front-shop/src/components/PostRegister.js",["344","345","346","347","348","349","350"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport ImageUploading from \"react-images-uploading\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport AreaButton from \"./AreaButton\";\nimport Modal from \"./Modal\";\nimport { S3Config, UploadS3 } from \"./UploadS3\";\n\nfunction PostRegister({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [area, setArea] = useState(\"지역을 선택해 주세요\");\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const handleFileInput = (e) => {\n        // setSelectedFile(selectedFile.concat(e.target.files[0]));\n        setSelectedFiles(selectedFiles.concat(e.target.files[0]));\n    };\n    const maxNumber = 4;\n\n    const [content, setContent] = useState({\n        title: \"\",\n        description: \"\",\n    });\n    const { title, description } = content;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setContent({\n            ...content,\n            [name]: value,\n        });\n    };\n\n    const onChangeArea = (e) => {\n        const { name, value } = e.target;\n        setArea(value);\n    };\n\n    const onClickHandler = () => {\n        if (!(title && description)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n\n        if (area == undefined || area == null || area == \"지역을 선택해 주세요\") {\n            setModalOpen(true);\n            setModalContents(\"거래 지역을 선택해 주세요\");\n            return;\n        }\n\n        const body = {\n            user_id: userData.user_id,\n            title: title,\n            area: area,\n            description: description,\n            images: selectedFiles.map(\n                (image) => `https://${S3Config.bucketName}.s3.${S3Config.region}.amazonaws.com/${image.name}`\n                // ...image_list  // 용량이 크면 안넘어가\n            ),\n        };\n\n        UploadS3(selectedFiles);\n\n        axios\n            .post(\"/apis/v1/post\", body)\n            .then((response) => {\n                history.replace(\"/post/page/1\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"상품 등록에 실패하였습니다. 관리자에게 문의하세요.\");\n            });\n    };\n\n    const checkLogin = () => {\n        if (!isLoggedIn || !userData) {\n            alert(\"로그인 후 이용해 주세요!\");\n            history.goBack();\n        }\n    };\n\n    useEffect(() => {\n        checkLogin();\n    }, []);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <div style={{ background: \"#dedede\" }}>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 5, offset: 7 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/post/register\");\n                                }}\n                            >\n                                게시글 등록하기\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n            <Container>\n                <CategoryDirection tag1={\"자유거래 게시판\"} tag2={\"게시글 등록하기\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.3rem\" }}>\n                    <Row>\n                        <Col lg={{ span: 11, offset: 2 }} sm={{ span: 12, offset: 0 }} xs={{ span: 12 }}>\n                            <Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        제목\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\" xs=\"8\">\n                                        <Form.Control name=\"title\" value={title} onChange={onChangeHandler} placeholder=\"상품명을 적어주세요\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Row>\n                                    <Col sm=\"2\" lg=\"1\" xs=\"4\" style={{ paddingTop: 20 }}>\n                                        거래 지역\n                                    </Col>\n                                    <Col sm=\"6\" lg=\"6\" xs=\"6\" style={{ paddingTop: 8 }}>\n                                        <AreaButton onChange={onChangeArea} area={area} />\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                                    <Form.Label column sm=\"2\" lg=\"1\">\n                                        내용\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\">\n                                        <Form.Control as=\"textarea\" rows={5} onChange={onChangeHandler} name=\"description\" placeholder=\"상품 설명을 적어주세요\" value={description} />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                                    <Col>\n                                        <input type=\"file\" onChange={handleFileInput} />\n                                        {/* <button onClick={(e) => emptyFiles(e)}>Empty</button> */}\n\n                                        {/* <p>{`이미지는 최대 ${maxNumber}개까지만 첨부할 수 있습니다`}</p> */}\n                                        <br />\n                                        <br />\n                                    </Col>\n                                </Form.Group>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"outline-light\"\n                                    style={{ background: \"#e85255\", fontSize: \"1.3rem\" }}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        onClickHandler();\n                                    }}\n                                >\n                                    게시글 등록\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default PostRegister;\n","/home/seung/react/shop/front-shop/src/components/ProductDetail.js",["351","352","353","354","355","356","357","358"],"import { ListGroup, Container, Button, Form, Row, Col, ListGroupItem } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport EmptyHeartImg from \"../assets/images/heart.png\";\nimport HeartImg from \"../assets/images/heart_pressed.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction ProductDetail({ match, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [amount, setAmount] = useState(1);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [like, setLike] = useState({ checked: false });\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const [seller, setSeller] = useState({});\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n        let tmp = res.data.payload;\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        setImages(tmp.image);\n\n        let res_seller = await axios.get(\"/apis/v1/user/\" + tmp.seller_id);\n        setSeller(res_seller.data.payload);\n\n        // check likes\n\n        if (isLoggedIn) {\n            let body = {\n                seller_id: res.data.payload.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(match.params.number),\n            };\n            let res_likes = await axios.post(\"/apis/v1/carts/check\", body);\n            setLike(res_likes.data.payload);\n        }\n    };\n\n    useEffect(() => {\n        fetchProduct();\n    }, [match.params.number, like.checked]);\n\n    const onClickOrder = (e) => {\n        if (isLoggedIn === false || userData == null) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            history.replace(\"/login\");\n        } else if (userData.user_id == product.seller_id) {\n            setModalOpen(true);\n            setModalContents(\"판매자가 구매할 수 없습니다.\");\n            e.preventDefault();\n        } else if (amount < 1 || amount > product.quantity) {\n            setModalOpen(true);\n            setModalContents(\"수량이 올바르지 않습니다.\");\n            e.preventDefault();\n        }\n    };\n\n    const onClickCart = async () => {\n        if (isLoggedIn === false) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            return;\n        }\n\n        if (like.checked) {\n            await axios.delete(`/apis/v1/carts/${like[0]._id}`);\n            setLike({ checked: false });\n        } else {\n            let body = {\n                seller_id: product.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(product.product_id),\n            };\n            await axios.post(\"/apis/v1/carts/\", body);\n            setLike({ checked: true });\n        }\n    };\n\n    const onChangeHandler = (e) => {\n        const { value } = e.target;\n        setAmount(parseInt(value));\n    };\n\n    const displayImages = () => {\n        if (images.length == 1) {\n            return;\n        }\n        return images.slice(1).map((img) => (\n            <ListGroupItem>\n                <br />\n                <img\n                    style={{\n                        width: \"60vw\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </ListGroupItem>\n        ));\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={product.category} tag2={product.name} />\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        {\" \"}\n                        <div style={{ border: \"1px solid #dedede\", padding: 5 }}>\n                            <Row>\n                                <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"7\">\n                                    <div style={{ padding: 15 }}>\n                                        <img\n                                            style={{\n                                                width: \"100%\",\n                                                height: \"auto\",\n                                            }}\n                                            src={images[0]}\n                                        ></img>\n                                    </div>\n                                </Col>\n                                <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"5\">\n                                    <div style={{ border: \"1px solid #dedede\", margin: 5 }}>\n                                        <Row style={{ paddingTop: 5 }}>\n                                            <Rating user={seller} area={product.area} />\n                                        </Row>\n                                        <hr />\n\n                                        <Row style={{ marginTop: 20, paddingTop: 20 }}>\n                                            <Col xs=\"9\" sm=\"9\">\n                                                <p style={{ marginLeft: 20, fontSize: \"2.2rem\", fontWeight: \"bolder\" }}>{product.name}</p>\n                                            </Col>\n                                            <Col xs=\"3\" sm=\"3\">\n                                                <img style={{ width: \"2rem\" }} src={like.checked ? HeartImg : EmptyHeartImg} onClick={onClickCart}></img>\n                                            </Col>\n                                        </Row>\n\n                                        <p style={{ fontSize: \"2rem\", margin: 20 }}>{setMoney(product.price)} ₩</p>\n                                        <p style={{ fontSize: \"1.5rem\", margin: 20 }}>남은 수량: {product.quantity}</p>\n                                        <Row style={{ fontSize: \"1.5rem\", padding: 20 }}>\n                                            <Col xs=\"6\" sm=\"12\" lg={4}>\n                                                <p>선택 수량:</p>\n                                            </Col>\n\n                                            <Col xs=\"6\" sm=\"9\" lg={4}>\n                                                <Form>\n                                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Control style={{ fontSize: \"1.5rem\" }} type=\"number\" onChange={onChangeHandler} value={amount} />\n                                                    </Form.Group>\n                                                </Form>\n                                            </Col>\n                                        </Row>\n                                        <Col>\n                                            <p style={{ fontSize: \"3em\", margin: 20 }}>\n                                                {product.price ? (product.price * amount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : product.price * amount} ₩\n                                            </p>\n                                        </Col>\n\n                                        <Col xs=\"12\">\n                                            <Link\n                                                to={\n                                                    isLoggedIn\n                                                        ? {\n                                                              pathname: `/purchase`,\n                                                              state: {\n                                                                  product: product,\n                                                                  demand_amount: amount,\n                                                              },\n                                                          }\n                                                        : \"/product/\" + match.params.number\n                                                }\n                                                style={{ textDecoration: \"none\" }}\n                                            >\n                                                <div className=\"d-grid gap-2\">\n                                                    <button className=\"emptyButton\" onClick={onClickOrder} style={{ fontSize: \"1.3rem\", margin: 20, height: 50 }}>\n                                                        구매하기\n                                                    </button>\n                                                </div>\n                                            </Link>\n                                        </Col>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Row style={{ marginTop: 40 }}>\n                            <Col>\n                                <ListGroup>\n                                    <ListGroupItem>\n                                        <p style={{ margin: 10, fontSize: \"2rem\" }}>상품 상세 </p>\n                                    </ListGroupItem>\n\n                                    {displayImages()}\n\n                                    <ListGroupItem>\n                                        <p style={{ margin: 20, fontSize: \"2rem\" }}>{product.description}</p>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductDetail;\n","/home/seung/react/shop/front-shop/src/components/auction/AuctionHome.js",["359","360"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Col, Container, Navbar, Row, Spinner } from \"react-bootstrap\";\nimport { MakeAuctionCard } from \"../MakeCard\";\n\nexport default function AuctionHome({ history }) {\n    const [products, Setproducts] = useState([]);\n\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/store\");\n        let _product = res.data;\n        Setproducts(_product);\n    };\n\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    return (\n        <div>\n            <div style={{ background: \"#dedede\" }}>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 4, offset: 2 }} sm={{ span: 2, offset: 7 }} md={{ span: 1, offset: 9 }} lg={{ span: 1, offset: 8 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/auction/home\");\n                                }}\n                            >\n                                경매 홈\n                            </div>\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 3, offset: 0 }} md={{ span: 2, offset: 0 }} lg={{ span: 2, offset: 0 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/auction/register\");\n                                }}\n                            >\n                                경매상품 등록하기\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n            <div>\n                <br />\n                <Container>\n                    <div style={{ marginTop: 30 }} />\n\n                    <h3 style={{ marginTop: 40 }}>오늘의 경매</h3>\n\n                    <hr />\n                    {/* <Loading products={products} /> */}\n                    <MakeAuctionCard products={products}></MakeAuctionCard>\n                </Container>\n            </div>\n        </div>\n    );\n}\n","/home/seung/react/shop/front-shop/src/components/auction/AuctionRegister.js",["361","362","363","364","365"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport { CategoryDirection } from \"../CategoryBanner\";\nimport AreaButton from \"../AreaButton\";\nimport Modal from \"../Modal\";\nimport { S3Config, UploadS3 } from \"../UploadS3\";\n\nfunction AuctionRegister({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [area, setArea] = useState(\"지역을 선택해 주세요\");\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const handleFileInput = (e) => {\n        // setSelectedFile(selectedFile.concat(e.target.files[0]));\n        setSelectedFiles(selectedFiles.concat(e.target.files[0]));\n    };\n\n    const [content, setContent] = useState({\n        name: \"\",\n        description: \"\",\n        price: 0,\n    });\n    const { name, description, price } = content;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setContent({\n            ...content,\n            [name]: value,\n        });\n    };\n\n    const onChangeArea = (e) => {\n        const { name, value } = e.target;\n        setArea(value);\n    };\n\n    const onClickHandler = () => {\n        if (!(name && description && price)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n\n        if (area == undefined || area == null || area == \"지역을 선택해 주세요\") {\n            setModalOpen(true);\n            setModalContents(\"거래 지역을 선택해 주세요\");\n            return;\n        }\n\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            price: parseInt(price),\n            area: area,\n            description: description,\n            fileurl: selectedFiles.map((image) => ({ fileurls: `https://${S3Config.bucketName}.s3.${S3Config.region}.amazonaws.com/${image.name}` })),\n        };\n\n        UploadS3(selectedFiles);\n\n        axios\n            .post(\"/apis/v1/store\", body)\n            .then((response) => {\n                // history.replace(\"/auction/home\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"경매 등록에 실패하였습니다. 관리자에게 문의하세요.\");\n            });\n        history.replace(\"/auction/home\");\n    };\n\n    const checkLogin = () => {\n        if (!isLoggedIn || !userData) {\n            alert(\"로그인 후 이용해 주세요!\");\n            history.goBack();\n        }\n    };\n\n    useEffect(() => {\n        checkLogin();\n    }, []);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <div style={{ background: \"#dedede\" }}>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 4, offset: 2 }} sm={{ span: 2, offset: 7 }} md={{ span: 1, offset: 9 }} lg={{ span: 1, offset: 8 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/auction/home\");\n                                }}\n                            >\n                                경매 홈\n                            </div>\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 3, offset: 0 }} md={{ span: 2, offset: 0 }} lg={{ span: 2, offset: 0 }}>\n                            <div\n                                style={{ height: \"2rem\", fontSize: \"1.2rem\", margin: 3, color: \"#44444\" }}\n                                onClick={() => {\n                                    history.push(\"/auction/register\");\n                                }}\n                            >\n                                경매상품 등록하기\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n            <Container>\n                <CategoryDirection tag1={\"경매\"} tag2={\"상품 등록하기\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.3rem\" }}>\n                    <Row>\n                        <Col lg={{ span: 11, offset: 2 }} sm={{ span: 12, offset: 0 }} xs={{ span: 12 }}>\n                            <Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        상품명\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"8\" xs=\"8\">\n                                        <Form.Control name=\"name\" value={name} onChange={onChangeHandler} placeholder=\"상품명을 적어주세요\" />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\" as={Row}>\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        시작 금액\n                                    </Form.Label>\n                                    <Col sm=\"2\" lg=\"2\" xs=\"4\">\n                                        <Form.Control name=\"price\" value={price} onChange={onChangeHandler} placeholder=\"시작 금액을 적어주세요\" />\n                                    </Col>\n                                    <Form.Label column sm=\"1\" lg=\"1\" xs=\"2\">\n                                    ₩\n                                    </Form.Label>\n                                </Form.Group>\n\n                                <Row>\n                                    <Col sm=\"2\" lg=\"1\" xs=\"4\" style={{ paddingTop: 20 }}>\n                                        거래 지역\n                                    </Col>\n                                    <Col sm=\"6\" lg=\"6\" xs=\"6\" style={{ paddingTop: 8 }}>\n                                        <AreaButton onChange={onChangeArea} area={area} />\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                                    <Form.Label column sm=\"2\" lg=\"1\">\n                                        내용\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\">\n                                        <Form.Control as=\"textarea\" rows={5} onChange={onChangeHandler} name=\"description\" placeholder=\"상품 설명을 적어주세요\" value={description} />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" as={Row}>\n                                    <Col>\n                                        <input type=\"file\" onChange={handleFileInput} />\n                                        {/* <button onClick={(e) => emptyFiles(e)}>Empty</button> */}\n\n                                        {/* <p>{`이미지는 최대 ${maxNumber}개까지만 첨부할 수 있습니다`}</p> */}\n                                        <br />\n                                        <br />\n                                    </Col>\n                                </Form.Group>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"outline-light\"\n                                    style={{ background: \"#e85255\", fontSize: \"1.3rem\" }}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        onClickHandler();\n                                    }}\n                                >\n                                    경매 등록\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default AuctionRegister;\n","/home/seung/react/shop/front-shop/src/components/auction/AuctionDetail.js",["366","367","368","369","370","371","372","373","374","375"],"/home/seung/react/shop/front-shop/src/components/util/date.js",[],["376","377"],"/home/seung/react/shop/front-shop/src/components/network/socket.js",[],"/home/seung/react/shop/front-shop/src/components/auction/timer.js",["378"],{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","severity":1,"message":"384","line":4,"column":9,"nodeType":"385","messageId":"386","endLine":4,"endColumn":20},{"ruleId":"383","severity":1,"message":"387","line":5,"column":26,"nodeType":"385","messageId":"386","endLine":5,"endColumn":32},{"ruleId":"383","severity":1,"message":"388","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":13},{"ruleId":"383","severity":1,"message":"389","line":2,"column":9,"nodeType":"385","messageId":"386","endLine":2,"endColumn":17},{"ruleId":"390","severity":1,"message":"391","line":35,"column":8,"nodeType":"385","endLine":35,"endColumn":12},{"ruleId":"390","severity":1,"message":"392","line":35,"column":8,"nodeType":"385","endLine":35,"endColumn":12,"suggestions":"393"},{"ruleId":"379","replacedBy":"394"},{"ruleId":"381","replacedBy":"395"},{"ruleId":"383","severity":1,"message":"396","line":1,"column":16,"nodeType":"385","messageId":"386","endLine":1,"endColumn":25},{"ruleId":"383","severity":1,"message":"384","line":3,"column":9,"nodeType":"385","messageId":"386","endLine":3,"endColumn":20},{"ruleId":"383","severity":1,"message":"397","line":3,"column":22,"nodeType":"385","messageId":"386","endLine":3,"endColumn":33},{"ruleId":"383","severity":1,"message":"387","line":4,"column":26,"nodeType":"385","messageId":"386","endLine":4,"endColumn":32},{"ruleId":"383","severity":1,"message":"398","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":14},{"ruleId":"383","severity":1,"message":"399","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":21},{"ruleId":"383","severity":1,"message":"400","line":6,"column":21,"nodeType":"385","messageId":"386","endLine":6,"endColumn":27},{"ruleId":"383","severity":1,"message":"401","line":6,"column":29,"nodeType":"385","messageId":"386","endLine":6,"endColumn":36},{"ruleId":"390","severity":1,"message":"402","line":40,"column":8,"nodeType":"403","endLine":40,"endColumn":10,"suggestions":"404"},{"ruleId":"383","severity":1,"message":"405","line":2,"column":31,"nodeType":"385","messageId":"386","endLine":2,"endColumn":34},{"ruleId":"383","severity":1,"message":"406","line":2,"column":50,"nodeType":"385","messageId":"386","endLine":2,"endColumn":61},{"ruleId":"383","severity":1,"message":"387","line":2,"column":63,"nodeType":"385","messageId":"386","endLine":2,"endColumn":69},{"ruleId":"383","severity":1,"message":"407","line":2,"column":71,"nodeType":"385","messageId":"386","endLine":2,"endColumn":81},{"ruleId":"408","severity":1,"message":"409","line":15,"column":33,"nodeType":"410","endLine":15,"endColumn":73},{"ruleId":"383","severity":1,"message":"397","line":2,"column":22,"nodeType":"385","messageId":"386","endLine":2,"endColumn":33},{"ruleId":"383","severity":1,"message":"411","line":19,"column":12,"nodeType":"385","messageId":"386","endLine":19,"endColumn":22},{"ruleId":"383","severity":1,"message":"412","line":72,"column":16,"nodeType":"385","messageId":"386","endLine":72,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":87,"column":17,"nodeType":"415","messageId":"416","endLine":87,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":87,"column":52,"nodeType":"415","messageId":"416","endLine":87,"endColumn":54},{"ruleId":"383","severity":1,"message":"417","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":14},{"ruleId":"383","severity":1,"message":"418","line":3,"column":10,"nodeType":"385","messageId":"386","endLine":3,"endColumn":13},{"ruleId":"383","severity":1,"message":"419","line":3,"column":15,"nodeType":"385","messageId":"386","endLine":3,"endColumn":24},{"ruleId":"383","severity":1,"message":"420","line":3,"column":26,"nodeType":"385","messageId":"386","endLine":3,"endColumn":29},{"ruleId":"383","severity":1,"message":"400","line":3,"column":20,"nodeType":"385","messageId":"386","endLine":3,"endColumn":26},{"ruleId":"383","severity":1,"message":"421","line":3,"column":33,"nodeType":"385","messageId":"386","endLine":3,"endColumn":44},{"ruleId":"383","severity":1,"message":"411","line":69,"column":11,"nodeType":"385","messageId":"386","endLine":69,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":18,"column":84,"nodeType":"415","messageId":"416","endLine":18,"endColumn":86},{"ruleId":"390","severity":1,"message":"422","line":32,"column":7,"nodeType":"403","endLine":32,"endColumn":28,"suggestions":"423"},{"ruleId":"413","severity":1,"message":"414","line":37,"column":65,"nodeType":"415","messageId":"416","endLine":37,"endColumn":67},{"ruleId":"383","severity":1,"message":"424","line":1,"column":10,"nodeType":"385","messageId":"386","endLine":1,"endColumn":19},{"ruleId":"383","severity":1,"message":"387","line":1,"column":32,"nodeType":"385","messageId":"386","endLine":1,"endColumn":38},{"ruleId":"383","severity":1,"message":"396","line":3,"column":10,"nodeType":"385","messageId":"386","endLine":3,"endColumn":19},{"ruleId":"383","severity":1,"message":"425","line":6,"column":20,"nodeType":"385","messageId":"386","endLine":6,"endColumn":27},{"ruleId":"383","severity":1,"message":"387","line":2,"column":37,"nodeType":"385","messageId":"386","endLine":2,"endColumn":43},{"ruleId":"383","severity":1,"message":"399","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":13},{"ruleId":"383","severity":1,"message":"411","line":13,"column":13,"nodeType":"385","messageId":"386","endLine":13,"endColumn":23},{"ruleId":"390","severity":1,"message":"426","line":34,"column":8,"nodeType":"403","endLine":34,"endColumn":10,"suggestions":"427"},{"ruleId":"383","severity":1,"message":"428","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":5,"column":23,"nodeType":"415","messageId":"416","endLine":5,"endColumn":25},{"ruleId":"383","severity":1,"message":"399","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"429","line":22,"column":9,"nodeType":"385","messageId":"386","endLine":22,"endColumn":17},{"ruleId":"383","severity":1,"message":"411","line":24,"column":13,"nodeType":"385","messageId":"386","endLine":24,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":45,"column":25,"nodeType":"410","endLine":45,"endColumn":127},{"ruleId":"408","severity":1,"message":"409","line":51,"column":25,"nodeType":"410","endLine":51,"endColumn":125},{"ruleId":"413","severity":1,"message":"414","line":77,"column":78,"nodeType":"415","messageId":"416","endLine":77,"endColumn":80},{"ruleId":"408","severity":1,"message":"409","line":84,"column":29,"nodeType":"410","endLine":84,"endColumn":163},{"ruleId":"430","severity":1,"message":"431","line":84,"column":77,"nodeType":"432","messageId":"416","endLine":84,"endColumn":83},{"ruleId":"390","severity":1,"message":"433","line":116,"column":8,"nodeType":"403","endLine":116,"endColumn":32,"suggestions":"434"},{"ruleId":"383","severity":1,"message":"387","line":3,"column":42,"nodeType":"385","messageId":"386","endLine":3,"endColumn":48},{"ruleId":"383","severity":1,"message":"399","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"411","line":20,"column":13,"nodeType":"385","messageId":"386","endLine":20,"endColumn":23},{"ruleId":"413","severity":1,"message":"435","line":28,"column":83,"nodeType":"415","messageId":"416","endLine":28,"endColumn":85},{"ruleId":"408","severity":1,"message":"409","line":34,"column":33,"nodeType":"410","endLine":34,"endColumn":164},{"ruleId":"413","severity":1,"message":"414","line":44,"column":60,"nodeType":"415","messageId":"416","endLine":44,"endColumn":62},{"ruleId":"390","severity":1,"message":"433","line":92,"column":8,"nodeType":"403","endLine":92,"endColumn":32,"suggestions":"436"},{"ruleId":"383","severity":1,"message":"411","line":21,"column":13,"nodeType":"385","messageId":"386","endLine":21,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":36,"column":33,"nodeType":"410","endLine":36,"endColumn":155},{"ruleId":"430","severity":1,"message":"437","line":49,"column":115,"nodeType":"432","messageId":"416","endLine":49,"endColumn":123},{"ruleId":"390","severity":1,"message":"433","line":77,"column":8,"nodeType":"403","endLine":77,"endColumn":32,"suggestions":"438"},{"ruleId":"383","severity":1,"message":"439","line":1,"column":38,"nodeType":"385","messageId":"386","endLine":1,"endColumn":45},{"ruleId":"383","severity":1,"message":"440","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":13},{"ruleId":"383","severity":1,"message":"411","line":23,"column":13,"nodeType":"385","messageId":"386","endLine":23,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":38,"column":17,"nodeType":"410","endLine":44,"endColumn":18},{"ruleId":"413","severity":1,"message":"435","line":71,"column":79,"nodeType":"415","messageId":"416","endLine":71,"endColumn":81},{"ruleId":"413","severity":1,"message":"414","line":76,"column":35,"nodeType":"415","messageId":"416","endLine":76,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":77,"column":40,"nodeType":"415","messageId":"416","endLine":77,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":106,"column":49,"nodeType":"410","endLine":111,"endColumn":50},{"ruleId":"441","severity":1,"message":"442","line":114,"column":49,"nodeType":"410","endLine":119,"endColumn":50},{"ruleId":"441","severity":1,"message":"442","line":122,"column":49,"nodeType":"410","endLine":127,"endColumn":50},{"ruleId":"390","severity":1,"message":"443","line":149,"column":8,"nodeType":"403","endLine":149,"endColumn":36,"suggestions":"444"},{"ruleId":"413","severity":1,"message":"414","line":233,"column":44,"nodeType":"415","messageId":"416","endLine":233,"endColumn":46},{"ruleId":"408","severity":1,"message":"409","line":237,"column":37,"nodeType":"410","endLine":237,"endColumn":101},{"ruleId":"383","severity":1,"message":"387","line":3,"column":42,"nodeType":"385","messageId":"386","endLine":3,"endColumn":48},{"ruleId":"383","severity":1,"message":"399","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"411","line":13,"column":13,"nodeType":"385","messageId":"386","endLine":13,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":26,"column":74,"nodeType":"415","messageId":"416","endLine":26,"endColumn":76},{"ruleId":"445","severity":1,"message":"446","line":28,"column":17,"nodeType":"447","messageId":"448","endLine":28,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":37,"column":37,"nodeType":"410","endLine":37,"endColumn":142},{"ruleId":"390","severity":1,"message":"449","line":61,"column":8,"nodeType":"403","endLine":61,"endColumn":26,"suggestions":"450"},{"ruleId":"413","severity":1,"message":"414","line":6,"column":22,"nodeType":"415","messageId":"416","endLine":6,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":11,"column":21,"nodeType":"410","endLine":11,"endColumn":98},{"ruleId":"413","severity":1,"message":"414","line":21,"column":22,"nodeType":"415","messageId":"416","endLine":21,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":26,"column":21,"nodeType":"410","endLine":26,"endColumn":98},{"ruleId":"413","severity":1,"message":"435","line":42,"column":122,"nodeType":"415","messageId":"416","endLine":42,"endColumn":124},{"ruleId":"413","severity":1,"message":"414","line":23,"column":28,"nodeType":"415","messageId":"416","endLine":23,"endColumn":30},{"ruleId":"408","severity":1,"message":"409","line":31,"column":17,"nodeType":"410","endLine":31,"endColumn":85},{"ruleId":"408","severity":1,"message":"409","line":57,"column":25,"nodeType":"410","endLine":57,"endColumn":88},{"ruleId":"383","severity":1,"message":"388","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":13},{"ruleId":"383","severity":1,"message":"396","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"389","line":1,"column":28,"nodeType":"385","messageId":"386","endLine":1,"endColumn":36},{"ruleId":"383","severity":1,"message":"451","line":1,"column":10,"nodeType":"385","messageId":"386","endLine":1,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"397","line":4,"column":23,"nodeType":"385","messageId":"386","endLine":4,"endColumn":34},{"ruleId":"383","severity":1,"message":"452","line":5,"column":10,"nodeType":"385","messageId":"386","endLine":5,"endColumn":14},{"ruleId":"383","severity":1,"message":"387","line":5,"column":27,"nodeType":"385","messageId":"386","endLine":5,"endColumn":33},{"ruleId":"383","severity":1,"message":"453","line":5,"column":45,"nodeType":"385","messageId":"386","endLine":5,"endColumn":50},{"ruleId":"383","severity":1,"message":"454","line":18,"column":27,"nodeType":"385","messageId":"386","endLine":18,"endColumn":43},{"ruleId":"390","severity":1,"message":"455","line":69,"column":8,"nodeType":"403","endLine":69,"endColumn":20,"suggestions":"456"},{"ruleId":"383","severity":1,"message":"396","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"451","line":1,"column":10,"nodeType":"385","messageId":"386","endLine":1,"endColumn":21},{"ruleId":"383","severity":1,"message":"397","line":4,"column":23,"nodeType":"385","messageId":"386","endLine":4,"endColumn":34},{"ruleId":"383","severity":1,"message":"387","line":5,"column":27,"nodeType":"385","messageId":"386","endLine":5,"endColumn":33},{"ruleId":"383","severity":1,"message":"453","line":5,"column":45,"nodeType":"385","messageId":"386","endLine":5,"endColumn":50},{"ruleId":"383","severity":1,"message":"424","line":5,"column":52,"nodeType":"385","messageId":"386","endLine":5,"endColumn":61},{"ruleId":"383","severity":1,"message":"457","line":7,"column":8,"nodeType":"385","messageId":"386","endLine":7,"endColumn":23},{"ruleId":"383","severity":1,"message":"454","line":26,"column":27,"nodeType":"385","messageId":"386","endLine":26,"endColumn":43},{"ruleId":"390","severity":1,"message":"458","line":113,"column":8,"nodeType":"403","endLine":113,"endColumn":16,"suggestions":"459"},{"ruleId":"408","severity":1,"message":"409","line":167,"column":37,"nodeType":"410","endLine":167,"endColumn":140},{"ruleId":"383","severity":1,"message":"397","line":2,"column":23,"nodeType":"385","messageId":"386","endLine":2,"endColumn":34},{"ruleId":"383","severity":1,"message":"460","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":22},{"ruleId":"383","severity":1,"message":"461","line":28,"column":11,"nodeType":"385","messageId":"386","endLine":28,"endColumn":20},{"ruleId":"383","severity":1,"message":"412","line":45,"column":17,"nodeType":"385","messageId":"386","endLine":45,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":56,"column":18,"nodeType":"415","messageId":"416","endLine":56,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":56,"column":55,"nodeType":"415","messageId":"416","endLine":56,"endColumn":57},{"ruleId":"390","severity":1,"message":"462","line":95,"column":8,"nodeType":"403","endLine":95,"endColumn":10,"suggestions":"463"},{"ruleId":"383","severity":1,"message":"387","line":1,"column":32,"nodeType":"385","messageId":"386","endLine":1,"endColumn":38},{"ruleId":"383","severity":1,"message":"425","line":9,"column":20,"nodeType":"385","messageId":"386","endLine":9,"endColumn":27},{"ruleId":"390","severity":1,"message":"464","line":57,"column":8,"nodeType":"403","endLine":57,"endColumn":43,"suggestions":"465"},{"ruleId":"413","severity":1,"message":"414","line":64,"column":37,"nodeType":"415","messageId":"416","endLine":64,"endColumn":39},{"ruleId":"413","severity":1,"message":"414","line":102,"column":27,"nodeType":"415","messageId":"416","endLine":102,"endColumn":29},{"ruleId":"408","severity":1,"message":"409","line":108,"column":17,"nodeType":"410","endLine":113,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":134,"column":41,"nodeType":"410","endLine":140,"endColumn":42},{"ruleId":"408","severity":1,"message":"409","line":155,"column":49,"nodeType":"410","endLine":155,"endColumn":148},{"ruleId":"383","severity":1,"message":"400","line":3,"column":26,"nodeType":"385","messageId":"386","endLine":3,"endColumn":32},{"ruleId":"383","severity":1,"message":"401","line":3,"column":39,"nodeType":"385","messageId":"386","endLine":3,"endColumn":46},{"ruleId":"383","severity":1,"message":"397","line":2,"column":23,"nodeType":"385","messageId":"386","endLine":2,"endColumn":34},{"ruleId":"383","severity":1,"message":"412","line":44,"column":17,"nodeType":"385","messageId":"386","endLine":44,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":55,"column":18,"nodeType":"415","messageId":"416","endLine":55,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":55,"column":55,"nodeType":"415","messageId":"416","endLine":55,"endColumn":57},{"ruleId":"390","severity":1,"message":"462","line":93,"column":8,"nodeType":"403","endLine":93,"endColumn":10,"suggestions":"466"},{"ruleId":"383","severity":1,"message":"387","line":1,"column":32,"nodeType":"385","messageId":"386","endLine":1,"endColumn":38},{"ruleId":"383","severity":1,"message":"452","line":1,"column":40,"nodeType":"385","messageId":"386","endLine":1,"endColumn":44},{"ruleId":"383","severity":1,"message":"467","line":11,"column":7,"nodeType":"385","messageId":"386","endLine":11,"endColumn":13},{"ruleId":"413","severity":1,"message":"435","line":51,"column":42,"nodeType":"415","messageId":"416","endLine":51,"endColumn":44},{"ruleId":"390","severity":1,"message":"464","line":69,"column":8,"nodeType":"403","endLine":69,"endColumn":50,"suggestions":"468"},{"ruleId":"390","severity":1,"message":"469","line":81,"column":8,"nodeType":"403","endLine":81,"endColumn":15,"suggestions":"470"},{"ruleId":"413","severity":1,"message":"414","line":89,"column":37,"nodeType":"415","messageId":"416","endLine":89,"endColumn":39},{"ruleId":"383","severity":1,"message":"471","line":95,"column":13,"nodeType":"385","messageId":"386","endLine":95,"endColumn":16},{"ruleId":"408","severity":1,"message":"409","line":107,"column":17,"nodeType":"410","endLine":112,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":160,"column":45,"nodeType":"410","endLine":166,"endColumn":46},{"ruleId":"379","replacedBy":"472"},{"ruleId":"381","replacedBy":"473"},{"ruleId":"383","severity":1,"message":"474","line":13,"column":9,"nodeType":"385","messageId":"386","endLine":13,"endColumn":14},"no-native-reassign",["475"],"no-negated-in-lhs",["476"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["477"],["475"],["476"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Banner' is defined but never used.","'Title' is defined but never used.","'Navbar' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCategory'. Either include it or remove the dependency array.","ArrayExpression",["478"],"'Nav' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoggedIn' is assigned a value but never used.","'name' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'NavDropdown' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["479"],"'ListGroup' is defined but never used.","'setDate' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["480"],"'react' is defined but never used.","'products' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["481"],"Expected '!==' and instead saw '!='.",["482"],"Duplicate key 'fontSize'.",["483"],"'useMemo' is defined but never used.","'arrow' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'fetchOrders' and 'fetchProduct'. Either include them or remove the dependency array.",["484"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'fetchCarts'. Either include it or remove the dependency array.",["485"],"'loginAction' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'setModalContents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.",["486"],"'BasicPagination' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchComments' and 'fetchPost'. Either include them or remove the dependency array.",["487"],"'ImageUploading' is defined but never used.","'maxNumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkLogin'. Either include it or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.",["489"],["490"],"'socket' is assigned a value but never used.",["491"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["492"],"'res' is assigned a value but never used.",["475"],["476"],"'_date' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"501","fix":"503"},{"desc":"501","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"513","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},"Update the dependencies array to be: [fetchData]",{"range":"522","text":"523"},"Update the dependencies array to be: [fetchCategory]",{"range":"524","text":"525"},"Update the dependencies array to be: [fetchProducts, match.params.number]",{"range":"526","text":"527"},"Update the dependencies array to be: [getUserInfo]",{"range":"528","text":"529"},"Update the dependencies array to be: [userData.user_id, flag, fetchOrders]",{"range":"530","text":"531"},{"range":"532","text":"531"},{"range":"533","text":"531"},"Update the dependencies array to be: [userData.user_id, btnValue, fetchProduct, fetchOrders]",{"range":"534","text":"535"},"Update the dependencies array to be: [fetchCarts, userData.user_id]",{"range":"536","text":"537"},"Update the dependencies array to be: [fetchPost, pageNumber]",{"range":"538","text":"539"},"Update the dependencies array to be: [fetchComments, fetchPost, postId]",{"range":"540","text":"541"},"Update the dependencies array to be: [checkLogin]",{"range":"542","text":"543"},"Update the dependencies array to be: [match.params.number, like.checked, fetchProduct]",{"range":"544","text":"545"},{"range":"546","text":"543"},"Update the dependencies array to be: [auctionId, buyer.username, fetchProduct, product.price]",{"range":"547","text":"548"},"Update the dependencies array to be: [product, timer]",{"range":"549","text":"550"},[797,801],"[fetchData]",[1225,1227],"[fetchCategory]",[924,945],"[fetchProducts, match.params.number]",[1090,1092],"[getUserInfo]",[5349,5373],"[userData.user_id, flag, fetchOrders]",[4743,4767],[3538,3562],[6762,6790],"[userData.user_id, btnValue, fetchProduct, fetchOrders]",[2734,2752],"[fetchCarts, userData.user_id]",[2402,2414],"[fetchPost, pageNumber]",[3611,3619],"[fetchComments, fetchPost, postId]",[2834,2836],"[checkLogin]",[2012,2047],"[match.params.number, like.checked, fetchProduct]",[2815,2817],[2327,2369],"[auctionId, buyer.username, fetchProduct, product.price]",[2758,2765],"[product, timer]"]