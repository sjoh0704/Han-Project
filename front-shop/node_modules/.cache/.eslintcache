[{"/home/seung/react/shop/front-shop/src/index.js":"1","/home/seung/react/shop/front-shop/src/App.js":"2","/home/seung/react/shop/front-shop/src/reportWebVitals.js":"3","/home/seung/react/shop/front-shop/src/modules/index.js":"4","/home/seung/react/shop/front-shop/src/modules/user.js":"5","/home/seung/react/shop/front-shop/src/components/Login.js":"6","/home/seung/react/shop/front-shop/src/components/useAsync.js":"7","/home/seung/react/shop/front-shop/src/components/asyncRuducer.js":"8","/home/seung/react/shop/front-shop/src/config.js":"9","/home/seung/react/shop/front-shop/src/components/Logout.js":"10","/home/seung/react/shop/front-shop/src/components/Register.js":"11","/home/seung/react/shop/front-shop/src/components/Home.js":"12","/home/seung/react/shop/front-shop/src/components/Banner.js":"13","/home/seung/react/shop/front-shop/src/components/ProductRegister.js":"14","/home/seung/react/shop/front-shop/src/components/Move.js":"15","/home/seung/react/shop/front-shop/src/modules/category.js":"16","/home/seung/react/shop/front-shop/src/components/CategoryBanner.js":"17","/home/seung/react/shop/front-shop/src/components/ProductByCategory.js":"18","/home/seung/react/shop/front-shop/src/components/Title.js":"19","/home/seung/react/shop/front-shop/src/components/Top.js":"20","/home/seung/react/shop/front-shop/src/components/ProductDetail.js":"21","/home/seung/react/shop/front-shop/src/components/PurchasePage.js":"22","/home/seung/react/shop/front-shop/src/components/ImageUpload.js":"23","/home/seung/react/shop/front-shop/src/components/Profile.js":"24","/home/seung/react/shop/front-shop/src/components/Loading.js":"25","/home/seung/react/shop/front-shop/src/components/PurchaseList.js":"26","/home/seung/react/shop/front-shop/src/components/OrderList.js":"27","/home/seung/react/shop/front-shop/src/components/MySales.js":"28","/home/seung/react/shop/front-shop/src/components/MySalesDetail.js":"29","/home/seung/react/shop/front-shop/src/components/LikeList.js":"30","/home/seung/react/shop/front-shop/src/components/EmptyCheck.js":"31","/home/seung/react/shop/front-shop/src/components/Convenient.js":"32","/home/seung/react/shop/front-shop/src/components/MakeCard.js":"33"},{"size":1212,"mtime":1626069316885,"results":"34","hashOfConfig":"35"},{"size":2125,"mtime":1629179155821,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1626069316885,"results":"37","hashOfConfig":"35"},{"size":423,"mtime":1626069316885,"results":"38","hashOfConfig":"35"},{"size":805,"mtime":1628678870232,"results":"39","hashOfConfig":"35"},{"size":3140,"mtime":1628678870228,"results":"40","hashOfConfig":"35"},{"size":865,"mtime":1626069316881,"results":"41","hashOfConfig":"35"},{"size":635,"mtime":1626069316881,"results":"42","hashOfConfig":"35"},{"size":90,"mtime":1624500021931,"results":"43","hashOfConfig":"35"},{"size":1439,"mtime":1628678870228,"results":"44","hashOfConfig":"35"},{"size":4204,"mtime":1628678870232,"results":"45","hashOfConfig":"35"},{"size":3730,"mtime":1629180285550,"results":"46","hashOfConfig":"35"},{"size":1201,"mtime":1629185906405,"results":"47","hashOfConfig":"35"},{"size":8019,"mtime":1628678870232,"results":"48","hashOfConfig":"35"},{"size":1523,"mtime":1628678870228,"results":"49","hashOfConfig":"35"},{"size":485,"mtime":1626069316885,"results":"50","hashOfConfig":"35"},{"size":3165,"mtime":1629186129241,"results":"51","hashOfConfig":"35"},{"size":1511,"mtime":1629188983119,"results":"52","hashOfConfig":"35"},{"size":660,"mtime":1628678870232,"results":"53","hashOfConfig":"35"},{"size":1413,"mtime":1628678870232,"results":"54","hashOfConfig":"35"},{"size":6612,"mtime":1629180831582,"results":"55","hashOfConfig":"35"},{"size":4647,"mtime":1628678870232,"results":"56","hashOfConfig":"35"},{"size":2748,"mtime":1625817510236,"results":"57","hashOfConfig":"35"},{"size":3605,"mtime":1628678870232,"results":"58","hashOfConfig":"35"},{"size":765,"mtime":1629179781981,"results":"59","hashOfConfig":"35"},{"size":2703,"mtime":1628678870232,"results":"60","hashOfConfig":"35"},{"size":4629,"mtime":1628678870232,"results":"61","hashOfConfig":"35"},{"size":3936,"mtime":1628678870228,"results":"62","hashOfConfig":"35"},{"size":8095,"mtime":1628678870228,"results":"63","hashOfConfig":"35"},{"size":3156,"mtime":1628678870228,"results":"64","hashOfConfig":"35"},{"size":1083,"mtime":1629188937461,"results":"65","hashOfConfig":"35"},{"size":404,"mtime":1628678870228,"results":"66","hashOfConfig":"35"},{"size":1602,"mtime":1629188813429,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"58o82o",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/seung/react/shop/front-shop/src/index.js",[],["149","150"],"/home/seung/react/shop/front-shop/src/App.js",["151"],"/home/seung/react/shop/front-shop/src/reportWebVitals.js",[],"/home/seung/react/shop/front-shop/src/modules/index.js",[],"/home/seung/react/shop/front-shop/src/modules/user.js",[],"/home/seung/react/shop/front-shop/src/components/Login.js",["152","153"],"import {loginAction} from '../modules/user'\nimport axios from 'axios'\nimport React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport Title from './Title'\nimport { CategoryDirection } from './CategoryBanner'\n\n\nfunction Login({history}){\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const {username, password} = userData;\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n\n    };\n    const onClickHandler = (e)=>{\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password\n        };\n        axios.post('/apis/v1/user/login', body)\n        .then(response => {\n            history.replace('/')\n            console.log(\"login\")\n            dispatch(loginAction(response.data.payload.payload))\n            alert(\"환영합니다!\")\n        }).catch(e =>{\n            alert(\"로그인 실패\")\n            console.log(\"로그인 실패\")\n        })\n    }\n\n    return (\n        <div>\n    \n     \n        <Container >\n            <CategoryDirection tag1={'로그인'}></CategoryDirection>\n            <br/>\n            <Row className=\"justify-content-md-center\">\n                <Col lg=\"12\">\n                <Form onSubmit={onClickHandler} >\n\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>ID</Form.Label>\n                <Form.Control \n                name = 'username'\n                value = {username}\n                onChange={onChangeHandler}\n                placeholder=\"ID를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>PASSWORD</Form.Label>\n                <Form.Control\n                type=\"password\"\n                name = 'password'\n                value = {password} \n                onChange={onChangeHandler}\n                placeholder=\"비밀번호를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n           \n            <Button type=\"submit\" size='lg'>Login</Button>\n            </Form>\n                </Col>\n\n            </Row>\n            \n        </Container>\n        </div>\n    );\n    \n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>username</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Login\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Login;","/home/seung/react/shop/front-shop/src/components/useAsync.js",["154","155","156","157"],"/home/seung/react/shop/front-shop/src/components/asyncRuducer.js",[],"/home/seung/react/shop/front-shop/src/config.js",[],["158","159"],"/home/seung/react/shop/front-shop/src/components/Logout.js",["160","161"],"import React, {useEffect} from 'react'\nimport axios from 'axios';\nimport {logoutAction} from '../modules/user'\nimport {useDispatch} from 'react-redux'\nimport {Container, Button, Col, Row} from 'react-bootstrap'\nimport Title from './Title'\nimport { CategoryDirection } from './CategoryBanner';\nfunction Logout({history}) {\n    const dispatch = useDispatch();\n\n    const onClickHandler = () => {\n        axios.get('/apis/v1/user/logout')\n        .then(res => {\n            console.log('로그아웃 합니다.')\n            dispatch(logoutAction())\n            alert('로그아웃 합니다.')\n            history.replace('/')\n        })\n        .catch(e => {\n            console.log('로그아웃 실패 에러')\n            alert('로그아웃 실패')\n        })\n    }\n    return (\n        <div >\n            <Container>\n         \n            <CategoryDirection tag1={'로그아웃'}></CategoryDirection>\n            <br/>\n            <Row className=\"justify-content-md-center\"> \n                    <Col xs lg=\"12\">\n                    <h3>정말 로그아웃 하시겠습니까?</h3>\n                    <br/>\n                    <br/>\n                    \n                    <Button size='lg' onClick = {onClickHandler}>로그아웃</Button>\n                    <br/>\n                    \n                    </Col>\n                </Row>\n            \n            </Container>\n          \n        </div>\n    )\n}\n\nexport default Logout;","/home/seung/react/shop/front-shop/src/components/Register.js",["162","163","164","165"],"import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport Banner from './Banner'\nimport Title from './Title'\nimport { CategoryDirection } from './CategoryBanner'\n\n\nfunction Register({history}){\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_number: \"\"\n    })\n    const {username, password, email, phone_number} = userData;\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n\n    };\n    const onClickHandler = (e)=>{\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n            email: email,\n            phone_number:phone_number\n        };\n        axios.post('/apis/v1/user/', body)\n        .then(response => {\n            \n            alert(\"축하합니다. 회원이 되셨어요!\")\n            history.replace('/login')\n        }).catch(e =>{\n            alert(\"회원가입 실패\")\n            console.log(\"회원가입 실패\")\n        })\n\n        setUserData({\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            phone_number: \"\"\n        })\n    }\n    return (\n        <div>\n        \n        <Container>\n        <CategoryDirection tag1={'회원가입'}></CategoryDirection>\n        <br/>\n        \n            <Row className=\"justify-content-md-center\"> \n                <Col xs lg={12}>\n                <Form onSubmit={onClickHandler} >\n\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>ID</Form.Label>\n                <Form.Control \n                name = 'username'\n                value = {username}\n                onChange={onChangeHandler}\n                placeholder=\"ID를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>EMAIL</Form.Label>\n                <Form.Control \n                name = 'email'\n                value = {email}\n                onChange={onChangeHandler}\n                placeholder=\"email을 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>PASSWORD</Form.Label>\n                <Form.Control\n                type=\"password\"\n                name = 'password'\n                value = {password} \n                onChange={onChangeHandler}\n                placeholder=\"비밀번호를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>PHONE NUMBER</Form.Label>\n                <Form.Control\n                name = 'phone_number'\n                value = {phone_number} \n                onChange={onChangeHandler}\n                placeholder=\"전화번호를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n           \n           \n            <Button size='lg' type=\"submit\">Register</Button>\n            </Form>\n                \n                </Col>\n            </Row>\n            \n        </Container>\n        </div>\n   \n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>ID</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Email</label>\n    //         <input name = \"email\" value = {email} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n            \n    //         <br/>\n    //         <button type = 'submit'>\n    //             Register\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Register;","/home/seung/react/shop/front-shop/src/components/Home.js",["166","167","168","169"],"/home/seung/react/shop/front-shop/src/components/Banner.js",["170","171","172","173"],"/home/seung/react/shop/front-shop/src/components/ProductRegister.js",["174","175","176","177","178","179","180"],"import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport axios from 'axios'\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport Title from './Title'\nimport ImageUploading from 'react-images-uploading';\nimport { CategoryDirection } from './CategoryBanner'\n\n\n\nfunction ImageUpload() {\n\n  const [images, setImages] = useState([]);\n  const maxNumber = 4;\n\n  const onChangeImage = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  };\n\n  // 추가\n  const onError = (errors, files) => {\n    if(errors.maxNumber) {\n      alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n    }\n  }\n\n  \n  // const onClickGetImage = async () => {\n    \n  //   let imageList = await axios.get(\"/apis/image/product\").then(res => {\n      \n  //     return(res.data.map(data => {\n  //       return {\n  //         data_url: data.fields.base64_image_url}\n  //     }))\n  //   })\n  //   .catch(e => {\n  //     console.log(e)\n  //   })\n\n  //   console.log(imageList)\n\n  // }\n\n\n\n  return (\n    <Container>\n     \n    </Container>\n  )\n}\n\n\n\nfunction ProductRegister({history}){\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n    const {kind} = useSelector(state => ({\n        kind: state.category.payload\n    }))\n    const [images, setImages] = useState([]);\n    const maxNumber = 4;\n  \n    const onChangeImage = (imageList, addUpdateIndex) => {\n      console.log(imageList, addUpdateIndex);\n      setImages(imageList);\n    };\n\n    const onError = (errors, files) => {\n      if(errors.maxNumber) {\n        alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`)\n      }\n    }\n  \n    \n    // const onClickGetImage = async () => {\n      \n    //   let imageList = await axios.get(\"/apis/image/product\").then(res => {\n        \n    //     return(res.data.map(data => {\n    //       return {\n    //         data_url: data.fields.base64_image_url}\n    //     }))\n    //   })\n    //   .catch(e => {\n    //     console.log(e)\n    //   })\n  \n    //   console.log(imageList)\n  \n    // }\n    \n    const displayCategory = kind.map((k, index) => {\n        return (\n            <option>{k.kind}</option>\n           \n        );\n    }\n    );\n        \n    const [product, setProduct] = useState({\n        name: \"\",\n        category: kind[0].kind,\n        price: null,\n        quantity: 1,\n        description: \"\",\n\n    })\n\n    \n    const {name, category, price, quantity, description} = product\n    \n\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setProduct({\n            ...product,\n            [name]: value\n        })\n        console.log(product)\n    };\n\n\n    const onClickHandler = (e)=>{\n        let category_number = kind.findIndex((k) => k.kind === category) + 1\n        let image_list = images.map((img, index) => (img.data_url))\n        console.log(image_list)\n        e.preventDefault();\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            category_id: category_number,\n            price: price,\n            quantity: quantity,\n            description: description,\n            ...image_list  // 용량이 크면 안넘어가\n        };\n        console.log(body)\n  \n    \n        axios.post('/apis/v1/product/', body)\n        .then(response => {\n            alert(\"상품 등록 성공\")\n            history.replace('/')\n        }).catch(e =>{\n            console.log(e)\n            alert(\"상품 등록 실패\")\n     \n        })\n\n    }\n\n    \n    return(<div>\n        \n        <Container>\n            <CategoryDirection tag1={'판매하기'}></CategoryDirection>\n            <br/>\n            <Row className=\"justify-content-md-center\">\n                <Col lg={12}>\n                {/* <Form onSubmit={onClickHandler} > */}\n                <Form>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>카테고리</Form.Label>\n                <Form.Control as=\"select\"\n                name = 'category'\n                onChange={onChangeHandler}\n                value = {category}>\n                {displayCategory}\n\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>상품명</Form.Label>\n                <Form.Control \n                name = 'name'\n                value = {name}\n                onChange={onChangeHandler}\n                placeholder=\"상품명을 적어주세요\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>가격</Form.Label>\n                <Form.Control\n                name = 'price'\n                value = {price} \n                onChange={onChangeHandler}\n                placeholder=\"가격을 적어주세요\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>수량</Form.Label>\n                <Form.Control\n                name = 'quantity'\n                value = {quantity} \n                onChange={onChangeHandler}\n                placeholder=\"수량을 적어주세요\" />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>상품 설명</Form.Label>\n                <Form.Control \n                as=\"textarea\" \n                rows={5}\n                onChange={onChangeHandler}\n                name = 'description'\n                value = {description}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>상품 이미지 등록</Form.Label>\n             {/* <Button onClick={onClickGetImage}>이미지 가져오기 </Button> */}\n            <ImageUploading\n                multiple\n                value={images}\n                onChange={onChangeImage}\n                maxNumber={maxNumber}\n                dataURLKey=\"data_url\"\n                onError={onError}\t\t\t// 추가\n                >\n                {({\n                imageList,\n                onImageUpload,\n                onImageUpdate,\n                onImageRemove,\n                isDragging,\n                dragProps,\n                }) => (\n                // write your building UI\n                <div className=\"upload__image-wrapper\">\n                    <Button\n                    style={isDragging ? { color: 'red' } : undefined}\n                    onClick={(e) => {\n                        e.preventDefault()\n                        onImageUpload()}}\n                    {...dragProps}\n                    >\n                    사진추가\n                    </Button>\n                    <br/>\n                    &nbsp;\n                    {imageList.map((image, index) => (\n                    <div key={index} className=\"image-item\">\n                        <img src={image['data_url']} alt=\"\" width=\"700\" />\n                        <div className=\"image-item__btn-wrapper\">\n                        <br/>\n                        <Button onClick={(e) => {\n                            e.preventDefault()\n                            onImageUpdate(index)}}>수정</Button>{' '}\n                        <Button onClick={(e) => {\n                            e.preventDefault()\n                            onImageRemove(index)}}>삭제</Button>\n                        </div>\n                        <br/>\n                    </div>\n                    ))}\n                </div>\n            \n                )}\n            </ImageUploading>\n\n\n\n            </Form.Group>\n            <Button type=\"submit\" onClick={onClickHandler}>상품 등록</Button>\n            </Form>\n\n            \n                </Col>\n                \n            </Row>\n            \n        </Container>\n        \n            \n    </div>\n\n    );\n\n}\n\nexport default ProductRegister;","/home/seung/react/shop/front-shop/src/components/Move.js",["181"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {Container} from 'react-bootstrap'\nconst Move = () => {\n    return (\n        <div>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <hr/>\n            <br/>\n            <Container>\n            <br/>\n            <ul>\n            <li>\n            <a href=\"https://github.com/sjoh0704\">https://github.com/sjoh0704</a>\n            </li>\n            <li>\n            <a href=\"https://seungjuitmemo.tistory.com/\">https://seungjuitmemo.tistory.com/</a>\n            </li>\n            <br/>\n            \n                {/* <li><Link to=\"http://naver.com\" style={{textDecoration:'none', color:'inherit'}}>Home</Link></li>\n                <li><Link to=\"/login\" style={{textDecoration:'none', color:'inherit'}}>Login</Link></li>\n                <li><Link to=\"/logout\"style={{textDecoration:'none', color:'inherit'}}>Logout</Link></li>\n                <li><Link to=\"/register\"style={{textDecoration:'none', color:'inherit'}}>Register</Link></li>\n                <li><Link to=\"/product/register\"style={{textDecoration:'none', color:'inherit'}}>ProductRegister</Link></li>\n                <li><Link to=\"/category/1\"style={{textDecoration:'none', color:'inherit'}}>ProductByCategory</Link></li>\n                <li><Link to=\"/orderlist\"style={{textDecoration:'none', color:'inherit'}}>OrderList</Link></li> */}\n                \n            </ul>\n            </Container>\n           \n        </div>\n    );\n};\n\nexport default Move;","/home/seung/react/shop/front-shop/src/modules/category.js",[],"/home/seung/react/shop/front-shop/src/components/CategoryBanner.js",["182","183","184","185"],"/home/seung/react/shop/front-shop/src/components/ProductByCategory.js",["186","187","188","189","190"],"/home/seung/react/shop/front-shop/src/components/Title.js",[],"/home/seung/react/shop/front-shop/src/components/Top.js",["191"],"import {Container, Row, Col} from 'react-bootstrap'\nimport {useSelector} from 'react-redux'\nimport React from 'react'\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\n\nconst Top = ()=>{\n    const {isLoggedIn, userData} = useSelector(state =>({\n            isLoggedIn: state.user.isLoggedIn,\n            userData: state.user.payload\n    }))\n\n\n    if(!isLoggedIn || userData == null){\n        return(\n            <Container>\n                <br/>\n                <Row>\n                <Col md={{ span: 5, offset: 9 }}>\n                <div>\n                <span><Link to='/login' style={{textDecoration:'none'}}>로그인 / </Link></span>\n                <span><Link to='/register' style={{textDecoration:'none'}}>회원가입</Link></span>\n                </div>\n                </Col>\n                \n                </Row>\n            </Container>\n            \n        \n        )\n    }\n    else{\n        console.log(userData)\n        return(\n            <Container>\n            <br/> \n            <Row>\n            <Col md={{ span: 5, offset: 7 }}>\n            <div>\n            <span >오늘도 오셨군요! {userData.username}님! / </span>\n            <span><Link to='/logout' style={{textDecoration:'none'}}>로그아웃</Link></span>\n            </div>\n            </Col>\n            \n            </Row>\n            </Container>\n\n            \n        )\n    }\n}\n\n\nexport default Top;","/home/seung/react/shop/front-shop/src/components/ProductDetail.js",["192","193","194","195","196","197","198"],"/home/seung/react/shop/front-shop/src/components/PurchasePage.js",["199"],"import {ListGroup, Container, Button, Form, Row, Col} from 'react-bootstrap'\nimport axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport {useSelector} from 'react-redux'\nimport { CategoryDirection } from './CategoryBanner'\nimport {setMoney, setDate} from './Convenient'\n\nfunction PurchasePage({location, history}){\n    const {product, demand_amount} = location.state\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n    console.log(product)\n    console.log(demand_amount)\n    \n    const [purchaseData, setPurchaseData] = useState({\n        address: null,\n        email_address: null\n    })\n    const {address, email_address} = purchaseData\n\n    const orderProduct= async ()=>{\n        let body = {\n            ...product,\n            product_id: product.product_id,\n            seller_id: product.seller_id,\n            buyer_id: userData.user_id,\n            demand_amount: demand_amount,\n            address:address,\n            quantity: product.quantity,\n            email_address: email_address,\n        };\n        console.log(body)\n        await axios.post('/apis/v1/order/', body).then(res=> {\n            \n            alert('주문 성공')\n            history.replace('/orderlist')\n        })\n        .catch(e => {\n            // 정보가 없을 때 처리\n            alert('주문 실패')\n        })\n    }\n\n\n    const onClickOrder = () => {\n        if(isLoggedIn === false){\n            alert(\"로그인 후 이용하세요.\")\n            return;\n        }\n        if(address == null || email_address == null){\n            alert('모두 입력해주세요')\n            return;\n        }\n        orderProduct();\n        \n    }\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target\n        setPurchaseData(\n            {\n                ...purchaseData,\n                [name]:value\n            })\n        \n\n    }\n\n    return(\n        <div>\n         <Container>\n         <CategoryDirection tag1={product.category} tag2={product.name} tag3={'구매하기'}></CategoryDirection> \n            <br/>\n            <Row className=\"justify-content-md-center\">\n                <Col xs lg=\"12\">\n                <ListGroup>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>{product.category}</ListGroup.Item>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>{product.name}</ListGroup.Item>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>가격: {setMoney(product.price)} 원</ListGroup.Item>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>수량: {product.quantity}</ListGroup.Item>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>{product.description}</ListGroup.Item>\n            <ListGroup.Item style={{fontSize:'1.3rem', padding:15}}>{setDate(product.created_at)}</ListGroup.Item>\n            </ListGroup>\n            \n        \n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <p style={{fontSize:'1.6rem', fontWeight:'bold', margin:15}}>구매 정보를 입력하세요</p>\n        <hr/>\n\n        <Form>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label style={{fontSize:'1.3rem', margin:10}}>구매 수량</Form.Label>\n                <Form.Control \n                name = 'demand_amount'\n                value = {demand_amount}\n                disabled\n                />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label style={{fontSize:'1.3rem', margin:10}}>Email address</Form.Label>\n                <Form.Control \n                name = 'email_address'\n                value = {email_address}\n                onChange={onChangeHandler}\n                placeholder=\"배송 정보를 받을 이메일을 적어주세요\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label style={{fontSize:'1.3rem', margin:10}}>Address</Form.Label>\n                <Form.Control\n                name = 'address'\n                value = {address} \n                onChange={onChangeHandler}\n                placeholder=\"배송지를 적어주세요\" />\n            </Form.Group>\n\n            \n            </Form>\n            <br/>\n        <h1>총 가격: {product.price * demand_amount}원</h1>\n            <br/>\n        <Button size='lg' onClick={onClickOrder}>구매하기</Button>\n        \n                </Col>\n            </Row>\n       \n        </Container>\n\n        </div>\n        \n    )\n}\n\nexport default PurchasePage","/home/seung/react/shop/front-shop/src/components/ImageUpload.js",[],"/home/seung/react/shop/front-shop/src/components/Profile.js",["200","201"],"import React, {useState} from 'react'\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useDispatch, useSelector} from 'react-redux'\nimport axios from 'axios'\nimport { loginAction, logoutAction } from '../modules/user'\nimport { CategoryDirection } from './CategoryBanner'\n\nfunction Profile({history}){\n    const dispatch = useDispatch()\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n    \n    console.log(userData)\n    \n    const [user, setUser] = useState({\n        username: userData.username,\n        email: userData.useremail,\n        phone_number:userData.phone_number\n    })\n    const {username, email, phone_number} = user\n    const user_id = userData.user_id\n\n    const onChangeHandler = (e) => {\n        const {name, value} = e.target;\n        setUser({\n            ...user,\n            [name]: value\n        })\n\n    };\n    const onClickEditHandler = async(e)=>{\n        e.preventDefault();\n        let body = {\n            user_id: user_id,\n            username: username,\n            useremail: email,\n            phone_number: phone_number,\n           \n        };\n        await axios.post(`/apis/v1/user/${user_id}`, body)\n        .then(response => {\n            alert(\"사용자 정보 수정 완료\")\n            dispatch(loginAction(body))\n            \n\n        }).catch(e =>{\n            alert(\"사용자 정보 수정 실패\")\n        })\n    }\n\n    const onClickDeleteHandler = async(e)=>{\n        e.preventDefault();\n        await axios.delete(`/apis/v1/user/${user_id}`)\n        .then(response => {\n            console.log(response)\n            alert(\"회원 탈퇴 완료\")\n            dispatch(logoutAction())\n            history.replace('/')\n   \n        }).catch(e =>{\n            alert(\"회원 탈퇴 실패\")\n        })\n    }\n\n\n    \n    \n\n\n    return(\n        <div>\n        \n        \n        <Container>\n            <CategoryDirection tag1={'내정보 관리'}></CategoryDirection>\n            <br/>\n            <Row className=\"justify-content-md-center\"> \n                <Col xs lg={12}>\n                <Form>\n\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>ID</Form.Label>\n                <Form.Control \n                name = 'username'\n                value = {username}\n                onChange={onChangeHandler}\n                placeholder=\"ID를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>EMAIL</Form.Label>\n                <Form.Control \n                name = 'email'\n                value = {email}\n                onChange={onChangeHandler}\n                placeholder=\"email을 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>PHONE NUMBER</Form.Label>\n                <Form.Control \n                name = 'phone_number'\n                value = {phone_number}\n                onChange={onChangeHandler}\n                placeholder=\"전화번호를 입력해주세요\" />\n            </Form.Group>\n            <br/>\n            \n            <Button onClick={onClickEditHandler}>수정</Button><span>{' '}</span>\n            <Button onClick={onClickDeleteHandler}>회원 탈퇴</Button>\n            </Form>\n                \n                </Col>\n            </Row>\n            \n        </Container>\n        </div>\n    );\n\n}\n\nexport default Profile","/home/seung/react/shop/front-shop/src/components/Loading.js",["202","203"],"/home/seung/react/shop/front-shop/src/components/PurchaseList.js",["204","205","206","207","208","209"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport placeholder from '../images/placeholder2.jpg'\nimport EmptyCheck from './EmptyCheck'\nimport { CategoryDirection } from './CategoryBanner'\nimport {setMoney, setDate} from './Convenient'\n\n\nfunction PurchaseList({history}){\n    var products = []\n    const [orders, setOrders] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n    const fetchOrders= async()=>{\n            let res = await axios.get('/apis/v1/order/' + userData.user_id)\n            let tmp_order = res.data.payload.payload.filter(order=> order.sales_stage == 'SO')\n            let orderlist = tmp_order.map((order, index) => {\n                return (\n                        \n                            <ListGroup.Item key={index}>\n                        <Row style={{margin:20}}>\n                        <Col md={4}>\n                        <img style={{width:'22rem'}} src={order.base64_image_url?order.base64_image_url:placeholder}></img>\n                        </Col>\n                        <Col md={8}>\n                        <div>\n                        \n                        <p style={{fontSize:'1.5rem',margin:15, fontWeight:'bold'}}>\n                        {order.name}\n                        </p>\n                        <p style={{fontSize:'1.3rem',margin:15}}>\n                        구매량: {order.demand_quantity}\n                        </p>\n                        <p style={{fontSize:'1.3rem',margin:15}}>\n                        지불 금액: {setMoney(order.price)} 원\n                        </p>\n                        <p style={{fontSize:'1.3rem',margin:15}}>\n                        주문 날짜: {setDate(order.created_at)}\n                        </p>\n                        </div>\n                        \n                        </Col>\n                        </Row>\n                        </ListGroup.Item>\n                    \n                    \n                );\n            })\n            setOrders(orderlist);  \n        \n                \n           \n            \n            \n        \n    }\n\n\n    useEffect(()=>{\n        fetchOrders()\n    },[userData.user_id])\n\n\n\n \n\n    \n    \n\n    return (<div>\n   \n        <Container>\n        <CategoryDirection tag1={'구매 목록'}></CategoryDirection>\n        <EmptyCheck text={\"구매한 상품이 없습니다\"} items={orders}></EmptyCheck>\n        </Container>\n        \n\n    </div>)\n}\n\nexport default PurchaseList;","/home/seung/react/shop/front-shop/src/components/OrderList.js",["210","211","212","213","214","215"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport placeholder from '../images/placeholder2.jpg'\nimport EmptyCheck from './EmptyCheck'\nimport { CategoryDirection } from './CategoryBanner'\nimport {setMoney, setDate} from './Convenient'\n\n\n\nfunction OrderList({history}){\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n    const fetchOrders= async()=>{\n            await axios.get('/apis/v1/order/' + userData.user_id).then(res=> {\n                console.log(res.data.payload.payload)\n                let tmp_orders = res.data.payload.payload.filter(order=> order.sales_stage!='SO')\n                let orderlist = tmp_orders.map((order, index) => {\n                    return (\n                            \n                             <ListGroup.Item key={index}>\n                            <Row style={{margin:20}}>\n                            <Col md={4}>\n                            <img style={{width:'22rem'}} src={order.base64_image_url?order.base64_image_url:placeholder}></img>\n                            </Col>\n                            <Col md={8}>\n                           <div style={{margin:20}}>\n                            \n                            <p style={{fontSize:'1.3rem', fontWeight:'bold'}}>\n                            {order.name}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            수량: {order.demand_quantity}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            지불 금액: {setMoney(order.price)} 원\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            주문일: {setDate(order.created_at)}\n                            </p>\n                            <p style={{fontSize:'1.3rem'}}>\n                            주문 상태: {order.sales_stage=='S'?\n                            <span style={{color:'red',fontWeight:'bold'}}>판매자의 확인을 기다려주세요</span>:<span style={{color:'green', fontWeight:'bold'}}>예약되었습니다! 판매자와 거래하세요</span>}\n                            </p>\n                            <br/>\n\n                            \n                                <Button size='lg' onClick={()=>{\n                                connectSeller(order.seller_id)\n                            }}>판매자에게 연락하기</Button>\n                           \n                          \n                                <Button size='lg' style={{marginLeft:10}}onClick={()=>{\n                                \n                                onDeleteOrder(order.order_id);\n                            }}>주문 취소하기</Button>\n                             \n                          \n            \n                            <br/>\n                            \n                            </div>\n                            \n                            </Col>\n                            </Row>\n                            </ListGroup.Item>\n                       \n                        \n                  );\n                })\n                setOrders(orderlist);  \n        \n                \n            })\n            \n            \n        \n    }\n\n    useEffect(()=>{\n        fetchOrders()\n    },[userData.user_id, flag])\n    \n\n    const connectSeller = async(seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`)\n        let tmp = res.data.payload.payload.phone_number\n        let phone_number = tmp.slice(0,3) + '-'+tmp.slice(3,7) + '-'+tmp.slice(7,11) \n        alert(`[${phone_number}]로 연락해주세요!`)\n    }\n\n    const onDeleteOrder = (order_id) => {\n        axios.delete(`/apis/v1/order/${order_id}`).then(res=>{\n            alert('주문이 취소되었습니다.');\n            setFlag(!flag)\n        }).catch(e=>{\n            alert('문제가 발생했습니다. 관리자에게 문의해주세요');\n        });\n       \n    }\n\n    return (<div>\n         <Container>\n         <CategoryDirection tag1={'주문 목록'}></CategoryDirection>\n       \n          \n        <EmptyCheck text={\"주문한 상품이 없습니다\"} items={orders}></EmptyCheck>\n        </Container>\n        \n\n    </div>)\n}\n\nexport default OrderList;","/home/seung/react/shop/front-shop/src/components/MySales.js",["216","217","218","219","220"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport placeholder from '../images/placeholder2.jpg'\nimport { Link } from 'react-router-dom'\nimport EmptyCheck from './EmptyCheck'\nimport {setDate, setMoney} from './Convenient'\nimport { CategoryDirection } from './CategoryBanner'\n\n\n\nfunction MySales({history}){\n    const [flag, setFlag] = useState(true);\n    const [products, setProducts] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n\n\n    const fetchOrders= async()=>{\n            const res = await axios.get('/apis/v1/product/user/' + userData.user_id);\n            let product_list = res.data.payload.payload.filter(p => p.valid=== true);\n            product_list = product_list.map((product, index) => {\n                \n                let path = '/mysales/' + product.pk\n                return (\n                       \n                    <Link style={{textDecoration:'none', color:'inherit'}} key={index} to={path}>\n                       \n                        <ListGroup.Item key={index}>\n                        <Row style={{margin:20}}>\n                        <Col md={4}>\n                        <img style={{width:'22rem', height:'22rem'}} src={product.base64_image_url?product.base64_image_url:placeholder}></img>\n                        </Col>\n                      \n                        <Col md={8}>\n                        <div style={{marginLeft:20}}>\n                        \n                        <p style = {{fontSize:\"1.5rem\", fontWeight: 'bold', marginLeft:20}}>\n                       {product.name}\n                        </p>\n                        <p style = {{fontSize:\"1.3rem\", marginLeft:20}}>\n                        총 수량: {product.quantity}\n                        </p>\n                        <p style = {{fontSize:\"1.3rem\", marginLeft:20}}>\n                        가격: {setMoney(product.price)} 원\n                        </p>\n                        <p style = {{fontSize:\"1.3rem\", marginLeft:20}}>\n                        등록 날짜: {setDate(product.created_at)}\n                    \n                        </p>\n\n                        <p style={{fontSize:\"1.3rem\", marginLeft:20,color:'green', fontSize:20, fontWeight:'bold'}}>\n                        주문한 사람이 있는지 확인해주세요!\n                        </p>\n                        <Button style={{fontSize:\"1rem\", marginLeft:20, }} onClick={(e)=>onDeleteProduct(product.pk, e)}>\n                            상품 등록 취소\n                        </Button>\n                        \n                        \n                        \n                        </div>\n                        \n                        </Col>\n                        </Row>\n                        </ListGroup.Item>\n                        </Link>\n                    \n                );\n            })\n            setProducts(product_list);  \n            \n            \n        \n    }\n\n    const onDeleteProduct = async (product_id, e) => {\n        e.preventDefault();\n        axios.delete(`/apis/v1/product/${product_id}`).then(res=> {\n            alert('상품 등록을 취소합니다.');    \n            setFlag(!flag) ;\n        })\n        .catch(e => {\n            alert('문제가 발생했습니다. 관리자에게 문의하세요');\n        })\n\n    }\n\n    useEffect(()=>{\n        fetchOrders()\n    },[userData.user_id, flag]);\n    \n\n    \n\n    return (<div>\n       <Container>\n       <CategoryDirection tag1={'내 상품 목록'}></CategoryDirection>\n        \n\n        <EmptyCheck text={\"등록한 상품이 없습니다\"} items={products}></EmptyCheck>\n        </Container>\n        \n\n    </div>)\n}\n\nexport default MySales;","/home/seung/react/shop/front-shop/src/components/MySalesDetail.js",["221","222","223","224","225","226","227","228","229","230","231"],"import React, {useState, useEffect, useMemo} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Dropdown, DropdownButton, Card} from 'react-bootstrap'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport placeholder from '../images/placeholder2.jpg'\nimport { CategoryDirection } from './CategoryBanner'\nimport EmptyBox from '../images/box.png'\nimport {setMoney, setDate} from './Convenient'\n\nfunction MySalesDetail({history, match}){\n    const [btnValue, setBtnValue] = useState('')\n    const [orders, setOrders] = useState([]) \n    const[images,setImages]= useState([])\n    const[product,setProduct]= useState({})\n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n    const fetchProduct= async ()=>{\n        let res = await axios.get('/apis/v1/product/' + match.params.number)\n           \n            setProduct({\n            ...res.data.payload.payload,\n            product_id: match.params.number\n            });\n            let image_list = await res.data.payload.payload.image.map(img => (<div >\n                <br/>\n                <img style = {{  \n                    width: \"60rem\"\n                    }} src={img}></img>\n                <br/>\n                <br/>\n                \n            </div>));\n        setImages(image_list);\n\n\n    }\n    \n    \n\n\n\n    const fetchOrders= async()=>{\n        let res = await axios.get('/apis/v1/order/sale/' + match.params.number)\n        console.log(res)\n        let tmp_orders = res.data.payload.payload.filter(order=> order.sales_stage!='SO')\n        console.log(tmp_orders)\n        let orderlist = tmp_orders.map((order, index) => {\n        let sale_status = ''\n            if(order.sales_stage == 'S')\n                sale_status='판매 중'\n            else if(order.sales_stage == 'SR')\n                sale_status='예약 중'\n            else\n                sale_status='판매 완료'\n\n            return (\n                    \n                    <ListGroup.Item key={index}>\n                    <Row style={{margin:20}}>\n                    <Col>\n                    <div>\n                    <p style={{fontSize:'1.5rem'}}>\n                    ID: {order.user_name}\n                    </p>\n                    <p style={{fontSize:'1.5rem'}}>\n                    이메일: {order.user_email}\n                    </p>\n                    <p style={{fontSize:'1.5rem'}}>\n                    연락처: {order.phone_number}\n                    </p>\n                    <p style={{fontSize:'1.5rem'}}>\n                    구매량: {order.demand_quantity}\n                    </p>\n                    <p style={{fontSize:'1.5rem'}}>\n                    지불 금액: {setMoney(order.price)} 원\n                    </p>\n                    <p style={{fontSize:'1.5rem'}}>\n                    구매 날짜: {setDate(order.created_at)}\n                    </p>\n                    <DropdownButton id=\"dropdown-basic-button\" title={btnValue?btnValue:sale_status} size='lg'>\n                    <Dropdown.Item onClick={(e) => {onClickHandler({order, product_id:match.params.number}, e)}} name='예약 중'>예약 중</Dropdown.Item>\n                    <Dropdown.Item onClick={(e) => {onClickHandler({order, product_id:match.params.number}, e)}} name='판매 완료'>판매 완료</Dropdown.Item>\n                    <Dropdown.Item onClick={(e) => {onClickHandler({order, product_id:match.params.number}, e)}} name='거래 취소'>거래 취소</Dropdown.Item>\n                    </DropdownButton>\n                    \n                    </div>\n                    \n                    </Col>\n                    </Row>\n                    </ListGroup.Item>\n                    \n                        \n                  );\n                })\n                setOrders(orderlist);  \n        \n                \n            \n            \n            \n        \n    }\n\n\n    useEffect(()=>{\n        fetchProduct()\n        fetchOrders()\n    },[userData.user_id, btnValue])\n    \n\n    const onClickHandler = async (orderData, e)=>{\n        const {product_id, order} = orderData;\n        \n        if(e.target.name  === '판매 완료'){\n            \n            alert('거래가 완료되셨습니까?')\n\n            let data = {sales_stage: \"SO\", \n            product_id,\n            demand_quantity: order.demand_quantity,\n            total_quantity: order.total_quantity\n            };\n\n            axios.post('/apis/v1/order/' + order.order_id, data).then(res=> {\n                alert('거래가 성사되었습니다.')\n                \n            })\n            .catch(e=>{\n                alert('잘못되었습니다.')\n            })\n      \n        }\n        else if(e.target.name  === '예약 중'){\n            alert('거래를 예약하시겠습니까?')\n            let data = {sales_stage: \"SR\"}\n            axios.post('/apis/v1/order/' + order.order_id, data).then(res=> {\n                console.log(res)\n                alert('거래가 예약되었습니다.')\n            })\n            .catch(e=>{\n                alert('예약에 실패했습니다. 판매자에게 문의하세요')\n            })\n        }\n        else{\n            alert('주문 요청을 취소하시겠습니까?')\n \n            axios.delete('/apis/v1/order/' + order.order_id).then(res=> {\n                \n                alert('주문이 취소되었습니다.')\n            })\n            .catch(e=>{\n                alert('Error')\n            })\n\n        }      \n        setBtnValue(e.target.name)\n    }\n  \n\n\n    return (<div>\n        \n\n        <Container>\n        \n        \n              \n    \n        <CategoryDirection tag1={\"내 상품 목록\"} tag2={product.name}></CategoryDirection>\n        <ListGroup>\n            {orders.length==0?\n            <div>\n            <br/>\n            <p style={{fontSize:\"1.7rem\", }}>아직 주문한 사람이 없네요...</p>\n            <img style={{width:600, height:600}}src={EmptyBox}></img>\n            </div>\n            :<div>\n                <br/>\n                <p style={{fontSize:'1.6rem', fontWeight:'bold', margin:20}}>구매자 정보</p>\n                {orders}\n            </div>}\n        </ListGroup>\n        \n        <Accordion style={{marginTop:100}}>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\n                        <p style={{fontSize:'1.7rem', margin:15}}>\n                            내 상품 확인하기 \n                        </p>\n                \n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                        <Row className=\"justify-content-md-center\">\n                            <Col>\n                            <ListGroup>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>카테고리: {product.category}</ListGroup.Item>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>상품명: {product.name}</ListGroup.Item>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>가격: {setMoney(product.price)} 원</ListGroup.Item>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>수량: {product.quantity}</ListGroup.Item>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>설명: {product.description}</ListGroup.Item>\n                            <ListGroup.Item style={{fontSize:'1.3rem'}}>등록일: {setDate(product.created_at)}</ListGroup.Item>\n                        \n                            <ListGroup.Item >{images}</ListGroup.Item>\n                            </ListGroup>\n                            <br/>\n                        </Col>\n                        </Row>\n\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n\n                \n        </Accordion>\n\n\n        \n       \n        </Container>\n        \n\n    </div>)\n}\n\nexport default MySalesDetail;","/home/seung/react/shop/front-shop/src/components/LikeList.js",["232","233","234","235","236","237","238"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {ListGroup, Container, Row, Col, Button} from 'react-bootstrap'\nimport Title from './Title'\nimport {useSelector} from 'react-redux'\nimport EmptyCheck from './EmptyCheck'\nimport { Link } from 'react-router-dom'\nimport { CategoryDirection } from './CategoryBanner'\n\n\n\n\nfunction Likes({history}){\n    const [carts, setCarts] = useState([]) \n    const {isLoggedIn, userData} = useSelector(state =>({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload\n    }))\n\n        const fetchCarts= async()=>{\n            let res = await axios.get('/apis/v1/carts/users/' + userData.user_id);\n            let cartList = res.data.payload.payload;\n            let res_product = await axios.get('/apis/v1/product/');\n    \n            let productList = res_product.data.payload.payload;\n            cartList = cartList.map((cart, index) => {\n                console.log(productList)\n                const tmp_product = productList.find((product) => product.pk == cart.productId);\n                    if(!tmp_product){\n                        return;\n                    }\n                    let path = `/product/${tmp_product.pk}`\n                    return (\n                        <div>\n                            <Link to={path} style={{textDecoration:'none', color:'inherit'}}>\n                        \n                            <ListGroup.Item key={index}>\n                            <Row style={{margin:20}}>\n                            <Col md={4}>\n                            <img style={{width:'22rem'}} src={tmp_product.base64_image_url}></img>\n                            </Col>\n                            <Col md={8}>\n                        <div style={{marginLeft:20}}>\n                            \n                            <p>\n                            상품명: {tmp_product.name}\n                            </p>\n                            <p>\n                            수량: {tmp_product.quantity}\n                            </p>\n                            <p>\n                            지불 금액: {tmp_product.price}\n                            </p>\n                            <p>\n                            찜한 날짜: {cart.createdAt}\n                            </p>\n                            \n            \n                            <br/>\n                            \n                            </div>\n                            \n                            </Col>\n                            </Row>\n                            </ListGroup.Item>\n                            </Link>\n                        </div>\n                        \n                    );\n           \n\n            });\n\n            setCarts(cartList);\n            \n            \n        }\n\n    useEffect(()=>{\n        fetchCarts();\n    },[userData.user_id])\n\n\n    return (<div>\n        \n        <Container>\n        <CategoryDirection tag1={'찜 목록'}></CategoryDirection>\n       \n        <EmptyCheck text={\"찜한 상품이 없습니다\"} items={carts?carts:[]}></EmptyCheck>\n        </Container>\n\n    </div>)\n}\n\nexport default Likes;","/home/seung/react/shop/front-shop/src/components/EmptyCheck.js",["239","240","241","242"],"/home/seung/react/shop/front-shop/src/components/Convenient.js",[],"/home/seung/react/shop/front-shop/src/components/MakeCard.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":12},{"ruleId":"247","severity":1,"message":"251","line":4,"column":9,"nodeType":"249","messageId":"250","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"252","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"253","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":13},{"ruleId":"247","severity":1,"message":"254","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":17},{"ruleId":"255","severity":1,"message":"256","line":35,"column":8,"nodeType":"249","endLine":35,"endColumn":12},{"ruleId":"255","severity":1,"message":"257","line":35,"column":8,"nodeType":"249","endLine":35,"endColumn":12,"suggestions":"258"},{"ruleId":"243","replacedBy":"259"},{"ruleId":"245","replacedBy":"260"},{"ruleId":"247","severity":1,"message":"261","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"252","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"251","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":20},{"ruleId":"247","severity":1,"message":"262","line":3,"column":22,"nodeType":"249","messageId":"250","endLine":3,"endColumn":33},{"ruleId":"247","severity":1,"message":"263","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"252","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"251","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"264","line":6,"column":20,"nodeType":"249","messageId":"250","endLine":6,"endColumn":26},{"ruleId":"247","severity":1,"message":"265","line":6,"column":28,"nodeType":"249","messageId":"250","endLine":6,"endColumn":35},{"ruleId":"255","severity":1,"message":"266","line":44,"column":7,"nodeType":"267","endLine":44,"endColumn":9,"suggestions":"268"},{"ruleId":"247","severity":1,"message":"269","line":2,"column":29,"nodeType":"249","messageId":"250","endLine":2,"endColumn":32},{"ruleId":"247","severity":1,"message":"270","line":2,"column":48,"nodeType":"249","messageId":"250","endLine":2,"endColumn":59},{"ruleId":"247","severity":1,"message":"271","line":2,"column":69,"nodeType":"249","messageId":"250","endLine":2,"endColumn":79},{"ruleId":"272","severity":1,"message":"273","line":15,"column":11,"nodeType":"274","endLine":15,"endColumn":48},{"ruleId":"247","severity":1,"message":"262","line":2,"column":22,"nodeType":"249","messageId":"250","endLine":2,"endColumn":33},{"ruleId":"247","severity":1,"message":"252","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":13},{"ruleId":"247","severity":1,"message":"275","line":11,"column":10,"nodeType":"249","messageId":"250","endLine":11,"endColumn":21},{"ruleId":"247","severity":1,"message":"276","line":13,"column":10,"nodeType":"249","messageId":"250","endLine":13,"endColumn":16},{"ruleId":"247","severity":1,"message":"277","line":16,"column":9,"nodeType":"249","messageId":"250","endLine":16,"endColumn":22},{"ruleId":"247","severity":1,"message":"278","line":22,"column":9,"nodeType":"249","messageId":"250","endLine":22,"endColumn":16},{"ruleId":"247","severity":1,"message":"279","line":58,"column":12,"nodeType":"249","messageId":"250","endLine":58,"endColumn":22},{"ruleId":"247","severity":1,"message":"280","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"264","line":3,"column":20,"nodeType":"249","messageId":"250","endLine":3,"endColumn":26},{"ruleId":"247","severity":1,"message":"281","line":3,"column":33,"nodeType":"249","messageId":"250","endLine":3,"endColumn":44},{"ruleId":"247","severity":1,"message":"282","line":3,"column":46,"nodeType":"249","messageId":"250","endLine":3,"endColumn":49},{"ruleId":"247","severity":1,"message":"279","line":38,"column":11,"nodeType":"249","messageId":"250","endLine":38,"endColumn":21},{"ruleId":"247","severity":1,"message":"283","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":23},{"ruleId":"247","severity":1,"message":"252","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"284","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":15},{"ruleId":"285","severity":1,"message":"286","line":21,"column":92,"nodeType":"287","messageId":"288","endLine":21,"endColumn":94},{"ruleId":"255","severity":1,"message":"289","line":36,"column":7,"nodeType":"267","endLine":36,"endColumn":28,"suggestions":"290"},{"ruleId":"247","severity":1,"message":"291","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":14},{"ruleId":"247","severity":1,"message":"292","line":9,"column":20,"nodeType":"249","messageId":"250","endLine":9,"endColumn":27},{"ruleId":"255","severity":1,"message":"293","line":49,"column":7,"nodeType":"267","endLine":49,"endColumn":42,"suggestions":"294"},{"ruleId":"285","severity":1,"message":"286","line":57,"column":34,"nodeType":"287","messageId":"288","endLine":57,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":103,"column":26,"nodeType":"287","messageId":"288","endLine":103,"endColumn":28},{"ruleId":"272","severity":1,"message":"273","line":113,"column":13,"nodeType":"274","endLine":115,"endColumn":30},{"ruleId":"272","severity":1,"message":"273","line":131,"column":17,"nodeType":"274","endLine":133,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":143,"column":21,"nodeType":"274","endLine":143,"endColumn":131},{"ruleId":"247","severity":1,"message":"261","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":18},{"ruleId":"247","severity":1,"message":"252","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"279","line":11,"column":12,"nodeType":"249","messageId":"250","endLine":11,"endColumn":22},{"ruleId":"247","severity":1,"message":"295","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":13},{"ruleId":"285","severity":1,"message":"286","line":5,"column":23,"nodeType":"287","messageId":"288","endLine":5,"endColumn":25},{"ruleId":"247","severity":1,"message":"252","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"247","severity":1,"message":"296","line":13,"column":9,"nodeType":"249","messageId":"250","endLine":13,"endColumn":17},{"ruleId":"247","severity":1,"message":"279","line":15,"column":12,"nodeType":"249","messageId":"250","endLine":15,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":24,"column":87,"nodeType":"287","messageId":"288","endLine":24,"endColumn":89},{"ruleId":"272","severity":1,"message":"273","line":31,"column":25,"nodeType":"274","endLine":31,"endColumn":118},{"ruleId":"255","severity":1,"message":"297","line":69,"column":7,"nodeType":"267","endLine":69,"endColumn":25,"suggestions":"298"},{"ruleId":"247","severity":1,"message":"252","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"247","severity":1,"message":"279","line":16,"column":12,"nodeType":"249","messageId":"250","endLine":16,"endColumn":22},{"ruleId":"285","severity":1,"message":"299","line":26,"column":91,"nodeType":"287","messageId":"288","endLine":26,"endColumn":93},{"ruleId":"272","severity":1,"message":"273","line":33,"column":29,"nodeType":"274","endLine":33,"endColumn":122},{"ruleId":"285","severity":1,"message":"286","line":51,"column":54,"nodeType":"287","messageId":"288","endLine":51,"endColumn":56},{"ruleId":"255","severity":1,"message":"297","line":91,"column":7,"nodeType":"267","endLine":91,"endColumn":31,"suggestions":"300"},{"ruleId":"247","severity":1,"message":"252","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"247","severity":1,"message":"279","line":17,"column":12,"nodeType":"249","messageId":"250","endLine":17,"endColumn":22},{"ruleId":"272","severity":1,"message":"273","line":37,"column":25,"nodeType":"274","endLine":37,"endColumn":138},{"ruleId":"301","severity":1,"message":"302","line":57,"column":84,"nodeType":"303","messageId":"288","endLine":57,"endColumn":92},{"ruleId":"255","severity":1,"message":"297","line":95,"column":7,"nodeType":"267","endLine":95,"endColumn":31,"suggestions":"304"},{"ruleId":"247","severity":1,"message":"305","line":1,"column":37,"nodeType":"249","messageId":"250","endLine":1,"endColumn":44},{"ruleId":"247","severity":1,"message":"252","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":13},{"ruleId":"247","severity":1,"message":"306","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":19},{"ruleId":"247","severity":1,"message":"279","line":17,"column":12,"nodeType":"249","messageId":"250","endLine":17,"endColumn":22},{"ruleId":"272","severity":1,"message":"273","line":31,"column":17,"nodeType":"274","endLine":33,"endColumn":34},{"ruleId":"285","severity":1,"message":"299","line":50,"column":83,"nodeType":"287","messageId":"288","endLine":50,"endColumn":85},{"ruleId":"285","severity":1,"message":"286","line":54,"column":34,"nodeType":"287","messageId":"288","endLine":54,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":56,"column":39,"nodeType":"287","messageId":"288","endLine":56,"endColumn":41},{"ruleId":"255","severity":1,"message":"307","line":113,"column":7,"nodeType":"267","endLine":113,"endColumn":35,"suggestions":"308"},{"ruleId":"285","severity":1,"message":"286","line":176,"column":27,"nodeType":"287","messageId":"288","endLine":176,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":180,"column":13,"nodeType":"274","endLine":180,"endColumn":64},{"ruleId":"247","severity":1,"message":"309","line":3,"column":41,"nodeType":"249","messageId":"250","endLine":3,"endColumn":47},{"ruleId":"247","severity":1,"message":"252","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"247","severity":1,"message":"279","line":15,"column":12,"nodeType":"249","messageId":"250","endLine":15,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":28,"column":78,"nodeType":"287","messageId":"288","endLine":28,"endColumn":80},{"ruleId":"310","severity":1,"message":"311","line":30,"column":25,"nodeType":"312","messageId":"313","endLine":30,"endColumn":32},{"ruleId":"272","severity":1,"message":"273","line":40,"column":29,"nodeType":"274","endLine":40,"endColumn":93},{"ruleId":"255","severity":1,"message":"314","line":81,"column":7,"nodeType":"267","endLine":81,"endColumn":25,"suggestions":"315"},{"ruleId":"285","severity":1,"message":"286","line":7,"column":21,"nodeType":"287","messageId":"288","endLine":7,"endColumn":23},{"ruleId":"272","severity":1,"message":"273","line":11,"column":21,"nodeType":"274","endLine":11,"endColumn":62},{"ruleId":"285","severity":1,"message":"286","line":25,"column":21,"nodeType":"287","messageId":"288","endLine":25,"endColumn":23},{"ruleId":"272","severity":1,"message":"273","line":29,"column":21,"nodeType":"274","endLine":29,"endColumn":62},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Title' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["318"],["316"],["317"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Banner' is defined but never used.","'Navbar' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCategory'. Either include it or remove the dependency array.","ArrayExpression",["319"],"'Nav' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ImageUpload' is defined but never used.","'images' is assigned a value but never used.","'onChangeImage' is assigned a value but never used.","'onError' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'Link' is defined but never used.","'NavDropdown' is defined but never used.","'Col' is defined but never used.","'DisplayProducts' is defined but never used.","'Loading' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["320"],"'Logout' is defined but never used.","'setDate' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.",["321"],"'react' is defined but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["322"],"Expected '!==' and instead saw '!='.",["323"],"no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression",["324"],"'useMemo' is defined but never used.","'placeholder' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchOrders' and 'fetchProduct'. Either include them or remove the dependency array.",["325"],"'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'fetchCarts'. Either include it or remove the dependency array.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [fetchData]",{"range":"344","text":"345"},"Update the dependencies array to be: [fetchCategory]",{"range":"346","text":"347"},"Update the dependencies array to be: [fetchProducts, match.params.number]",{"range":"348","text":"349"},"Update the dependencies array to be: [match.params.number, like.checked, fetchProduct]",{"range":"350","text":"351"},"Update the dependencies array to be: [fetchOrders, userData.user_id]",{"range":"352","text":"353"},"Update the dependencies array to be: [userData.user_id, flag, fetchOrders]",{"range":"354","text":"355"},{"range":"356","text":"355"},"Update the dependencies array to be: [userData.user_id, btnValue, fetchProduct, fetchOrders]",{"range":"357","text":"358"},"Update the dependencies array to be: [fetchCarts, userData.user_id]",{"range":"359","text":"360"},[797,801],"[fetchData]",[1286,1288],"[fetchCategory]",[1095,1116],"[fetchProducts, match.params.number]",[1746,1781],"[match.params.number, like.checked, fetchProduct]",[2364,2382],"[fetchOrders, userData.user_id]",[3547,3571],"[userData.user_id, flag, fetchOrders]",[3494,3518],[3997,4025],"[userData.user_id, btnValue, fetchProduct, fetchOrders]",[2831,2849],"[fetchCarts, userData.user_id]"]